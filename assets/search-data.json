[{"id":"0","title":"nvf manual {#nvf-manual}","content":"nvf manual {#nvf-manual} Version @NVF_VERSION@ ","path":""},{"id":"1","title":"Option: _module.args","content":"Additional arguments passed to each module in addition to ones\nlike `lib`, `config`,\nand `pkgs`, `modulesPath`.\n\nThis option is also available to all submodules. Submodules do not\ninherit args from their parent module, nor do they provide args to\ntheir parent module or sibling submodules. The sole exception to\nthis is the argument `name` which is provided by\nparent modules to a submodule and contains the attribute name\nthe submodule is bound to, or a unique generated name if it is\nnot bound to an attribute.\n\nSome arguments are already passed by default, of which the\nfollowing *cannot* be changed with this option:\n- {var}`lib`: The nixpkgs library.\n- {var}`config`: The results of all options after merging the values from all modules together.\n- {var}`options`: The options declared in all modules.\n- {var}`specialArgs`: The `specialArgs` argument passed to `evalModules`.\n- All attributes of {var}`specialArgs`\n\n  Whereas option values can generally depend on other option values\n  thanks to laziness, this does not apply to `imports`, which\n  must be computed statically before anything else.\n\n  For this reason, callers of the module system can provide `specialArgs`\n  which are available during import resolution.\n\n  For NixOS, `specialArgs` includes\n  {var}`modulesPath`, which allows you to import\n  extra modules from the nixpkgs package tree without having to\n  somehow make the module aware of the location of the\n  `nixpkgs` or NixOS directories.\n  ```\n  { modulesPath, ... }: {\n    imports = [\n      (modulesPath + \"/profiles/minimal.nix\")\n    ];\n  }\n  ```\n\nFor NixOS, the default value for this option includes at least this argument:\n- {var}`pkgs`: The nixpkgs package set according to\n  the {option}`nixpkgs.pkgs` option.\n","path":"options.html#option-_module-args"},{"id":"2","title":"Option: vim.additionalRuntimePaths","content":"Additional runtime paths that will be appended to the\nactive runtimepath of the Neovim. This can be used to\nadd additional lookup paths for configs, plugins, spell\nlanguages and other things you would generally place in\nyour {file}`$HOME/.config/nvim`.\n\nThis is meant as a declarative alternative to throwing\nfiles into {file}`~/.config/nvim` and having the Neovim\nwrapper pick them up. For more details on\n`vim.o.runtimepath`, and what paths to use; please see\n[the official documentation](https://neovim.io/doc/user/options.html#'runtimepath')\n","path":"options.html#option-vim-additionalRuntimePaths"},{"id":"3","title":"Option: vim.assistant.avante-nvim.enable","content":"Whether to enable complementary Neovim plugin for avante.nvim.","path":"options.html#option-vim-assistant-avante-nvim-enable"},{"id":"4","title":"Option: vim.assistant.avante-nvim.setupOpts","content":"Option table to pass into the setup function of avante-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts"},{"id":"5","title":"Option: vim.assistant.avante-nvim.setupOpts.auto_suggestions_provider","content":"Since auto-suggestions are a high-frequency operation and therefore expensive,\ncurrently designating it as `copilot` provider is dangerous because:\nhttps://github.com/yetone/avante.nvim/issues/1048\nOf course, you can reduce the request frequency by increasing `suggestion.debounce`.\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-auto_suggestions_provider"},{"id":"6","title":"Option: vim.assistant.avante-nvim.setupOpts.behaviour.auto_apply_diff_after_generation","content":"Whether to enable automatically apply diff after LLM response..","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-behaviour-auto_apply_diff_after_generation"},{"id":"7","title":"Option: vim.assistant.avante-nvim.setupOpts.behaviour.auto_set_highlight_group","content":"Whether to enable automatically set the highlight group for the current line..","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-behaviour-auto_set_highlight_group"},{"id":"8","title":"Option: vim.assistant.avante-nvim.setupOpts.behaviour.auto_set_keymaps","content":"Whether to enable automatically set the keymap for the current line..","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-behaviour-auto_set_keymaps"},{"id":"9","title":"Option: vim.assistant.avante-nvim.setupOpts.behaviour.auto_suggestions","content":"Whether to enable auto suggestions..","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-behaviour-auto_suggestions"},{"id":"10","title":"Option: vim.assistant.avante-nvim.setupOpts.behaviour.enable_claude_text_editor_tool_mode","content":"Whether to enable Claude Text Editor Tool Mode..","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-behaviour-enable_claude_text_editor_tool_mode"},{"id":"11","title":"Option: vim.assistant.avante-nvim.setupOpts.behaviour.enable_cursor_planning_mode","content":"Whether to enable Cursor Planning Mode..","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-behaviour-enable_cursor_planning_mode"},{"id":"12","title":"Option: vim.assistant.avante-nvim.setupOpts.behaviour.enable_token_counting","content":"Whether to enable token counting..","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-behaviour-enable_token_counting"},{"id":"13","title":"Option: vim.assistant.avante-nvim.setupOpts.behaviour.minimize_diff","content":"Whether to enable remove unchanged lines when applying a code block..","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-behaviour-minimize_diff"},{"id":"14","title":"Option: vim.assistant.avante-nvim.setupOpts.behaviour.support_paste_from_clipboard","content":"Whether to enable pasting image from clipboard.\nThis will be determined automatically based whether img-clip is available or not.\n.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-behaviour-support_paste_from_clipboard"},{"id":"15","title":"Option: vim.assistant.avante-nvim.setupOpts.cursor_applying_provider","content":"The provider used in the applying phase of Cursor Planning Mode, defaults to `nil`,\nConfig.provider will be used as the provider for the applying phase when `nil`.\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-cursor_applying_provider"},{"id":"16","title":"Option: vim.assistant.avante-nvim.setupOpts.diff.autojump","content":"Automatically jumps to the next change.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-diff-autojump"},{"id":"17","title":"Option: vim.assistant.avante-nvim.setupOpts.diff.override_timeoutlen","content":"Override the 'timeoutlen' setting while hovering over a diff (see {command}`:help timeoutlen`).\nHelps to avoid entering operator-pending mode with diff mappings starting with `c`.\nDisable by setting to -1.\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-diff-override_timeoutlen"},{"id":"18","title":"Option: vim.assistant.avante-nvim.setupOpts.dual_boost.enabled","content":"Whether to enable dual_boost mode..","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-dual_boost-enabled"},{"id":"19","title":"Option: vim.assistant.avante-nvim.setupOpts.dual_boost.first_provider","content":"The first provider to generate response.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-dual_boost-first_provider"},{"id":"20","title":"Option: vim.assistant.avante-nvim.setupOpts.dual_boost.prompt","content":"The prompt to generate response based on the two reference outputs.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-dual_boost-prompt"},{"id":"21","title":"Option: vim.assistant.avante-nvim.setupOpts.dual_boost.second_provider","content":"The second provider to generate response.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-dual_boost-second_provider"},{"id":"22","title":"Option: vim.assistant.avante-nvim.setupOpts.dual_boost.timeout","content":"Timeout in milliseconds.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-dual_boost-timeout"},{"id":"23","title":"Option: vim.assistant.avante-nvim.setupOpts.hints.enabled","content":"Whether to enable hints.\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-hints-enabled"},{"id":"24","title":"Option: vim.assistant.avante-nvim.setupOpts.mappings.cancel","content":"Define or override the default keymaps for cancel actions.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-mappings-cancel"},{"id":"25","title":"Option: vim.assistant.avante-nvim.setupOpts.mappings.diff","content":"Define or override the default keymaps for diff.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-mappings-diff"},{"id":"26","title":"Option: vim.assistant.avante-nvim.setupOpts.mappings.jump","content":"Define or override the default keymaps for jump actions.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-mappings-jump"},{"id":"27","title":"Option: vim.assistant.avante-nvim.setupOpts.mappings.sidebar","content":"Define or override the default keymaps for sidebar actions.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-mappings-sidebar"},{"id":"28","title":"Option: vim.assistant.avante-nvim.setupOpts.mappings.submit","content":"Define or override the default keymaps for submit actions.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-mappings-submit"},{"id":"29","title":"Option: vim.assistant.avante-nvim.setupOpts.mappings.suggestion","content":"Define or override the default keymaps for suggestion actions.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-mappings-suggestion"},{"id":"30","title":"Option: vim.assistant.avante-nvim.setupOpts.provider","content":"The provider used in Aider mode or in the planning phase of Cursor Planning Mode.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-provider"},{"id":"31","title":"Option: vim.assistant.avante-nvim.setupOpts.suggestion.debounce","content":"Suggestion debounce in milliseconds.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-suggestion-debounce"},{"id":"32","title":"Option: vim.assistant.avante-nvim.setupOpts.suggestion.throttle","content":"Suggestion throttle in milliseconds.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-suggestion-throttle"},{"id":"33","title":"Option: vim.assistant.avante-nvim.setupOpts.vendors","content":"Define Your Custom providers.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-vendors"},{"id":"34","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.ask.border","content":"The border type on the ask window.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-ask-border"},{"id":"35","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.ask.floating","content":"Open the 'AvanteAsk' prompt in a floating window.\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-ask-floating"},{"id":"36","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.ask.focus_on_apply","content":"Which diff to focus after applying.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-ask-focus_on_apply"},{"id":"37","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.ask.start_insert","content":"Start insert mode when opening the ask window.\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-ask-start_insert"},{"id":"38","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.edit.border","content":"The border type on the edit window.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-edit-border"},{"id":"39","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.edit.start_insert","content":"Start insert mode when opening the edit window.\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-edit-start_insert"},{"id":"40","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.input.height","content":"Height of the input window in vertical layout.\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-input-height"},{"id":"41","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.input.prefix","content":"The prefix used on the user input.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-input-prefix"},{"id":"42","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.position","content":"The position of the sidebar.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-position"},{"id":"43","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.sidebar_header.align","content":"Position of the title.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-sidebar_header-align"},{"id":"44","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.sidebar_header.enabled","content":"enable/disable the header.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-sidebar_header-enabled"},{"id":"45","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.sidebar_header.rounded","content":"Enable rounded sidebar header","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-sidebar_header-rounded"},{"id":"46","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.width","content":"Default % based on available width.","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-width"},{"id":"47","title":"Option: vim.assistant.avante-nvim.setupOpts.windows.wrap","content":"similar to vim.o.wrap.\n","path":"options.html#option-vim-assistant-avante-nvim-setupOpts-windows-wrap"},{"id":"48","title":"Option: vim.assistant.chatgpt.enable","content":"Whether to enable ChatGPT AI assistant. Requires the environment variable OPENAI_API_KEY to be set.","path":"options.html#option-vim-assistant-chatgpt-enable"},{"id":"49","title":"Option: vim.assistant.chatgpt.mappings.addTests","content":"[ChatGPT] Add tests","path":"options.html#option-vim-assistant-chatgpt-mappings-addTests"},{"id":"50","title":"Option: vim.assistant.chatgpt.mappings.chatGpt","content":"ChatGPT","path":"options.html#option-vim-assistant-chatgpt-mappings-chatGpt"},{"id":"51","title":"Option: vim.assistant.chatgpt.mappings.docstring","content":"[ChatGPT] Docstring","path":"options.html#option-vim-assistant-chatgpt-mappings-docstring"},{"id":"52","title":"Option: vim.assistant.chatgpt.mappings.editWithInstructions","content":"[ChatGPT] Edit with instructions","path":"options.html#option-vim-assistant-chatgpt-mappings-editWithInstructions"},{"id":"53","title":"Option: vim.assistant.chatgpt.mappings.explain","content":"[ChatGPT] Explain code","path":"options.html#option-vim-assistant-chatgpt-mappings-explain"},{"id":"54","title":"Option: vim.assistant.chatgpt.mappings.fixBugs","content":"[ChatGPT] Fix bugs","path":"options.html#option-vim-assistant-chatgpt-mappings-fixBugs"},{"id":"55","title":"Option: vim.assistant.chatgpt.mappings.grammarCorrection","content":"[ChatGPT] Grammar correction","path":"options.html#option-vim-assistant-chatgpt-mappings-grammarCorrection"},{"id":"56","title":"Option: vim.assistant.chatgpt.mappings.keyword","content":"[ChatGPT] Keywords","path":"options.html#option-vim-assistant-chatgpt-mappings-keyword"},{"id":"57","title":"Option: vim.assistant.chatgpt.mappings.optimize","content":"[ChatGPT] Optimize code","path":"options.html#option-vim-assistant-chatgpt-mappings-optimize"},{"id":"58","title":"Option: vim.assistant.chatgpt.mappings.readabilityanalysis","content":"[ChatGPT] Code reability analysis","path":"options.html#option-vim-assistant-chatgpt-mappings-readabilityanalysis"},{"id":"59","title":"Option: vim.assistant.chatgpt.mappings.roxygenEdit","content":"[ChatGPT] Roxygen edit","path":"options.html#option-vim-assistant-chatgpt-mappings-roxygenEdit"},{"id":"60","title":"Option: vim.assistant.chatgpt.mappings.summarize","content":"[ChatGPT] Summarize","path":"options.html#option-vim-assistant-chatgpt-mappings-summarize"},{"id":"61","title":"Option: vim.assistant.chatgpt.mappings.translate","content":"[ChatGPT] Translate","path":"options.html#option-vim-assistant-chatgpt-mappings-translate"},{"id":"62","title":"Option: vim.assistant.chatgpt.setupOpts","content":"Option table to pass into the setup function of chatgpt\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-assistant-chatgpt-setupOpts"},{"id":"63","title":"Option: vim.assistant.codecompanion-nvim.enable","content":"Whether to enable complementary neovim plugin for codecompanion.nvim.","path":"options.html#option-vim-assistant-codecompanion-nvim-enable"},{"id":"64","title":"Option: vim.assistant.codecompanion-nvim.setupOpts","content":"Option table to pass into the setup function of codecompanion-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts"},{"id":"65","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.adapters","content":"An adapter is what connects Neovim to an LLM.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-adapters"},{"id":"66","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.action_palette.height","content":"Height of the action palette.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-action_palette-height"},{"id":"67","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.action_palette.opts.show_default_actions","content":"Whether to enable showing default\nactions in the action palette.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-action_palette-opts-show_default_actions"},{"id":"68","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.action_palette.opts.show_default_prompt_library","content":"Whether to enable showing default\nprompt library in the action palette.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-action_palette-opts-show_default_prompt_library"},{"id":"69","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.action_palette.prompt","content":"Prompt used for interactive LLM calls.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-action_palette-prompt"},{"id":"70","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.action_palette.provider","content":"Provider used for the action palette.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-action_palette-provider"},{"id":"71","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.action_palette.width","content":"Width of the action palette.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-action_palette-width"},{"id":"72","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.auto_scroll","content":"Whether to enable automatic page scrolling.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-auto_scroll"},{"id":"73","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.icons.pinned_buffer","content":"The icon to represent a pinned buffer.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-icons-pinned_buffer"},{"id":"74","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.icons.watched_buffer","content":"The icon to represent a watched buffer.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-icons-watched_buffer"},{"id":"75","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.intro_message","content":"Message to appear in chat buffer.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-intro_message"},{"id":"76","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.separator","content":"The separator between the\ndifferent messages in the chat buffer.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-separator"},{"id":"77","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.show_header_separator","content":"Whether to enable header separators in the chat buffer.\n\nSet this to false if you're using an\nexternal markdown formatting plugin.\n.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-show_header_separator"},{"id":"78","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.show_references","content":"Whether to enable references in the chat buffer.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-show_references"},{"id":"79","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.show_settings","content":"Whether to enable LLM settings to appear at the top of the chat buffer.\n.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-show_settings"},{"id":"80","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.show_token_count","content":"Whether to enable the token count for each response.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-show_token_count"},{"id":"81","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.chat.start_in_insert_mode","content":"Whether to enable opening the chat buffer in insert mode.\n.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-chat-start_in_insert_mode"},{"id":"82","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.diff.close_chat_at","content":"Close an open chat buffer if the\ntotal columns of your display are less than...\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-diff-close_chat_at"},{"id":"83","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.diff.enabled","content":"Whether to enable a diff view\nto see the changes made by the LLM.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-diff-enabled"},{"id":"84","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.diff.layout","content":"Type of split for default provider.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-diff-layout"},{"id":"85","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.diff.provider","content":"The preferred kind of provider.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-diff-provider"},{"id":"86","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.display.inline.layout","content":"Customize how output is created in new buffer.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-display-inline-layout"},{"id":"87","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.opts.language","content":"Specify which language an LLM should respond in.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-opts-language"},{"id":"88","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.opts.log_level","content":"Change the level of logging.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-opts-log_level"},{"id":"89","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.opts.send_code","content":"Whether to enable code being sent to the LLM.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-opts-send_code"},{"id":"90","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.prompt_library","content":"A prompt library is a collection of prompts\nthat can be used in the action palette.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-prompt_library"},{"id":"91","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.chat.adapter","content":"Adapter used for the chat strategy.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-chat-adapter"},{"id":"92","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.chat.keymaps","content":"Define or override the default keymaps.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-chat-keymaps"},{"id":"93","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.chat.roles","content":"The chat buffer places user and LLM responses under a H2 header.\nThese can be customized in the configuration.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-chat-roles"},{"id":"94","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.chat.slash_commands","content":"Slash Commands (invoked with /) let you dynamically\ninsert context into the chat buffer,\nsuch as file contents or date/time.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-chat-slash_commands"},{"id":"95","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.chat.tools","content":"Configure tools to perform specific\ntasks when invoked by an LLM.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-chat-tools"},{"id":"96","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.chat.variables","content":"Define your own variables\nto share specific content.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-chat-variables"},{"id":"97","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.inline.adapter","content":"Adapter used for the inline strategy.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-inline-adapter"},{"id":"98","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.inline.keymaps.accept_change.n","content":"Accept the suggested change.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-inline-keymaps-accept_change-n"},{"id":"99","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.inline.keymaps.reject_change.n","content":"Reject the suggested change.","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-inline-keymaps-reject_change-n"},{"id":"100","title":"Option: vim.assistant.codecompanion-nvim.setupOpts.strategies.inline.variables","content":"Define your own variables\nto share specific content.\n","path":"options.html#option-vim-assistant-codecompanion-nvim-setupOpts-strategies-inline-variables"},{"id":"101","title":"Option: vim.assistant.copilot.cmp.enable","content":"Whether to enable nvim-cmp integration for GitHub Copilot.","path":"options.html#option-vim-assistant-copilot-cmp-enable"},{"id":"102","title":"Option: vim.assistant.copilot.enable","content":"Whether to enable GitHub Copilot AI assistant.","path":"options.html#option-vim-assistant-copilot-enable"},{"id":"103","title":"Option: vim.assistant.copilot.mappings.panel.accept","content":"Accept suggestion","path":"options.html#option-vim-assistant-copilot-mappings-panel-accept"},{"id":"104","title":"Option: vim.assistant.copilot.mappings.panel.jumpNext","content":"Jump to next suggestion","path":"options.html#option-vim-assistant-copilot-mappings-panel-jumpNext"},{"id":"105","title":"Option: vim.assistant.copilot.mappings.panel.jumpPrev","content":"Jump to previous suggestion","path":"options.html#option-vim-assistant-copilot-mappings-panel-jumpPrev"},{"id":"106","title":"Option: vim.assistant.copilot.mappings.panel.open","content":"Open suggestions","path":"options.html#option-vim-assistant-copilot-mappings-panel-open"},{"id":"107","title":"Option: vim.assistant.copilot.mappings.panel.refresh","content":"Refresh suggestions","path":"options.html#option-vim-assistant-copilot-mappings-panel-refresh"},{"id":"108","title":"Option: vim.assistant.copilot.mappings.suggestion.accept","content":"Accept suggetion","path":"options.html#option-vim-assistant-copilot-mappings-suggestion-accept"},{"id":"109","title":"Option: vim.assistant.copilot.mappings.suggestion.acceptLine","content":"Accept next line","path":"options.html#option-vim-assistant-copilot-mappings-suggestion-acceptLine"},{"id":"110","title":"Option: vim.assistant.copilot.mappings.suggestion.acceptWord","content":"Accept next word","path":"options.html#option-vim-assistant-copilot-mappings-suggestion-acceptWord"},{"id":"111","title":"Option: vim.assistant.copilot.mappings.suggestion.dismiss","content":"Dismiss suggestion","path":"options.html#option-vim-assistant-copilot-mappings-suggestion-dismiss"},{"id":"112","title":"Option: vim.assistant.copilot.mappings.suggestion.next","content":"Next suggestion","path":"options.html#option-vim-assistant-copilot-mappings-suggestion-next"},{"id":"113","title":"Option: vim.assistant.copilot.mappings.suggestion.prev","content":"Previous suggestion","path":"options.html#option-vim-assistant-copilot-mappings-suggestion-prev"},{"id":"114","title":"Option: vim.assistant.copilot.setupOpts","content":"Option table to pass into the setup function of Copilot\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-assistant-copilot-setupOpts"},{"id":"115","title":"Option: vim.assistant.copilot.setupOpts.copilot_node_command","content":"The command that will be executed to initiate nodejs for GitHub Copilot.\nRecommended to leave as default.\n","path":"options.html#option-vim-assistant-copilot-setupOpts-copilot_node_command"},{"id":"116","title":"Option: vim.assistant.copilot.setupOpts.panel.enabled","content":"Whether to enable Completion Panel.","path":"options.html#option-vim-assistant-copilot-setupOpts-panel-enabled"},{"id":"117","title":"Option: vim.assistant.copilot.setupOpts.panel.layout.position","content":"Panel position","path":"options.html#option-vim-assistant-copilot-setupOpts-panel-layout-position"},{"id":"118","title":"Option: vim.assistant.copilot.setupOpts.panel.layout.ratio","content":"Panel size","path":"options.html#option-vim-assistant-copilot-setupOpts-panel-layout-ratio"},{"id":"119","title":"Option: vim.assistant.copilot.setupOpts.suggestion.enabled","content":"Whether to enable Suggestions.","path":"options.html#option-vim-assistant-copilot-setupOpts-suggestion-enabled"},{"id":"120","title":"Option: vim.augroups","content":"A list of Neovim autogroups, which are used to organize and manage related\nautocommands together. Groups allow multiple autocommands to be cleared\nor redefined collectively, preventing duplicate definitions.\n\nEach autogroup consists of a name and a boolean indicating whether to clear\nexisting autocommands.\n","path":"options.html#option-vim-augroups"},{"id":"121","title":"Option: vim.augroups.*.clear","content":"Whether to clear existing autocommands in this group before defining new ones.\nThis helps avoid duplicate autocommands.\n","path":"options.html#option-vim-augroups-*-clear"},{"id":"122","title":"Option: vim.augroups.*.enable","content":"Whether to enable this autocommand group.","path":"options.html#option-vim-augroups-*-enable"},{"id":"123","title":"Option: vim.augroups.*.name","content":"The name of the autocommand group.","path":"options.html#option-vim-augroups-*-name"},{"id":"124","title":"Option: vim.autocmds","content":"A list of Neovim autocommands to be registered.\n\nEach entry defines an autocommand, specifying events, patterns, a callback or Vim\ncommand, an optional group, a description, and execution settings.\n","path":"options.html#option-vim-autocmds"},{"id":"125","title":"Option: vim.autocmds.*.callback","content":"Lua function to be called when the event(s) are triggered.","path":"options.html#option-vim-autocmds-*-callback"},{"id":"126","title":"Option: vim.autocmds.*.command","content":"Vim command to be executed when the event(s) are triggered.\nCannot be defined if the `callback` option is already defined.\n","path":"options.html#option-vim-autocmds-*-command"},{"id":"127","title":"Option: vim.autocmds.*.desc","content":"A description for the autocommand.","path":"options.html#option-vim-autocmds-*-desc"},{"id":"128","title":"Option: vim.autocmds.*.enable","content":"Whether to enable this autocommand.","path":"options.html#option-vim-autocmds-*-enable"},{"id":"129","title":"Option: vim.autocmds.*.event","content":"The event(s) that trigger the autocommand.","path":"options.html#option-vim-autocmds-*-event"},{"id":"130","title":"Option: vim.autocmds.*.group","content":"An optional autocommand group to manage related autocommands.","path":"options.html#option-vim-autocmds-*-group"},{"id":"131","title":"Option: vim.autocmds.*.nested","content":"Whether to allow nested autocommands to trigger.","path":"options.html#option-vim-autocmds-*-nested"},{"id":"132","title":"Option: vim.autocmds.*.once","content":"Whether to run the autocommand only once.","path":"options.html#option-vim-autocmds-*-once"},{"id":"133","title":"Option: vim.autocmds.*.pattern","content":"The file pattern(s) that determine when the autocommand applies.","path":"options.html#option-vim-autocmds-*-pattern"},{"id":"134","title":"Option: vim.autocomplete.blink-cmp.enable","content":"Whether to enable blink.cmp.","path":"options.html#option-vim-autocomplete-blink-cmp-enable"},{"id":"135","title":"Option: vim.autocomplete.blink-cmp.friendly-snippets.enable","content":"Whether to enable friendly-snippets for blink to source from automatically.","path":"options.html#option-vim-autocomplete-blink-cmp-friendly-snippets-enable"},{"id":"136","title":"Option: vim.autocomplete.blink-cmp.mappings.close","content":"Close [blink.cmp]","path":"options.html#option-vim-autocomplete-blink-cmp-mappings-close"},{"id":"137","title":"Option: vim.autocomplete.blink-cmp.mappings.complete","content":"Complete [blink.cmp]","path":"options.html#option-vim-autocomplete-blink-cmp-mappings-complete"},{"id":"138","title":"Option: vim.autocomplete.blink-cmp.mappings.confirm","content":"Confirm [blink.cmp]","path":"options.html#option-vim-autocomplete-blink-cmp-mappings-confirm"},{"id":"139","title":"Option: vim.autocomplete.blink-cmp.mappings.next","content":"Next item [blink.cmp]","path":"options.html#option-vim-autocomplete-blink-cmp-mappings-next"},{"id":"140","title":"Option: vim.autocomplete.blink-cmp.mappings.previous","content":"Previous item [blink.cmp]","path":"options.html#option-vim-autocomplete-blink-cmp-mappings-previous"},{"id":"141","title":"Option: vim.autocomplete.blink-cmp.mappings.scrollDocsDown","content":"Scroll docs down [blink.cmp]","path":"options.html#option-vim-autocomplete-blink-cmp-mappings-scrollDocsDown"},{"id":"142","title":"Option: vim.autocomplete.blink-cmp.mappings.scrollDocsUp","content":"Scroll docs up [blink.cmp]","path":"options.html#option-vim-autocomplete-blink-cmp-mappings-scrollDocsUp"},{"id":"143","title":"Option: vim.autocomplete.blink-cmp.setupOpts","content":"Option table to pass into the setup function of blink.cmp\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts"},{"id":"144","title":"Option: vim.autocomplete.blink-cmp.setupOpts.cmdline.keymap","content":"blink.cmp cmdline keymap","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-cmdline-keymap"},{"id":"145","title":"Option: vim.autocomplete.blink-cmp.setupOpts.cmdline.keymap.preset","content":"keymap presets","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-cmdline-keymap-preset"},{"id":"146","title":"Option: vim.autocomplete.blink-cmp.setupOpts.cmdline.sources","content":"List of sources to enable for cmdline. Null means use default source list.","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-cmdline-sources"},{"id":"147","title":"Option: vim.autocomplete.blink-cmp.setupOpts.completion.documentation.auto_show","content":"Show documentation whenever an item is selected","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-completion-documentation-auto_show"},{"id":"148","title":"Option: vim.autocomplete.blink-cmp.setupOpts.completion.documentation.auto_show_delay_ms","content":"Delay before auto show triggers","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-completion-documentation-auto_show_delay_ms"},{"id":"149","title":"Option: vim.autocomplete.blink-cmp.setupOpts.completion.menu.auto_show","content":"Manages the appearance of the completion menu. You may prevent the menu\nfrom automatically showing by this option to `false` and manually showing\nit with the show keymap command.\n","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-completion-menu-auto_show"},{"id":"150","title":"Option: vim.autocomplete.blink-cmp.setupOpts.fuzzy.implementation","content":"fuzzy matcher implementation for Blink.\n\n* `\"lua\"`: slower, Lua native fuzzy matcher implementation\n* `\"rust\": use the SIMD fuzzy matcher, 'frizbee'\n* `\"prefer_rust\"`: use the rust implementation, but fall back to lua\n* `\"prefer_rust_with_warning\"`: use the rust implementation, and fall back to lua\n  if it is not available after emitting a warning.\n","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-fuzzy-implementation"},{"id":"151","title":"Option: vim.autocomplete.blink-cmp.setupOpts.fuzzy.prebuilt_binaries.download","content":"Auto-downloads prebuilt binaries.\n\n::: .{warning}\nDo not enable this option, as it does **not work** on Nix!\n:::\n","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-fuzzy-prebuilt_binaries-download"},{"id":"152","title":"Option: vim.autocomplete.blink-cmp.setupOpts.keymap","content":"blink.cmp keymap","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-keymap"},{"id":"153","title":"Option: vim.autocomplete.blink-cmp.setupOpts.keymap.preset","content":"keymap presets","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-keymap-preset"},{"id":"154","title":"Option: vim.autocomplete.blink-cmp.setupOpts.sources.default","content":"Default list of sources to enable for completion.","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-sources-default"},{"id":"155","title":"Option: vim.autocomplete.blink-cmp.setupOpts.sources.providers","content":"Settings for completion providers.","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-sources-providers"},{"id":"156","title":"Option: vim.autocomplete.blink-cmp.setupOpts.sources.providers.<name>.module","content":"Provider module.","path":"options.html#option-vim-autocomplete-blink-cmp-setupOpts-sources-providers-<name>-module"},{"id":"157","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins","content":"`blink.cmp` sources.\n\nAttribute names must be source names used in {option}`vim.autocomplete.blink-cmp.setupOpts.sources.default`.\n","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins"},{"id":"158","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.<name>.enable","content":"Whether to enable this source.","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-<name>-enable"},{"id":"159","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.<name>.module","content":"Value of {option}`vim.autocomplete.blink-cmp.setupOpts.sources.providers.<name>.module`.\n\nShould be present in the source's documentation.\n","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-<name>-module"},{"id":"160","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.<name>.package","content":"`blink-cmp` source plugin package.\n","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-<name>-package"},{"id":"161","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.emoji.enable","content":"Whether to enable emoji source.","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-emoji-enable"},{"id":"162","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.emoji.module","content":"Value of {option}`vim.autocomplete.blink-cmp.setupOpts.sources.providers.emoji.module`.\n","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-emoji-module"},{"id":"163","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.emoji.package","content":"`blink-cmp` emoji source plugin package.\n","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-emoji-package"},{"id":"164","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.ripgrep.enable","content":"Whether to enable ripgrep source.","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-ripgrep-enable"},{"id":"165","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.ripgrep.module","content":"Value of {option}`vim.autocomplete.blink-cmp.setupOpts.sources.providers.ripgrep.module`.\n","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-ripgrep-module"},{"id":"166","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.ripgrep.package","content":"`blink-cmp` ripgrep source plugin package.\n","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-ripgrep-package"},{"id":"167","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.spell.enable","content":"Whether to enable spell source.","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-spell-enable"},{"id":"168","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.spell.module","content":"Value of {option}`vim.autocomplete.blink-cmp.setupOpts.sources.providers.spell.module`.\n","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-spell-module"},{"id":"169","title":"Option: vim.autocomplete.blink-cmp.sourcePlugins.spell.package","content":"`blink-cmp` spell source plugin package.\n","path":"options.html#option-vim-autocomplete-blink-cmp-sourcePlugins-spell-package"},{"id":"170","title":"Option: vim.autocomplete.enableSharedCmpSources","content":"Whether to enable sources shared by blink.cmp and nvim-cmp.","path":"options.html#option-vim-autocomplete-enableSharedCmpSources"},{"id":"171","title":"Option: vim.autocomplete.nvim-cmp.enable","content":"Whether to enable nvim-cmp.","path":"options.html#option-vim-autocomplete-nvim-cmp-enable"},{"id":"172","title":"Option: vim.autocomplete.nvim-cmp.format","content":"The function used to customize the completion menu entries. This is\noutside of `setupOpts` to allow for an easier integration with\nlspkind.nvim.\n\nSee `:help cmp-config.formatting.format`.\n","path":"options.html#option-vim-autocomplete-nvim-cmp-format"},{"id":"173","title":"Option: vim.autocomplete.nvim-cmp.mappings.close","content":"Close [nvim-cmp]","path":"options.html#option-vim-autocomplete-nvim-cmp-mappings-close"},{"id":"174","title":"Option: vim.autocomplete.nvim-cmp.mappings.complete","content":"Complete [nvim-cmp]","path":"options.html#option-vim-autocomplete-nvim-cmp-mappings-complete"},{"id":"175","title":"Option: vim.autocomplete.nvim-cmp.mappings.confirm","content":"Confirm [nvim-cmp]","path":"options.html#option-vim-autocomplete-nvim-cmp-mappings-confirm"},{"id":"176","title":"Option: vim.autocomplete.nvim-cmp.mappings.next","content":"Next item [nvim-cmp]","path":"options.html#option-vim-autocomplete-nvim-cmp-mappings-next"},{"id":"177","title":"Option: vim.autocomplete.nvim-cmp.mappings.previous","content":"Previous item [nvim-cmp]","path":"options.html#option-vim-autocomplete-nvim-cmp-mappings-previous"},{"id":"178","title":"Option: vim.autocomplete.nvim-cmp.mappings.scrollDocsDown","content":"Scroll docs down [nvim-cmp]","path":"options.html#option-vim-autocomplete-nvim-cmp-mappings-scrollDocsDown"},{"id":"179","title":"Option: vim.autocomplete.nvim-cmp.mappings.scrollDocsUp","content":"Scroll docs up [nvim-cmp]","path":"options.html#option-vim-autocomplete-nvim-cmp-mappings-scrollDocsUp"},{"id":"180","title":"Option: vim.autocomplete.nvim-cmp.setupOpts","content":"Option table to pass into the setup function of the autocomplete plugin\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-autocomplete-nvim-cmp-setupOpts"},{"id":"181","title":"Option: vim.autocomplete.nvim-cmp.setupOpts.completion.completeopt","content":"A comma-separated list of options for completion.\n\nSee `:help completeopt` for the complete list.\n","path":"options.html#option-vim-autocomplete-nvim-cmp-setupOpts-completion-completeopt"},{"id":"182","title":"Option: vim.autocomplete.nvim-cmp.setupOpts.sorting.comparators","content":"The comparator functions used for sorting completions.\n\nYou can either pass a valid inline lua function\n(see `:help cmp-config.sorting.comparators`),\nor a string, in which case the builtin comparator with that name will\nbe used.\n\nA `deprio` function and a `kinds`\n(`require(\"cmp.types\").lsp.CompletionItemKind`) variable is provided\nabove `setupOpts`. By passing a type to the function, the returned\nfunction will be a comparator that always ranks the specified kind the\nlowest.\n","path":"options.html#option-vim-autocomplete-nvim-cmp-setupOpts-sorting-comparators"},{"id":"183","title":"Option: vim.autocomplete.nvim-cmp.sourcePlugins","content":"List of source plugins used by nvim-cmp.","path":"options.html#option-vim-autocomplete-nvim-cmp-sourcePlugins"},{"id":"184","title":"Option: vim.autocomplete.nvim-cmp.sources","content":"The list of sources used by nvim-cmp","path":"options.html#option-vim-autocomplete-nvim-cmp-sources"},{"id":"185","title":"Option: vim.autopairs.nvim-autopairs.enable","content":"Whether to enable autopairs.","path":"options.html#option-vim-autopairs-nvim-autopairs-enable"},{"id":"186","title":"Option: vim.autopairs.nvim-autopairs.setupOpts","content":"Option table to pass into the setup function of nvim-autopairs\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-autopairs-nvim-autopairs-setupOpts"},{"id":"187","title":"Option: vim.bell","content":"Set how bells are handled. Options: on, visual or none","path":"options.html#option-vim-bell"},{"id":"188","title":"Option: vim.binds.cheatsheet.enable","content":"Whether to enable cheatsheet-nvim: searchable cheatsheet for nvim using telescope.","path":"options.html#option-vim-binds-cheatsheet-enable"},{"id":"189","title":"Option: vim.binds.hardtime-nvim.enable","content":"Whether to enable hardtime helper for no repeat keybinds.","path":"options.html#option-vim-binds-hardtime-nvim-enable"},{"id":"190","title":"Option: vim.binds.hardtime-nvim.setupOpts","content":"Option table to pass into the setup function of hardtime-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-binds-hardtime-nvim-setupOpts"},{"id":"191","title":"Option: vim.binds.whichKey.enable","content":"Whether to enable which-key keybind helper menu.","path":"options.html#option-vim-binds-whichKey-enable"},{"id":"192","title":"Option: vim.binds.whichKey.register","content":"Register label for which-key keybind helper menu","path":"options.html#option-vim-binds-whichKey-register"},{"id":"193","title":"Option: vim.binds.whichKey.setupOpts","content":"Option table to pass into the setup function of which-key\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-binds-whichKey-setupOpts"},{"id":"194","title":"Option: vim.binds.whichKey.setupOpts.notify","content":"Show a warning when issues were detected with mappings","path":"options.html#option-vim-binds-whichKey-setupOpts-notify"},{"id":"195","title":"Option: vim.binds.whichKey.setupOpts.preset","content":"The default preset for the which-key window","path":"options.html#option-vim-binds-whichKey-setupOpts-preset"},{"id":"196","title":"Option: vim.binds.whichKey.setupOpts.replace","content":"Functions/Lua Patterns for formatting the labels","path":"options.html#option-vim-binds-whichKey-setupOpts-replace"},{"id":"197","title":"Option: vim.binds.whichKey.setupOpts.win.border","content":"Which-key window border style","path":"options.html#option-vim-binds-whichKey-setupOpts-win-border"},{"id":"198","title":"Option: vim.build.finalPackage","content":"final output package","path":"options.html#option-vim-build-finalPackage"},{"id":"199","title":"Option: vim.clipboard.enable","content":"Whether to enable clipboard management for Neovim. Users may still choose to manage their\nclipboard through [](#opt-vim.options) should they wish to avoid using\nthis module.\n.","path":"options.html#option-vim-clipboard-enable"},{"id":"200","title":"Option: vim.clipboard.providers","content":"Clipboard providers for which packages will be added to nvf's\n{option}`extraPackages`. The `package` field may be set to `null`\nif related packages are already found in system packages to\npotentially reduce closure sizes.\n","path":"options.html#option-vim-clipboard-providers"},{"id":"201","title":"Option: vim.clipboard.providers.wl-copy.enable","content":"Whether to enable wl-copy.","path":"options.html#option-vim-clipboard-providers-wl-copy-enable"},{"id":"202","title":"Option: vim.clipboard.providers.wl-copy.package","content":"The wl-clipboard package to use.","path":"options.html#option-vim-clipboard-providers-wl-copy-package"},{"id":"203","title":"Option: vim.clipboard.providers.xclip.enable","content":"Whether to enable xclip.","path":"options.html#option-vim-clipboard-providers-xclip-enable"},{"id":"204","title":"Option: vim.clipboard.providers.xclip.package","content":"The xclip package to use.","path":"options.html#option-vim-clipboard-providers-xclip-package"},{"id":"205","title":"Option: vim.clipboard.providers.xsel.enable","content":"Whether to enable xsel.","path":"options.html#option-vim-clipboard-providers-xsel-enable"},{"id":"206","title":"Option: vim.clipboard.providers.xsel.package","content":"The xsel package to use.","path":"options.html#option-vim-clipboard-providers-xsel-package"},{"id":"207","title":"Option: vim.clipboard.registers","content":"The register to be used by the Neovim clipboard. Recognized types are:\n\n* unnamed: Vim will use the clipboard register `\"*\"` for all yank, delete,\n  change and put operations which would normally go to the unnamed register.\n\n* unnamedplus: A variant of the \"unnamed\" flag which uses the clipboard register\n`\"+\"` ({command}`:h quoteplus`) instead of register `\"*\"` for all yank, delete,\nchange and put operations which would normally go to the unnamed register.\n\nWhen `unnamed` and `unnamedplus` is included simultaneously yank and delete\noperations (but not put) will additionally copy the text into register `\"*\"`.\n\nPlease see  {command}`:h clipboard` for more details.\n\n","path":"options.html#option-vim-clipboard-registers"},{"id":"208","title":"Option: vim.comments.comment-nvim.enable","content":"Whether to enable smart and powerful comment plugin for neovim comment-nvim.","path":"options.html#option-vim-comments-comment-nvim-enable"},{"id":"209","title":"Option: vim.comments.comment-nvim.mappings.toggleCurrentBlock","content":"Toggle current block comment","path":"options.html#option-vim-comments-comment-nvim-mappings-toggleCurrentBlock"},{"id":"210","title":"Option: vim.comments.comment-nvim.mappings.toggleCurrentLine","content":"Toggle current line comment","path":"options.html#option-vim-comments-comment-nvim-mappings-toggleCurrentLine"},{"id":"211","title":"Option: vim.comments.comment-nvim.mappings.toggleOpLeaderBlock","content":"Toggle block comment","path":"options.html#option-vim-comments-comment-nvim-mappings-toggleOpLeaderBlock"},{"id":"212","title":"Option: vim.comments.comment-nvim.mappings.toggleOpLeaderLine","content":"Toggle line comment","path":"options.html#option-vim-comments-comment-nvim-mappings-toggleOpLeaderLine"},{"id":"213","title":"Option: vim.comments.comment-nvim.mappings.toggleSelectedBlock","content":"Toggle selected block","path":"options.html#option-vim-comments-comment-nvim-mappings-toggleSelectedBlock"},{"id":"214","title":"Option: vim.comments.comment-nvim.mappings.toggleSelectedLine","content":"Toggle selected comment","path":"options.html#option-vim-comments-comment-nvim-mappings-toggleSelectedLine"},{"id":"215","title":"Option: vim.comments.comment-nvim.setupOpts","content":"Option table to pass into the setup function of Comment-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-comments-comment-nvim-setupOpts"},{"id":"216","title":"Option: vim.comments.comment-nvim.setupOpts.mappings.basic","content":"Whether to enable basic mappings.","path":"options.html#option-vim-comments-comment-nvim-setupOpts-mappings-basic"},{"id":"217","title":"Option: vim.comments.comment-nvim.setupOpts.mappings.extra","content":"Whether to enable extra mappings.","path":"options.html#option-vim-comments-comment-nvim-setupOpts-mappings-extra"},{"id":"218","title":"Option: vim.dashboard.alpha.enable","content":"Whether to enable fast and fully programmable greeter for neovim [alpha.nvim].","path":"options.html#option-vim-dashboard-alpha-enable"},{"id":"219","title":"Option: vim.dashboard.alpha.layout","content":"Alpha dashboard layout","path":"options.html#option-vim-dashboard-alpha-layout"},{"id":"220","title":"Option: vim.dashboard.alpha.opts","content":"Optional global options","path":"options.html#option-vim-dashboard-alpha-opts"},{"id":"221","title":"Option: vim.dashboard.alpha.theme","content":"Alpha default theme to use","path":"options.html#option-vim-dashboard-alpha-theme"},{"id":"222","title":"Option: vim.dashboard.dashboard-nvim.enable","content":"Whether to enable Fancy and Blazing Fast start screen plugin of neovim [dashboard.nvim].","path":"options.html#option-vim-dashboard-dashboard-nvim-enable"},{"id":"223","title":"Option: vim.dashboard.dashboard-nvim.setupOpts","content":"Option table to pass into the setup function of dashboard.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-dashboard-dashboard-nvim-setupOpts"},{"id":"224","title":"Option: vim.dashboard.startify.bookmarks","content":"List of book marks to disaply on start page","path":"options.html#option-vim-dashboard-startify-bookmarks"},{"id":"225","title":"Option: vim.dashboard.startify.changeDirCmd","content":"Command to change the current window with. Can be cd, lcd or tcd","path":"options.html#option-vim-dashboard-startify-changeDirCmd"},{"id":"226","title":"Option: vim.dashboard.startify.changeToDir","content":"Should vim change to the directory of the file you open","path":"options.html#option-vim-dashboard-startify-changeToDir"},{"id":"227","title":"Option: vim.dashboard.startify.changeToVCRoot","content":"Should vim change to the version control root when opening a file","path":"options.html#option-vim-dashboard-startify-changeToVCRoot"},{"id":"228","title":"Option: vim.dashboard.startify.commands","content":"Commands that are presented to the user on startify page","path":"options.html#option-vim-dashboard-startify-commands"},{"id":"229","title":"Option: vim.dashboard.startify.customFooter","content":"Text to place in the footer","path":"options.html#option-vim-dashboard-startify-customFooter"},{"id":"230","title":"Option: vim.dashboard.startify.customHeader","content":"Text to place in the header","path":"options.html#option-vim-dashboard-startify-customHeader"},{"id":"231","title":"Option: vim.dashboard.startify.customIndices","content":"Specify a list of default characters to use instead of numbers","path":"options.html#option-vim-dashboard-startify-customIndices"},{"id":"232","title":"Option: vim.dashboard.startify.disableOnStartup","content":"Prevent startify from opening on startup but can be called with :Startify","path":"options.html#option-vim-dashboard-startify-disableOnStartup"},{"id":"233","title":"Option: vim.dashboard.startify.enable","content":"Whether to enable dashboard via vim-startify.","path":"options.html#option-vim-dashboard-startify-enable"},{"id":"234","title":"Option: vim.dashboard.startify.filesNumber","content":"How many files to list","path":"options.html#option-vim-dashboard-startify-filesNumber"},{"id":"235","title":"Option: vim.dashboard.startify.lists","content":"Specify the lists and in what order they are displayed on startify.","path":"options.html#option-vim-dashboard-startify-lists"},{"id":"236","title":"Option: vim.dashboard.startify.paddingLeft","content":"Number of spaces used for left padding.","path":"options.html#option-vim-dashboard-startify-paddingLeft"},{"id":"237","title":"Option: vim.dashboard.startify.sessionAutoload","content":"Make startify auto load Session.vim files from the current directory","path":"options.html#option-vim-dashboard-startify-sessionAutoload"},{"id":"238","title":"Option: vim.dashboard.startify.sessionBeforeSave","content":"Commands to run before saving a session","path":"options.html#option-vim-dashboard-startify-sessionBeforeSave"},{"id":"239","title":"Option: vim.dashboard.startify.sessionDeleteBuffers","content":"Delete all buffers when loading or closing a session","path":"options.html#option-vim-dashboard-startify-sessionDeleteBuffers"},{"id":"240","title":"Option: vim.dashboard.startify.sessionDir","content":"Directory to save and load sessions from","path":"options.html#option-vim-dashboard-startify-sessionDir"},{"id":"241","title":"Option: vim.dashboard.startify.sessionPersistence","content":"Persist session before leaving vim or switching session","path":"options.html#option-vim-dashboard-startify-sessionPersistence"},{"id":"242","title":"Option: vim.dashboard.startify.sessionRemoveLines","content":"Patterns to remove from session files","path":"options.html#option-vim-dashboard-startify-sessionRemoveLines"},{"id":"243","title":"Option: vim.dashboard.startify.sessionSavecmds","content":"List of commands to run when loading a session.","path":"options.html#option-vim-dashboard-startify-sessionSavecmds"},{"id":"244","title":"Option: vim.dashboard.startify.sessionSavevars","content":"List of variables to save into a session file.","path":"options.html#option-vim-dashboard-startify-sessionSavevars"},{"id":"245","title":"Option: vim.dashboard.startify.sessionSort","content":"Set if you want items sorted by date rather than alphabetically","path":"options.html#option-vim-dashboard-startify-sessionSort"},{"id":"246","title":"Option: vim.dashboard.startify.skipList","content":"List of regex patterns to exclude from MRU lists","path":"options.html#option-vim-dashboard-startify-skipList"},{"id":"247","title":"Option: vim.dashboard.startify.skipListServer","content":"List of vim servers to not load startify for","path":"options.html#option-vim-dashboard-startify-skipListServer"},{"id":"248","title":"Option: vim.dashboard.startify.unsafe","content":"Turns on unsafe mode for Startify. Stops resolving links, checking files are readable and filtering bookmark list","path":"options.html#option-vim-dashboard-startify-unsafe"},{"id":"249","title":"Option: vim.dashboard.startify.updateOldFiles","content":"Set if you want startify to always update and not just when neovim closes","path":"options.html#option-vim-dashboard-startify-updateOldFiles"},{"id":"250","title":"Option: vim.dashboard.startify.useEnv","content":"Show environment variables in path if name is shorter than value","path":"options.html#option-vim-dashboard-startify-useEnv"},{"id":"251","title":"Option: vim.debugMode.enable","content":"Whether to enable debug mode.","path":"options.html#option-vim-debugMode-enable"},{"id":"252","title":"Option: vim.debugMode.level","content":"Set verbosity level of Neovim while debug mode is enabled.\n\nValue must be be one of the levels expected by Neovim's\n[`verbose` option](https://neovim.io/doc/user/options.html#'verbose')\n","path":"options.html#option-vim-debugMode-level"},{"id":"253","title":"Option: vim.debugMode.logFile","content":"Set the log file that will be used to store verbose messages\nset by the `verbose` option.\n","path":"options.html#option-vim-debugMode-logFile"},{"id":"254","title":"Option: vim.debugger.nvim-dap.enable","content":"Whether to enable debugging via nvim-dap.","path":"options.html#option-vim-debugger-nvim-dap-enable"},{"id":"255","title":"Option: vim.debugger.nvim-dap.mappings.continue","content":"Continue","path":"options.html#option-vim-debugger-nvim-dap-mappings-continue"},{"id":"256","title":"Option: vim.debugger.nvim-dap.mappings.goDown","content":"Go down stacktrace","path":"options.html#option-vim-debugger-nvim-dap-mappings-goDown"},{"id":"257","title":"Option: vim.debugger.nvim-dap.mappings.goUp","content":"Go up stacktrace","path":"options.html#option-vim-debugger-nvim-dap-mappings-goUp"},{"id":"258","title":"Option: vim.debugger.nvim-dap.mappings.hover","content":"Hover","path":"options.html#option-vim-debugger-nvim-dap-mappings-hover"},{"id":"259","title":"Option: vim.debugger.nvim-dap.mappings.restart","content":"Restart","path":"options.html#option-vim-debugger-nvim-dap-mappings-restart"},{"id":"260","title":"Option: vim.debugger.nvim-dap.mappings.runLast","content":"Re-run Last Debug Session","path":"options.html#option-vim-debugger-nvim-dap-mappings-runLast"},{"id":"261","title":"Option: vim.debugger.nvim-dap.mappings.runToCursor","content":"Continue to the current cursor","path":"options.html#option-vim-debugger-nvim-dap-mappings-runToCursor"},{"id":"262","title":"Option: vim.debugger.nvim-dap.mappings.stepBack","content":"Step back","path":"options.html#option-vim-debugger-nvim-dap-mappings-stepBack"},{"id":"263","title":"Option: vim.debugger.nvim-dap.mappings.stepInto","content":"Step into function","path":"options.html#option-vim-debugger-nvim-dap-mappings-stepInto"},{"id":"264","title":"Option: vim.debugger.nvim-dap.mappings.stepOut","content":"Step out of function","path":"options.html#option-vim-debugger-nvim-dap-mappings-stepOut"},{"id":"265","title":"Option: vim.debugger.nvim-dap.mappings.stepOver","content":"Next step","path":"options.html#option-vim-debugger-nvim-dap-mappings-stepOver"},{"id":"266","title":"Option: vim.debugger.nvim-dap.mappings.terminate","content":"Terminate","path":"options.html#option-vim-debugger-nvim-dap-mappings-terminate"},{"id":"267","title":"Option: vim.debugger.nvim-dap.mappings.toggleBreakpoint","content":"Toggle breakpoint","path":"options.html#option-vim-debugger-nvim-dap-mappings-toggleBreakpoint"},{"id":"268","title":"Option: vim.debugger.nvim-dap.mappings.toggleDapUI","content":"Toggle DAP-UI","path":"options.html#option-vim-debugger-nvim-dap-mappings-toggleDapUI"},{"id":"269","title":"Option: vim.debugger.nvim-dap.mappings.toggleRepl","content":"Toggle Repl","path":"options.html#option-vim-debugger-nvim-dap-mappings-toggleRepl"},{"id":"270","title":"Option: vim.debugger.nvim-dap.sources","content":"List of debuggers to install","path":"options.html#option-vim-debugger-nvim-dap-sources"},{"id":"271","title":"Option: vim.debugger.nvim-dap.ui.autoStart","content":"Automatically Opens and Closes DAP-UI upon starting/closing a debugging session","path":"options.html#option-vim-debugger-nvim-dap-ui-autoStart"},{"id":"272","title":"Option: vim.debugger.nvim-dap.ui.enable","content":"Whether to enable UI extension for nvim-dap.","path":"options.html#option-vim-debugger-nvim-dap-ui-enable"},{"id":"273","title":"Option: vim.debugger.nvim-dap.ui.setupOpts","content":"Option table to pass into the setup function of nvim-dap-ui\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-debugger-nvim-dap-ui-setupOpts"},{"id":"274","title":"Option: vim.diagnostics.config","content":"Values that will be passed to `vim.diagnostic.config` after being converted\nto a Lua table. Possible values for each key can be found in the help text\nfor `vim.diagnostics.Opts`. You may find more about the diagnostics API of\nNeovim in {command}`:help diagnostic-api`.\n\n:::{.note}\nThis option is freeform. You may set values that are not present in nvf\ndocumentation, but those values will not be fully type checked. Please\nrefer to the help text for `vim.diagnostic.Opts` for appropriate values.\n:::\n","path":"options.html#option-vim-diagnostics-config"},{"id":"275","title":"Option: vim.diagnostics.config.signs","content":"Use signs for diagnostics. See {command}`:help diagnostic-signs`.\n","path":"options.html#option-vim-diagnostics-config-signs"},{"id":"276","title":"Option: vim.diagnostics.config.underline","content":"Use underline for diagnostics.","path":"options.html#option-vim-diagnostics-config-underline"},{"id":"277","title":"Option: vim.diagnostics.config.update_in_insert","content":"Update diagnostics in Insert mode. If `false`, diagnostics will\nbe updated on InsertLeave ({command}`:help InsertLeave`).\n","path":"options.html#option-vim-diagnostics-config-update_in_insert"},{"id":"278","title":"Option: vim.diagnostics.config.virtual_lines","content":"Use virtual lines for diagnostics.\n","path":"options.html#option-vim-diagnostics-config-virtual_lines"},{"id":"279","title":"Option: vim.diagnostics.config.virtual_text","content":"Use virtual text for diagnostics. If multiple diagnostics are set for a namespace,\none prefix per diagnostic + the last diagnostic message are shown.\n","path":"options.html#option-vim-diagnostics-config-virtual_text"},{"id":"280","title":"Option: vim.diagnostics.enable","content":"Whether to enable diagostics module for Neovim.","path":"options.html#option-vim-diagnostics-enable"},{"id":"281","title":"Option: vim.diagnostics.nvim-lint.enable","content":"Whether to enable asynchronous linter plugin for Neovim [nvim-lint].","path":"options.html#option-vim-diagnostics-nvim-lint-enable"},{"id":"282","title":"Option: vim.diagnostics.nvim-lint.lint_after_save","content":"Whether to enable autocmd to lint after each save.","path":"options.html#option-vim-diagnostics-nvim-lint-lint_after_save"},{"id":"283","title":"Option: vim.diagnostics.nvim-lint.lint_function","content":"Define the global function nvf_lint which is used by nvf to lint.","path":"options.html#option-vim-diagnostics-nvim-lint-lint_function"},{"id":"284","title":"Option: vim.diagnostics.nvim-lint.linters","content":"Linter configurations. Builtin linters will be updated and not\nreplaced, but note that this is not a deep extend operation, i.e. if\nyou define an `env` option, it will replace the entire `env` table\nprovided by the builtin (if it exists).\n","path":"options.html#option-vim-diagnostics-nvim-lint-linters"},{"id":"285","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.append_fname","content":"Automatically add the current file name to the commands arguments. Only\nhas an effect if stdin is false\n","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-append_fname"},{"id":"286","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.args","content":"Arguments to pass","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-args"},{"id":"287","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.cmd","content":"Command of the linter","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-cmd"},{"id":"288","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.cwd","content":"Working directory of the linter","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-cwd"},{"id":"289","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.env","content":"Environment variables to use","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-env"},{"id":"290","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.ignore_exitcode","content":"Declares if exit code != 1 should be ignored or result in a warning.\n","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-ignore_exitcode"},{"id":"291","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.name","content":"Name of the linter","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-name"},{"id":"292","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.parser","content":"Parser function","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-parser"},{"id":"293","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.required_files","content":"Required files to lint. These files must exist relative to the cwd\nof the linter or else this linter will be skipped\n\n::: {.note}\nThis option is an nvf extension that only takes effect if you\nuse the `nvf_lint()` lua function.\n\nSee {option}`vim.diagnostics.nvim-lint.lint_function`.\n:::\n","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-required_files"},{"id":"294","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.stdin","content":"Send content via stdin.","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-stdin"},{"id":"295","title":"Option: vim.diagnostics.nvim-lint.linters.<name>.stream","content":"Result stream","path":"options.html#option-vim-diagnostics-nvim-lint-linters-<name>-stream"},{"id":"296","title":"Option: vim.diagnostics.nvim-lint.linters_by_ft","content":"Map of filetype to formatters. This option takes a set of `key = value`\nformat where the `value` will be converted to its Lua equivalent\nthrough `toLuaObject. You are responsible for passing the correct Nix\ndata types to generate a correct Lua value that conform is able to\naccept.\n","path":"options.html#option-vim-diagnostics-nvim-lint-linters_by_ft"},{"id":"297","title":"Option: vim.enableLuaLoader","content":"[official documentation]: https://neovim.io/doc/user/lua.html#vim.loader.enable()\n\nWhether to enable the experimental Lua module loader to speed up the start\nup process. If `true`, this will enable the experimental Lua module loader\nwhich:\n\n* overrides loadfile\n* adds the lua loader using the byte-compilation cache\n* adds the libs loader\n* removes the default Neovim loader\n\n::: {.note}\nThe Lua module loader is *disabled* by default. Before setting this option, please\ntake a look at the {option}`[official documentation]`. This option may be enabled by\ndefault in the future.\n:::\n","path":"options.html#option-vim-enableLuaLoader"},{"id":"298","title":"Option: vim.extraLuaFiles","content":"Additional lua files that will be sourced by Neovim.\nTakes both absolute and relative paths, all of which\nwill be called via the `luafile` command in Neovim.\n\nSee [lua-commands](https://neovim.io/doc/user/lua.html#lua-commands)\non the Neovim documentation for more details.\n\n::: {.warning}\nAll paths passed to this option must be valid. If Neovim cannot\nresolve the path you are attempting to source, then your configuration\nwill error, and Neovim will not start. Please ensure that all paths\nare correct before using this option.\n:::\n","path":"options.html#option-vim-extraLuaFiles"},{"id":"299","title":"Option: vim.extraPackages","content":"List of additional packages to make available to the Neovim\nwrapper.\n","path":"options.html#option-vim-extraPackages"},{"id":"300","title":"Option: vim.extraPlugins","content":"A list of plugins and their configurations that will be\nset up after builtin plugins.\n\nThis option takes a special type that allows you to order\nyour custom plugins using nvf's modified DAG library.\n","path":"options.html#option-vim-extraPlugins"},{"id":"301","title":"Option: vim.extraPlugins.<name>.after","content":"Setup this plugin after the following ones.","path":"options.html#option-vim-extraPlugins-<name>-after"},{"id":"302","title":"Option: vim.extraPlugins.<name>.package","content":"Plugin Package.","path":"options.html#option-vim-extraPlugins-<name>-package"},{"id":"303","title":"Option: vim.extraPlugins.<name>.setup","content":"Lua code to run during setup.","path":"options.html#option-vim-extraPlugins-<name>-setup"},{"id":"304","title":"Option: vim.filetree.neo-tree.enable","content":"Whether to enable filetree via neo-tree.nvim.","path":"options.html#option-vim-filetree-neo-tree-enable"},{"id":"305","title":"Option: vim.filetree.neo-tree.setupOpts","content":"Option table to pass into the setup function of neo-tree\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-filetree-neo-tree-setupOpts"},{"id":"306","title":"Option: vim.filetree.neo-tree.setupOpts.add_blank_line_at_top","content":"Whether to add a blank line at the top of the tree\n","path":"options.html#option-vim-filetree-neo-tree-setupOpts-add_blank_line_at_top"},{"id":"307","title":"Option: vim.filetree.neo-tree.setupOpts.auto_clean_after_session_restore","content":"Whether to automatically clean up broken neo-tree buffers\nsaved in sessions\n","path":"options.html#option-vim-filetree-neo-tree-setupOpts-auto_clean_after_session_restore"},{"id":"308","title":"Option: vim.filetree.neo-tree.setupOpts.default_source","content":"You can choose a specific source.\n\n`last` here which indicates the last used source\n","path":"options.html#option-vim-filetree-neo-tree-setupOpts-default_source"},{"id":"309","title":"Option: vim.filetree.neo-tree.setupOpts.enable_cursor_hijack","content":"Whether to enable cursor hijacking.\n\nIf enabled neotree will keep the cursor on the first letter of the filename when moving in the tree\n.","path":"options.html#option-vim-filetree-neo-tree-setupOpts-enable_cursor_hijack"},{"id":"310","title":"Option: vim.filetree.neo-tree.setupOpts.enable_diagnostics","content":"Whether to enable diagnostics.","path":"options.html#option-vim-filetree-neo-tree-setupOpts-enable_diagnostics"},{"id":"311","title":"Option: vim.filetree.neo-tree.setupOpts.enable_git_status","content":"Whether to enable git status.","path":"options.html#option-vim-filetree-neo-tree-setupOpts-enable_git_status"},{"id":"312","title":"Option: vim.filetree.neo-tree.setupOpts.enable_modified_markers","content":"Whether to enable markers for files with unsaved changes..","path":"options.html#option-vim-filetree-neo-tree-setupOpts-enable_modified_markers"},{"id":"313","title":"Option: vim.filetree.neo-tree.setupOpts.enable_opened_markers","content":"Whether to enable tracking of opened files.\n\nRequired for `components.name.highlight_opened_files`\n.","path":"options.html#option-vim-filetree-neo-tree-setupOpts-enable_opened_markers"},{"id":"314","title":"Option: vim.filetree.neo-tree.setupOpts.enable_refresh_on_write","content":"Whether to enable Refresh the tree when a file is written.\n\nOnly used if `use_libuv_file_watcher` is false.\n.","path":"options.html#option-vim-filetree-neo-tree-setupOpts-enable_refresh_on_write"},{"id":"315","title":"Option: vim.filetree.neo-tree.setupOpts.filesystem.hijack_netrw_behavior","content":"Hijack Netrw behavior","path":"options.html#option-vim-filetree-neo-tree-setupOpts-filesystem-hijack_netrw_behavior"},{"id":"316","title":"Option: vim.filetree.neo-tree.setupOpts.git_status_async","content":"Whether to enable async git status.\n\nThis will make the git status check async and will not block the UI.\n.","path":"options.html#option-vim-filetree-neo-tree-setupOpts-git_status_async"},{"id":"317","title":"Option: vim.filetree.neo-tree.setupOpts.hide_root_node","content":"Whether to hide the root node of the tree\n","path":"options.html#option-vim-filetree-neo-tree-setupOpts-hide_root_node"},{"id":"318","title":"Option: vim.filetree.neo-tree.setupOpts.log_level","content":"Log level for the plugin.","path":"options.html#option-vim-filetree-neo-tree-setupOpts-log_level"},{"id":"319","title":"Option: vim.filetree.neo-tree.setupOpts.log_to_file","content":"Must be either a boolean or a path to your log file.\n\nUse :NeoTreeLogs to show the file\n","path":"options.html#option-vim-filetree-neo-tree-setupOpts-log_to_file"},{"id":"320","title":"Option: vim.filetree.neo-tree.setupOpts.open_files_do_not_replace_types","content":"A list of filetypes that should not be replaced when opening a file\n","path":"options.html#option-vim-filetree-neo-tree-setupOpts-open_files_do_not_replace_types"},{"id":"321","title":"Option: vim.filetree.neo-tree.setupOpts.open_files_in_last_window","content":"Whether to open files in the last window\n\nIf disabled, neo-tree will open files in top left window\n","path":"options.html#option-vim-filetree-neo-tree-setupOpts-open_files_in_last_window"},{"id":"322","title":"Option: vim.filetree.neo-tree.setupOpts.retain_hidden_root_indent","content":"Whether to retain the indent of the hidden root node\n\nIF the root node is hidden, keep the indentation anyhow.\nThis is needed if you use expanders because they render in the indent.\n","path":"options.html#option-vim-filetree-neo-tree-setupOpts-retain_hidden_root_indent"},{"id":"323","title":"Option: vim.filetree.nvimTree.enable","content":"Whether to enable filetree via nvim-tree.lua.","path":"options.html#option-vim-filetree-nvimTree-enable"},{"id":"324","title":"Option: vim.filetree.nvimTree.mappings.findFile","content":"Find file in NvimTree","path":"options.html#option-vim-filetree-nvimTree-mappings-findFile"},{"id":"325","title":"Option: vim.filetree.nvimTree.mappings.focus","content":"Focus NvimTree","path":"options.html#option-vim-filetree-nvimTree-mappings-focus"},{"id":"326","title":"Option: vim.filetree.nvimTree.mappings.refresh","content":"Refresh NvimTree","path":"options.html#option-vim-filetree-nvimTree-mappings-refresh"},{"id":"327","title":"Option: vim.filetree.nvimTree.mappings.toggle","content":"Toggle NvimTree","path":"options.html#option-vim-filetree-nvimTree-mappings-toggle"},{"id":"328","title":"Option: vim.filetree.nvimTree.openOnSetup","content":"Open when vim is started on a directory","path":"options.html#option-vim-filetree-nvimTree-openOnSetup"},{"id":"329","title":"Option: vim.filetree.nvimTree.setupOpts","content":"Option table to pass into the setup function of Nvim Tree\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts"},{"id":"330","title":"Option: vim.filetree.nvimTree.setupOpts.actions","content":"Configuration for various actions.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions"},{"id":"331","title":"Option: vim.filetree.nvimTree.setupOpts.actions.change_dir","content":"vim `change-directory` behaviour","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-change_dir"},{"id":"332","title":"Option: vim.filetree.nvimTree.setupOpts.actions.change_dir.enable","content":"Change the working directory when changing directories in the tree.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-change_dir-enable"},{"id":"333","title":"Option: vim.filetree.nvimTree.setupOpts.actions.change_dir.global","content":"Use `:cd` instead of `:lcd` when changing directories.\nConsider that this might cause issues with the `nvimTree.syncRootWithCwd` option.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-change_dir-global"},{"id":"334","title":"Option: vim.filetree.nvimTree.setupOpts.actions.change_dir.restrict_above_cwd","content":"Restrict changing to a directory above the global current working directory.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-change_dir-restrict_above_cwd"},{"id":"335","title":"Option: vim.filetree.nvimTree.setupOpts.actions.expand_all","content":"Configuration for expand_all behaviour.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-expand_all"},{"id":"336","title":"Option: vim.filetree.nvimTree.setupOpts.actions.expand_all.exclude","content":"A list of directories that should not be expanded automatically.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-expand_all-exclude"},{"id":"337","title":"Option: vim.filetree.nvimTree.setupOpts.actions.expand_all.max_folder_discovery","content":"Limit the number of folders being explored when expanding every folders.\nAvoids hanging neovim when running this action on very large folders.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-expand_all-max_folder_discovery"},{"id":"338","title":"Option: vim.filetree.nvimTree.setupOpts.actions.file_popup","content":"Configuration for file_popup behaviour.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-file_popup"},{"id":"339","title":"Option: vim.filetree.nvimTree.setupOpts.actions.file_popup.open_win_config","content":"Floating window config for file_popup. See |nvim_open_win| for more details.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-file_popup-open_win_config"},{"id":"340","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file","content":"Configuration options for opening a file from nvim-tree.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file"},{"id":"341","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file.eject","content":"Prevent new opened file from opening in the same window as the tree.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file-eject"},{"id":"342","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file.quit_on_open","content":"Closes the explorer when opening a file.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file-quit_on_open"},{"id":"343","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file.resize_window","content":"Resizes the tree when opening a file. Previously `view.auto_resize`","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file-resize_window"},{"id":"344","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file.window_picker","content":"window_picker","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file-window_picker"},{"id":"345","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.chars","content":"A string of chars used as identifiers by the window picker.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file-window_picker-chars"},{"id":"346","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.enable","content":"Enable the window picker. If this feature is not enabled, files will open in window from which you last opened the tree.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file-window_picker-enable"},{"id":"347","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.exclude.buftype","content":"A list of buftypes to exclude from the window picker.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file-window_picker-exclude-buftype"},{"id":"348","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.exclude.filetype","content":"A list of filetypes to exclude from the window picker.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file-window_picker-exclude-filetype"},{"id":"349","title":"Option: vim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.picker","content":"Change the default window picker, can be a string `\"default\"` or a function.\nThe function should return the window id that will open the node,\nor `nil` if an invalid window is picked or user cancelled the action.\n\nThe picker may create a new window.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-open_file-window_picker-picker"},{"id":"350","title":"Option: vim.filetree.nvimTree.setupOpts.actions.remove_file.close_window","content":"Close any window displaying a file when removing the file from the tree","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-remove_file-close_window"},{"id":"351","title":"Option: vim.filetree.nvimTree.setupOpts.actions.use_system_clipboard","content":"A boolean value that toggle the use of system clipboard when copy/paste\nfunction are invoked. When enabled, copied text will be stored in registers\n'+' (system), otherwise, it will be stored in '1' and '\"'.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-actions-use_system_clipboard"},{"id":"352","title":"Option: vim.filetree.nvimTree.setupOpts.auto_reload_on_write","content":"Auto reload tree on write","path":"options.html#option-vim-filetree-nvimTree-setupOpts-auto_reload_on_write"},{"id":"353","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics","content":"Show LSP and COC diagnostics in the signcolumn\nNote that the modified sign will take precedence over the diagnostics signs.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics"},{"id":"354","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.debounce_delay","content":"Idle milliseconds between diagnostic event and update.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-debounce_delay"},{"id":"355","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.enable","content":"Whether to enable diagnostics view in the signcolumn..","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-enable"},{"id":"356","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.icons","content":"Icons for diagnostic severity.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-icons"},{"id":"357","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.icons.error","content":"Icon used for `error` diagnostic.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-icons-error"},{"id":"358","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.icons.hint","content":"Icon used for `hint` diagnostic.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-icons-hint"},{"id":"359","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.icons.info","content":"Icon used for `info` diagnostic.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-icons-info"},{"id":"360","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.icons.warning","content":"Icon used for `warning` diagnostic.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-icons-warning"},{"id":"361","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.severity","content":"Severity for which the diagnostics will be displayed. See `:help diagnostic-severity`","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-severity"},{"id":"362","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.severity.max","content":"Maximum severity.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-severity-max"},{"id":"363","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.severity.min","content":"Minimum severity.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-severity-min"},{"id":"364","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.show_on_dirs","content":"Show diagnostic icons on parent directories.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-show_on_dirs"},{"id":"365","title":"Option: vim.filetree.nvimTree.setupOpts.diagnostics.show_on_open_dirs","content":"Show diagnostics icons on directories that are open.\nOnly relevant when `diagnostics.show_on_dirs` is `true`.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-diagnostics-show_on_open_dirs"},{"id":"366","title":"Option: vim.filetree.nvimTree.setupOpts.disable_netrw","content":"Disables netrw and replaces it with tree","path":"options.html#option-vim-filetree-nvimTree-setupOpts-disable_netrw"},{"id":"367","title":"Option: vim.filetree.nvimTree.setupOpts.filesystem_watchers","content":"Will use file system watcher (libuv fs_event) to watch the filesystem for changes.\nUsing this will disable BufEnter / BufWritePost events in nvim-tree which\nwere used to update the whole tree. With this feature, the tree will be\nupdated only for the appropriate folder change, resulting in better\nperformance.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filesystem_watchers"},{"id":"368","title":"Option: vim.filetree.nvimTree.setupOpts.filesystem_watchers.debounce_delay","content":"Idle milliseconds between filesystem change and action.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filesystem_watchers-debounce_delay"},{"id":"369","title":"Option: vim.filetree.nvimTree.setupOpts.filesystem_watchers.enable","content":"Enable filesystem watchers.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filesystem_watchers-enable"},{"id":"370","title":"Option: vim.filetree.nvimTree.setupOpts.filesystem_watchers.ignore_dirs","content":"List of vim regex for absolute directory paths that will not be watched.\nBackslashes must be escaped e.g. `\"my-project/\\\\.build$\"`.\nUseful when path is not in `.gitignore` or git integration is disabled.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filesystem_watchers-ignore_dirs"},{"id":"371","title":"Option: vim.filetree.nvimTree.setupOpts.filters","content":"Filtering options.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filters"},{"id":"372","title":"Option: vim.filetree.nvimTree.setupOpts.filters.dotfiles","content":"Do not show dotfiles: files starting with a `.`","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filters-dotfiles"},{"id":"373","title":"Option: vim.filetree.nvimTree.setupOpts.filters.exclude","content":"List of directories or files to exclude from filtering: always show them.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filters-exclude"},{"id":"374","title":"Option: vim.filetree.nvimTree.setupOpts.filters.git_clean","content":"Do not show files with no git status. This will show ignored files when\n`nvimTree.filters.gitIgnored` is set, as they are effectively dirty.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filters-git_clean"},{"id":"375","title":"Option: vim.filetree.nvimTree.setupOpts.filters.git_ignored","content":"Ignore files based on `.gitignore`. Requires git.enable` to be `true`","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filters-git_ignored"},{"id":"376","title":"Option: vim.filetree.nvimTree.setupOpts.filters.no_buffer","content":"Do not show files that have no `buflisted()` buffer.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-filters-no_buffer"},{"id":"377","title":"Option: vim.filetree.nvimTree.setupOpts.git.disable_for_dirs","content":"Disable git integration when git top-level matches these paths.\nMay be relative, evaluated via `\":p\"`\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-git-disable_for_dirs"},{"id":"378","title":"Option: vim.filetree.nvimTree.setupOpts.git.enable","content":"Whether to enable Git integration with icons and colors..","path":"options.html#option-vim-filetree-nvimTree-setupOpts-git-enable"},{"id":"379","title":"Option: vim.filetree.nvimTree.setupOpts.git.show_on_dirs","content":"Show git icons on parent directories.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-git-show_on_dirs"},{"id":"380","title":"Option: vim.filetree.nvimTree.setupOpts.git.show_on_open_dirs","content":"Show git icons on directories that are open.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-git-show_on_open_dirs"},{"id":"381","title":"Option: vim.filetree.nvimTree.setupOpts.git.timeout","content":"Kills the git process after some time if it takes too long.\nGit integration will be disabled after 10 git jobs exceed this timeout.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-git-timeout"},{"id":"382","title":"Option: vim.filetree.nvimTree.setupOpts.hijack_cursor","content":"Hijack the cursor in the tree to put it at the start of the filename","path":"options.html#option-vim-filetree-nvimTree-setupOpts-hijack_cursor"},{"id":"383","title":"Option: vim.filetree.nvimTree.setupOpts.hijack_directories.auto_open","content":"Opens the tree if the tree was previously closed.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-hijack_directories-auto_open"},{"id":"384","title":"Option: vim.filetree.nvimTree.setupOpts.hijack_directories.enable","content":"Enable the `hijack_directories` feature. Disable this option if you use vim-dirvish or dirbuf.nvim.\nIf `hijack_netrw` and `disable_netrw` are `false`, this feature will be disabled.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-hijack_directories-enable"},{"id":"385","title":"Option: vim.filetree.nvimTree.setupOpts.hijack_netrw","content":"Prevents netrw from automatically opening when opening directories","path":"options.html#option-vim-filetree-nvimTree-setupOpts-hijack_netrw"},{"id":"386","title":"Option: vim.filetree.nvimTree.setupOpts.hijack_unnamed_buffer_when_opening","content":"Open nvimtree in place of the unnamed buffer if it's empty.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-hijack_unnamed_buffer_when_opening"},{"id":"387","title":"Option: vim.filetree.nvimTree.setupOpts.live_filter","content":"Configurations for the live_filtering feature.\nThe live filter allows you to filter the tree nodes dynamically, based on\nregex matching (see `vim.regex`).\nThis feature is bound to the `f` key by default.\nThe filter can be cleared with the `F` key by default.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-live_filter"},{"id":"388","title":"Option: vim.filetree.nvimTree.setupOpts.live_filter.always_show_folders","content":"Whether to filter folders or not.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-live_filter-always_show_folders"},{"id":"389","title":"Option: vim.filetree.nvimTree.setupOpts.live_filter.prefix","content":"Prefix of the filter displayed in the buffer.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-live_filter-prefix"},{"id":"390","title":"Option: vim.filetree.nvimTree.setupOpts.modified","content":"Indicate which file have unsaved modification.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-modified"},{"id":"391","title":"Option: vim.filetree.nvimTree.setupOpts.modified.enable","content":"Whether to enable Modified files with icons and color highlight..","path":"options.html#option-vim-filetree-nvimTree-setupOpts-modified-enable"},{"id":"392","title":"Option: vim.filetree.nvimTree.setupOpts.modified.show_on_dirs","content":"Show modified icons on parent directories.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-modified-show_on_dirs"},{"id":"393","title":"Option: vim.filetree.nvimTree.setupOpts.modified.show_on_open_dirs","content":"Show modified icons on directories that are open.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-modified-show_on_open_dirs"},{"id":"394","title":"Option: vim.filetree.nvimTree.setupOpts.notify","content":"Configuration for notifications.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-notify"},{"id":"395","title":"Option: vim.filetree.nvimTree.setupOpts.notify.absolute_path","content":"Whether to use absolute paths or item names in fs action notifications.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-notify-absolute_path"},{"id":"396","title":"Option: vim.filetree.nvimTree.setupOpts.notify.threshold","content":"Specify minimum notification level, uses the values from `vim.log.levels`","path":"options.html#option-vim-filetree-nvimTree-setupOpts-notify-threshold"},{"id":"397","title":"Option: vim.filetree.nvimTree.setupOpts.prefer_startup_root","content":"Prefer startup root directory when updating root directory of the tree.\nOnly relevant when `update_focused_file.update_root` is `true`\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-prefer_startup_root"},{"id":"398","title":"Option: vim.filetree.nvimTree.setupOpts.reload_on_bufenter","content":"Automatically reloads the tree on `BufEnter` nvim-tree.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-reload_on_bufenter"},{"id":"399","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.add_trailing","content":"Appends a trailing slash to folder names.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-add_trailing"},{"id":"400","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.full_name","content":"Display node whose name length is wider than the width of nvim-tree window in floating window.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-full_name"},{"id":"401","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.group_empty","content":"Compact folders that only contain a single folder into one node in the file tree.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-group_empty"},{"id":"402","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.highlight_git","content":"Enable file highlight for git attributes using `NvimTreeGit` highlight groups.\nRequires `nvimTree.git.enable`\nThis can be used with or without the icons.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-highlight_git"},{"id":"403","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.highlight_modified","content":"Highlight modified files in the tree using `NvimTreeNormal` highlight group.\nRequires `nvimTree.view.highlightOpenedFiles`\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-highlight_modified"},{"id":"404","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.highlight_opened_files","content":"Highlight icons and/or names for bufloaded() files using the\n`NvimTreeOpenedFile` highlight group.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-highlight_opened_files"},{"id":"405","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons","content":"Configuration options for icons.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons"},{"id":"406","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.bookmarks_placement","content":"Place where the bookmark icons will be rendered.\n`signcolumn` requires `view.signcolumn` to be enabled.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-bookmarks_placement"},{"id":"407","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.diagnostics_placement","content":"Place where the diagnostics icons will be rendered.\n`signcolumn` requires `view.signcolumn` to be enabled.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-diagnostics_placement"},{"id":"408","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.git_placement","content":"Place where the git icons will be rendered.\n`signcolumn` requires `view.signcolumn` to be enabled.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-git_placement"},{"id":"409","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.glyphs","content":"Configuration options for icon glyphs.\nNOTE: Do not set any glyphs to more than two characters if it's going\nto appear in the signcolumn.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-glyphs"},{"id":"410","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.default","content":"Glyph for files. Will be overridden by `nvim-web-devicons` if available.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-glyphs-default"},{"id":"411","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.folder","content":"Glyphs for directories. Recommended to use the defaults unless you know what you are doing.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-glyphs-folder"},{"id":"412","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.git","content":"Glyphs for git status.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-glyphs-git"},{"id":"413","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.modified","content":"Icon to display for modified files.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-glyphs-modified"},{"id":"414","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.symlink","content":"Glyph for symlinks.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-glyphs-symlink"},{"id":"415","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.hidden_placement","content":"Place where the hidden icons will be rendered.\n`signcolumn` requires `view.signcolumn` to be enabled.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-hidden_placement"},{"id":"416","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.modified_placement","content":"Place where the modified icons will be rendered.\n`signcolumn` requires `view.signcolumn` to be enabled.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-modified_placement"},{"id":"417","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.padding","content":"Inserted between icon and filename","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-padding"},{"id":"418","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.show.file","content":"Show an icon before the file name. `nvim-web-devicons` will be used if available.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-show-file"},{"id":"419","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.show.folder","content":"Show an icon before the folder name.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-show-folder"},{"id":"420","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.show.folder_arrow","content":"Show a small arrow before the folder node. Arrow will be a part of the\nnode when using `renderer.indent_markers`.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-show-folder_arrow"},{"id":"421","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.show.git","content":"Show a git status icon, see `renderer.icons.gitPlacement`\nRequires `git.enable` to be true.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-show-git"},{"id":"422","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.show.modified","content":"Show a modified icon, see `renderer.icons.modifiedPlacement`\nRequires `modified.enable` to be true.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-show-modified"},{"id":"423","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.symlink_arrow","content":"Used as a separator between symlinks' source and target.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-symlink_arrow"},{"id":"424","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.icons.webdev_colors","content":" Use the webdev icon colors, otherwise `NvimTreeFileIcon`","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-icons-webdev_colors"},{"id":"425","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.indent_markers","content":"Configuration options for tree indent markers.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-indent_markers"},{"id":"426","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.indent_markers.enable","content":"Whether to enable Display indent markers when folders are open..","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-indent_markers-enable"},{"id":"427","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.indent_markers.icons","content":"Individual elements of the indent markers","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-indent_markers-icons"},{"id":"428","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.indent_markers.inline_arrows","content":"Display folder arrows in the same column as indent marker when using `renderer.icons.show.folder_arrow`","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-indent_markers-inline_arrows"},{"id":"429","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.indent_width","content":"Number of spaces for an each tree nesting level. Minimum 1.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-indent_width"},{"id":"430","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.root_folder_label","content":"In what format to show root folder. See `:help filename-modifiers` for\navailable `string` options.\nSet to `false` to hide the root folder.\n\nFunction is passed the absolute path of the root folder and should\nreturn a string. e.g.\nmy_root_folder_label = function(path)\n  return \".../\" .. vim.fn.fnamemodify(path, \":t\")\nend\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-root_folder_label"},{"id":"431","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.special_files","content":"A list of filenames that gets highlighted with `NvimTreeSpecialFile","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-special_files"},{"id":"432","title":"Option: vim.filetree.nvimTree.setupOpts.renderer.symlink_destination","content":"Whether to show the destination of the symlink.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-renderer-symlink_destination"},{"id":"433","title":"Option: vim.filetree.nvimTree.setupOpts.respect_buf_cwd","content":"Will change cwd of nvim-tree to that of new buffer's when opening nvim-tree.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-respect_buf_cwd"},{"id":"434","title":"Option: vim.filetree.nvimTree.setupOpts.root_dirs","content":"Preferred root directories. Only relevant when `updateFocusedFile.updateRoot` is `true`\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-root_dirs"},{"id":"435","title":"Option: vim.filetree.nvimTree.setupOpts.select_prompts","content":"Whether to enable Use `vim.ui.select` style prompts. Necessary when using a UI prompt decorator such as dressing.nvim or telescope-ui-select.nvim\n.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-select_prompts"},{"id":"436","title":"Option: vim.filetree.nvimTree.setupOpts.sort.folders_first","content":"Sort folders before files. Has no effect when `sort.sorter` is a function.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-sort-folders_first"},{"id":"437","title":"Option: vim.filetree.nvimTree.setupOpts.sort.sorter","content":"How files within the same directory are sorted.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-sort-sorter"},{"id":"438","title":"Option: vim.filetree.nvimTree.setupOpts.sync_root_with_cwd","content":"Changes the tree root directory on `DirChanged` and refreshes the tree.\nOnly relevant when `updateFocusedFile.updateRoot` is `true`\n\n(previously `update_cwd`)\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-sync_root_with_cwd"},{"id":"439","title":"Option: vim.filetree.nvimTree.setupOpts.system_open.args","content":"Optional argument list.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-system_open-args"},{"id":"440","title":"Option: vim.filetree.nvimTree.setupOpts.system_open.cmd","content":"The open command itself","path":"options.html#option-vim-filetree-nvimTree-setupOpts-system_open-cmd"},{"id":"441","title":"Option: vim.filetree.nvimTree.setupOpts.tab","content":"Configuration for tab behaviour.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-tab"},{"id":"442","title":"Option: vim.filetree.nvimTree.setupOpts.tab.sync","content":"Configuration for syncing nvim-tree across tabs.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-tab-sync"},{"id":"443","title":"Option: vim.filetree.nvimTree.setupOpts.tab.sync.close","content":"Closes the tree across all tabpages when the tree is closed.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-tab-sync-close"},{"id":"444","title":"Option: vim.filetree.nvimTree.setupOpts.tab.sync.ignore","content":"List of filetypes or buffer names on new tab that will prevent\n`nvimTree.tab.sync.open` and `nvimTree.tab.sync.close`\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-tab-sync-ignore"},{"id":"445","title":"Option: vim.filetree.nvimTree.setupOpts.tab.sync.open","content":"Opens the tree automatically when switching tabpage or opening a new\ntabpage if the tree was previously open.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-tab-sync-open"},{"id":"446","title":"Option: vim.filetree.nvimTree.setupOpts.trash","content":"Configuration options for trashing.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-trash"},{"id":"447","title":"Option: vim.filetree.nvimTree.setupOpts.trash.cmd","content":"The command used to trash items","path":"options.html#option-vim-filetree-nvimTree-setupOpts-trash-cmd"},{"id":"448","title":"Option: vim.filetree.nvimTree.setupOpts.ui","content":"General UI configuration.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-ui"},{"id":"449","title":"Option: vim.filetree.nvimTree.setupOpts.ui.confirm.remove","content":"Prompt before removing.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-ui-confirm-remove"},{"id":"450","title":"Option: vim.filetree.nvimTree.setupOpts.ui.confirm.trash","content":"Prompt before trash.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-ui-confirm-trash"},{"id":"451","title":"Option: vim.filetree.nvimTree.setupOpts.update_focused_file","content":"Update the focused file on `BufEnter`, un-collapses the folders recursively\nuntil it finds the file.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-update_focused_file"},{"id":"452","title":"Option: vim.filetree.nvimTree.setupOpts.update_focused_file.enable","content":"update focused file","path":"options.html#option-vim-filetree-nvimTree-setupOpts-update_focused_file-enable"},{"id":"453","title":"Option: vim.filetree.nvimTree.setupOpts.update_focused_file.ignore_list","content":"List of buffer names and filetypes that will not update the root dir\nof the tree if the file isn't found under the current root directory.\nOnly relevant when `update_focused_file.update_root` and\n`update_focused_file.enable` are `true`.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-update_focused_file-ignore_list"},{"id":"454","title":"Option: vim.filetree.nvimTree.setupOpts.update_focused_file.update_root","content":"Update the root directory of the tree if the file is not under current\nroot directory. It prefers vim's cwd and `root_dirs`.\nOtherwise it falls back to the folder containing the file.\nOnly relevant when `update_focused_file.enable` is `true`\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-update_focused_file-update_root"},{"id":"455","title":"Option: vim.filetree.nvimTree.setupOpts.view","content":"Window / buffer setup.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view"},{"id":"456","title":"Option: vim.filetree.nvimTree.setupOpts.view.centralize_selection","content":"If true, reposition the view so that the current node is initially centralized when entering nvim-tree.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-centralize_selection"},{"id":"457","title":"Option: vim.filetree.nvimTree.setupOpts.view.cursorline","content":"Enable cursorline in nvim-tree window.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-cursorline"},{"id":"458","title":"Option: vim.filetree.nvimTree.setupOpts.view.debounce_delay","content":"Idle milliseconds before some reload / refresh operations.\nIncrease if you experience performance issues around screen refresh.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-debounce_delay"},{"id":"459","title":"Option: vim.filetree.nvimTree.setupOpts.view.float","content":"Configuration options for floating window.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-float"},{"id":"460","title":"Option: vim.filetree.nvimTree.setupOpts.view.float.enable","content":"If true, tree window will be floating.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-float-enable"},{"id":"461","title":"Option: vim.filetree.nvimTree.setupOpts.view.float.open_win_config","content":"Floating window config. See `:h nvim_open_win()` for more details.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-float-open_win_config"},{"id":"462","title":"Option: vim.filetree.nvimTree.setupOpts.view.float.quit_on_focus_loss","content":"Close the floating tree window when it loses focus.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-float-quit_on_focus_loss"},{"id":"463","title":"Option: vim.filetree.nvimTree.setupOpts.view.number","content":"Print the line number in front of each line.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-number"},{"id":"464","title":"Option: vim.filetree.nvimTree.setupOpts.view.preserve_window_proportions","content":"Preserves window proportions when opening a file.\nIf `false`, the height and width of windows other than nvim-tree will be equalized.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-preserve_window_proportions"},{"id":"465","title":"Option: vim.filetree.nvimTree.setupOpts.view.relativenumber","content":"Show the line number relative to the line with the cursor in front of each line.\nIf the option `view.number` is also `true`, the number on the cursor line\nwill be the line number instead of `0`.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-relativenumber"},{"id":"466","title":"Option: vim.filetree.nvimTree.setupOpts.view.side","content":"Side of the tree.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-side"},{"id":"467","title":"Option: vim.filetree.nvimTree.setupOpts.view.signcolumn","content":"Show diagnostic sign column. Value can be `\"yes\"`, `\"auto\"` or`\"no\"`.","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-signcolumn"},{"id":"468","title":"Option: vim.filetree.nvimTree.setupOpts.view.width","content":"Width of the window: can be a `%` string, a number representing columns, a\nfunction or a table.\n\nA table (an attribute set in our case, see example) indicates that the view should be dynamically sized based on the\nlongest line.\n","path":"options.html#option-vim-filetree-nvimTree-setupOpts-view-width"},{"id":"469","title":"Option: vim.formatter.conform-nvim.enable","content":"Whether to enable lightweight yet powerful formatter plugin for Neovim [conform-nvim].","path":"options.html#option-vim-formatter-conform-nvim-enable"},{"id":"470","title":"Option: vim.formatter.conform-nvim.setupOpts","content":"Option table to pass into the setup function of conform.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-formatter-conform-nvim-setupOpts"},{"id":"471","title":"Option: vim.formatter.conform-nvim.setupOpts.default_format_opts","content":"Default values when calling `conform.format()`","path":"options.html#option-vim-formatter-conform-nvim-setupOpts-default_format_opts"},{"id":"472","title":"Option: vim.formatter.conform-nvim.setupOpts.format_after_save","content":"Table or function(luainline) that will be passed to `conform.format()`. If this\nis set, Conform will run the formatter asynchronously after save.\n","path":"options.html#option-vim-formatter-conform-nvim-setupOpts-format_after_save"},{"id":"473","title":"Option: vim.formatter.conform-nvim.setupOpts.format_on_save","content":"Attribute set or Lua function that will be passed to\n`conform.format()`. If this is set, Conform will run the formatter\non save.\n","path":"options.html#option-vim-formatter-conform-nvim-setupOpts-format_on_save"},{"id":"474","title":"Option: vim.formatter.conform-nvim.setupOpts.formatters_by_ft","content":"Map of filetype to formatters. This option takes a set of\n`key = value` format where the `value will` be converted\nto its Lua equivalent. You are responsible for passing the\ncorrect Nix data types to generate a correct Lua value that\nconform is able to accept.\n","path":"options.html#option-vim-formatter-conform-nvim-setupOpts-formatters_by_ft"},{"id":"475","title":"Option: vim.fzf-lua.enable","content":"Whether to enable fzf-lua.","path":"options.html#option-vim-fzf-lua-enable"},{"id":"476","title":"Option: vim.fzf-lua.profile","content":"The configuration profile to use","path":"options.html#option-vim-fzf-lua-profile"},{"id":"477","title":"Option: vim.fzf-lua.setupOpts","content":"Option table to pass into the setup function of fzf-lua\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-fzf-lua-setupOpts"},{"id":"478","title":"Option: vim.fzf-lua.setupOpts.fzf_bin","content":"Path to fzf executable","path":"options.html#option-vim-fzf-lua-setupOpts-fzf_bin"},{"id":"479","title":"Option: vim.fzf-lua.setupOpts.winopts.border","content":"Border type for the fzf-lua picker window","path":"options.html#option-vim-fzf-lua-setupOpts-winopts-border"},{"id":"480","title":"Option: vim.gestures.gesture-nvim.enable","content":"Whether to enable gesture-nvim: mouse gestures.","path":"options.html#option-vim-gestures-gesture-nvim-enable"},{"id":"481","title":"Option: vim.gestures.gesture-nvim.mappings.draw","content":"Start drawing [gesture.nvim]","path":"options.html#option-vim-gestures-gesture-nvim-mappings-draw"},{"id":"482","title":"Option: vim.gestures.gesture-nvim.mappings.finish","content":"Finish drawing [gesture.nvim]","path":"options.html#option-vim-gestures-gesture-nvim-mappings-finish"},{"id":"483","title":"Option: vim.git.enable","content":"Whether to enable git integration suite.\n\nEnabling this option will enable the following plugins:\n* gitsigns\n* vim-fugitive\n* git-conflict\n* gitlinker-nvim\n.","path":"options.html#option-vim-git-enable"},{"id":"484","title":"Option: vim.git.git-conflict.enable","content":"Whether to enable git-conflict.","path":"options.html#option-vim-git-git-conflict-enable"},{"id":"485","title":"Option: vim.git.git-conflict.mappings.both","content":"Choose Both [Git-Conflict]","path":"options.html#option-vim-git-git-conflict-mappings-both"},{"id":"486","title":"Option: vim.git.git-conflict.mappings.nextConflict","content":"Go to the next Conflict [Git-Conflict]","path":"options.html#option-vim-git-git-conflict-mappings-nextConflict"},{"id":"487","title":"Option: vim.git.git-conflict.mappings.none","content":"Choose None [Git-Conflict]","path":"options.html#option-vim-git-git-conflict-mappings-none"},{"id":"488","title":"Option: vim.git.git-conflict.mappings.ours","content":"Choose Ours [Git-Conflict]","path":"options.html#option-vim-git-git-conflict-mappings-ours"},{"id":"489","title":"Option: vim.git.git-conflict.mappings.prevConflict","content":"Go to the previous Conflict [Git-Conflict]","path":"options.html#option-vim-git-git-conflict-mappings-prevConflict"},{"id":"490","title":"Option: vim.git.git-conflict.mappings.theirs","content":"Choose Theirs [Git-Conflict]","path":"options.html#option-vim-git-git-conflict-mappings-theirs"},{"id":"491","title":"Option: vim.git.git-conflict.setupOpts","content":"Option table to pass into the setup function of git-conflict\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-git-git-conflict-setupOpts"},{"id":"492","title":"Option: vim.git.gitlinker-nvim.enable","content":"Whether to enable gitlinker-nvim.","path":"options.html#option-vim-git-gitlinker-nvim-enable"},{"id":"493","title":"Option: vim.git.gitlinker-nvim.setupOpts","content":"Option table to pass into the setup function of gitlinker-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-git-gitlinker-nvim-setupOpts"},{"id":"494","title":"Option: vim.git.gitsigns.codeActions.enable","content":"Whether to enable gitsigns codeactions through null-ls.","path":"options.html#option-vim-git-gitsigns-codeActions-enable"},{"id":"495","title":"Option: vim.git.gitsigns.enable","content":"Whether to enable gitsigns.","path":"options.html#option-vim-git-gitsigns-enable"},{"id":"496","title":"Option: vim.git.gitsigns.mappings.blameLine","content":"Blame line [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-blameLine"},{"id":"497","title":"Option: vim.git.gitsigns.mappings.diffProject","content":"Diff project [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-diffProject"},{"id":"498","title":"Option: vim.git.gitsigns.mappings.diffThis","content":"Diff this [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-diffThis"},{"id":"499","title":"Option: vim.git.gitsigns.mappings.nextHunk","content":"Next hunk [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-nextHunk"},{"id":"500","title":"Option: vim.git.gitsigns.mappings.previewHunk","content":"Preview hunk [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-previewHunk"},{"id":"501","title":"Option: vim.git.gitsigns.mappings.previousHunk","content":"Previous hunk [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-previousHunk"},{"id":"502","title":"Option: vim.git.gitsigns.mappings.resetBuffer","content":"Reset buffer [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-resetBuffer"},{"id":"503","title":"Option: vim.git.gitsigns.mappings.resetHunk","content":"Reset hunk [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-resetHunk"},{"id":"504","title":"Option: vim.git.gitsigns.mappings.stageBuffer","content":"Stage buffer [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-stageBuffer"},{"id":"505","title":"Option: vim.git.gitsigns.mappings.stageHunk","content":"Stage hunk [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-stageHunk"},{"id":"506","title":"Option: vim.git.gitsigns.mappings.toggleBlame","content":"Toggle blame [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-toggleBlame"},{"id":"507","title":"Option: vim.git.gitsigns.mappings.toggleDeleted","content":"Toggle deleted [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-toggleDeleted"},{"id":"508","title":"Option: vim.git.gitsigns.mappings.undoStageHunk","content":"Undo stage hunk [Gitsigns]","path":"options.html#option-vim-git-gitsigns-mappings-undoStageHunk"},{"id":"509","title":"Option: vim.git.gitsigns.setupOpts","content":"Option table to pass into the setup function of gitsigns\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-git-gitsigns-setupOpts"},{"id":"510","title":"Option: vim.git.vim-fugitive.enable","content":"Whether to enable vim-fugitive.","path":"options.html#option-vim-git-vim-fugitive-enable"},{"id":"511","title":"Option: vim.globals","content":"A freeform attribute set containing global variable values for setting vim\nvariables as early as possible. If populated, this option will set vim variables\nin the built {option}`luaConfigRC` as the first item.\n\n::: {.note}\n`{foo = \"bar\";}` will set `vim.g.foo` to \"bar\", where the type of `bar` in the\nresulting Lua value will be inferred from the type of the value in the\n`{name = value;}` pair passed to the option.\n:::\n","path":"options.html#option-vim-globals"},{"id":"512","title":"Option: vim.globals.editorconfig","content":"Whether to enable EditorConfig integration in Neovim.\n\nThis defaults to true as it is enabled by default in stock\nNeovim, setting this option to false disables EditorConfig\nintegration entirely.\n\nSee [Neovim documentation](https://neovim.io/doc/user/editorconfig.html)\nfor more details on configuring EditorConfig behaviour.\n","path":"options.html#option-vim-globals-editorconfig"},{"id":"513","title":"Option: vim.globals.mapleader","content":"The key used for `<leader>` mappings","path":"options.html#option-vim-globals-mapleader"},{"id":"514","title":"Option: vim.globals.maplocalleader","content":"The key used for `<localleader>` mappings","path":"options.html#option-vim-globals-maplocalleader"},{"id":"515","title":"Option: vim.hideSearchHighlight","content":"Hide search highlight so it doesn't stay highlighted","path":"options.html#option-vim-hideSearchHighlight"},{"id":"516","title":"Option: vim.highlight","content":"Custom highlights to apply","path":"options.html#option-vim-highlight"},{"id":"517","title":"Option: vim.highlight.<name>.bg","content":"The background color to use. Written as color name or hex \"#RRGGBB\".\n","path":"options.html#option-vim-highlight-<name>-bg"},{"id":"518","title":"Option: vim.highlight.<name>.blend","content":"Blend as an integer between 0 and 100","path":"options.html#option-vim-highlight-<name>-blend"},{"id":"519","title":"Option: vim.highlight.<name>.bold","content":"Whether to enable bold","path":"options.html#option-vim-highlight-<name>-bold"},{"id":"520","title":"Option: vim.highlight.<name>.cterm","content":"The cterm arguments to use. See ':h highlight-args'","path":"options.html#option-vim-highlight-<name>-cterm"},{"id":"521","title":"Option: vim.highlight.<name>.ctermbg","content":"The cterm background color to use","path":"options.html#option-vim-highlight-<name>-ctermbg"},{"id":"522","title":"Option: vim.highlight.<name>.ctermfg","content":"The cterm foreground color to use","path":"options.html#option-vim-highlight-<name>-ctermfg"},{"id":"523","title":"Option: vim.highlight.<name>.default","content":"Don't override existing definition","path":"options.html#option-vim-highlight-<name>-default"},{"id":"524","title":"Option: vim.highlight.<name>.fg","content":"The foreground color to use. Written as color name or hex \"#RRGGBB\".\n","path":"options.html#option-vim-highlight-<name>-fg"},{"id":"525","title":"Option: vim.highlight.<name>.force","content":"Whether to enable force update","path":"options.html#option-vim-highlight-<name>-force"},{"id":"526","title":"Option: vim.highlight.<name>.italic","content":"Whether to enable italic","path":"options.html#option-vim-highlight-<name>-italic"},{"id":"527","title":"Option: vim.highlight.<name>.link","content":"The name of another highlight group to link to","path":"options.html#option-vim-highlight-<name>-link"},{"id":"528","title":"Option: vim.highlight.<name>.nocombine","content":"Whether to enable nocombine","path":"options.html#option-vim-highlight-<name>-nocombine"},{"id":"529","title":"Option: vim.highlight.<name>.reverse","content":"Whether to enable reverse","path":"options.html#option-vim-highlight-<name>-reverse"},{"id":"530","title":"Option: vim.highlight.<name>.sp","content":"The special color to use. Written as color name or hex \"#RRGGBB\".\n","path":"options.html#option-vim-highlight-<name>-sp"},{"id":"531","title":"Option: vim.highlight.<name>.standout","content":"Whether to enable standout","path":"options.html#option-vim-highlight-<name>-standout"},{"id":"532","title":"Option: vim.highlight.<name>.strikethrough","content":"Whether to enable strikethrough","path":"options.html#option-vim-highlight-<name>-strikethrough"},{"id":"533","title":"Option: vim.highlight.<name>.undercurl","content":"Whether to enable undercurl","path":"options.html#option-vim-highlight-<name>-undercurl"},{"id":"534","title":"Option: vim.highlight.<name>.underdashed","content":"Whether to enable underdashed","path":"options.html#option-vim-highlight-<name>-underdashed"},{"id":"535","title":"Option: vim.highlight.<name>.underdotted","content":"Whether to enable underdotted","path":"options.html#option-vim-highlight-<name>-underdotted"},{"id":"536","title":"Option: vim.highlight.<name>.underdouble","content":"Whether to enable underdouble","path":"options.html#option-vim-highlight-<name>-underdouble"},{"id":"537","title":"Option: vim.highlight.<name>.underline","content":"Whether to enable underline","path":"options.html#option-vim-highlight-<name>-underline"},{"id":"538","title":"Option: vim.keymaps","content":"Custom keybindings.","path":"options.html#option-vim-keymaps"},{"id":"539","title":"Option: vim.keymaps.*.action","content":"The command to execute.","path":"options.html#option-vim-keymaps-*-action"},{"id":"540","title":"Option: vim.keymaps.*.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-keymaps-*-desc"},{"id":"541","title":"Option: vim.keymaps.*.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-keymaps-*-expr"},{"id":"542","title":"Option: vim.keymaps.*.key","content":"The key that triggers this keybind.","path":"options.html#option-vim-keymaps-*-key"},{"id":"543","title":"Option: vim.keymaps.*.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-keymaps-*-lua"},{"id":"544","title":"Option: vim.keymaps.*.mode","content":"The short-name of the mode to set the keymapping for. Passing an empty string is the equivalent of `:map`.\n\nSee `:help map-modes` for a list of modes.\n","path":"options.html#option-vim-keymaps-*-mode"},{"id":"545","title":"Option: vim.keymaps.*.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-keymaps-*-noremap"},{"id":"546","title":"Option: vim.keymaps.*.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-keymaps-*-nowait"},{"id":"547","title":"Option: vim.keymaps.*.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-keymaps-*-script"},{"id":"548","title":"Option: vim.keymaps.*.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-keymaps-*-silent"},{"id":"549","title":"Option: vim.keymaps.*.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-keymaps-*-unique"},{"id":"550","title":"Option: vim.languages.assembly.enable","content":"Whether to enable Assembly support.","path":"options.html#option-vim-languages-assembly-enable"},{"id":"551","title":"Option: vim.languages.assembly.lsp.enable","content":"Whether to enable Assembly LSP support (asm-lsp).","path":"options.html#option-vim-languages-assembly-lsp-enable"},{"id":"552","title":"Option: vim.languages.assembly.lsp.package","content":"asm-lsp package","path":"options.html#option-vim-languages-assembly-lsp-package"},{"id":"553","title":"Option: vim.languages.assembly.treesitter.enable","content":"Whether to enable Assembly treesitter.","path":"options.html#option-vim-languages-assembly-treesitter-enable"},{"id":"554","title":"Option: vim.languages.assembly.treesitter.package","content":"The asm treesitter package to use.","path":"options.html#option-vim-languages-assembly-treesitter-package"},{"id":"555","title":"Option: vim.languages.astro.enable","content":"Whether to enable Astro language support.","path":"options.html#option-vim-languages-astro-enable"},{"id":"556","title":"Option: vim.languages.astro.extraDiagnostics.enable","content":"Whether to enable extra Astro diagnostics.","path":"options.html#option-vim-languages-astro-extraDiagnostics-enable"},{"id":"557","title":"Option: vim.languages.astro.extraDiagnostics.types","content":"List of Astro diagnostics to enable","path":"options.html#option-vim-languages-astro-extraDiagnostics-types"},{"id":"558","title":"Option: vim.languages.astro.format.enable","content":"Whether to enable Astro formatting.","path":"options.html#option-vim-languages-astro-format-enable"},{"id":"559","title":"Option: vim.languages.astro.format.package","content":"Astro formatter package","path":"options.html#option-vim-languages-astro-format-package"},{"id":"560","title":"Option: vim.languages.astro.format.type","content":"Astro formatter to use","path":"options.html#option-vim-languages-astro-format-type"},{"id":"561","title":"Option: vim.languages.astro.lsp.enable","content":"Whether to enable Astro LSP support.","path":"options.html#option-vim-languages-astro-lsp-enable"},{"id":"562","title":"Option: vim.languages.astro.lsp.package","content":"Astro LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-astro-lsp-package"},{"id":"563","title":"Option: vim.languages.astro.lsp.server","content":"Astro LSP server to use","path":"options.html#option-vim-languages-astro-lsp-server"},{"id":"564","title":"Option: vim.languages.astro.treesitter.astroPackage","content":"The astro treesitter package to use.","path":"options.html#option-vim-languages-astro-treesitter-astroPackage"},{"id":"565","title":"Option: vim.languages.astro.treesitter.enable","content":"Whether to enable Astro treesitter.","path":"options.html#option-vim-languages-astro-treesitter-enable"},{"id":"566","title":"Option: vim.languages.bash.enable","content":"Whether to enable Bash language support.","path":"options.html#option-vim-languages-bash-enable"},{"id":"567","title":"Option: vim.languages.bash.extraDiagnostics.enable","content":"Whether to enable extra Bash diagnostics.","path":"options.html#option-vim-languages-bash-extraDiagnostics-enable"},{"id":"568","title":"Option: vim.languages.bash.extraDiagnostics.types","content":"List of Bash diagnostics to enable","path":"options.html#option-vim-languages-bash-extraDiagnostics-types"},{"id":"569","title":"Option: vim.languages.bash.format.enable","content":"Enable Bash formatting","path":"options.html#option-vim-languages-bash-format-enable"},{"id":"570","title":"Option: vim.languages.bash.format.package","content":"Bash formatter package","path":"options.html#option-vim-languages-bash-format-package"},{"id":"571","title":"Option: vim.languages.bash.format.type","content":"Bash formatter to use","path":"options.html#option-vim-languages-bash-format-type"},{"id":"572","title":"Option: vim.languages.bash.lsp.enable","content":"Whether to enable Enable Bash LSP support.","path":"options.html#option-vim-languages-bash-lsp-enable"},{"id":"573","title":"Option: vim.languages.bash.lsp.package","content":"bash-language-server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-bash-lsp-package"},{"id":"574","title":"Option: vim.languages.bash.lsp.server","content":"Bash LSP server to use","path":"options.html#option-vim-languages-bash-lsp-server"},{"id":"575","title":"Option: vim.languages.bash.treesitter.enable","content":"Whether to enable Bash treesitter.","path":"options.html#option-vim-languages-bash-treesitter-enable"},{"id":"576","title":"Option: vim.languages.bash.treesitter.package","content":"The bash treesitter package to use.","path":"options.html#option-vim-languages-bash-treesitter-package"},{"id":"577","title":"Option: vim.languages.clang.cHeader","content":"C syntax for headers. Can fix treesitter errors, see:\nhttps://www.reddit.com/r/neovim/comments/orfpcd/question_does_the_c_parser_from_nvimtreesitter/\n","path":"options.html#option-vim-languages-clang-cHeader"},{"id":"578","title":"Option: vim.languages.clang.dap.debugger","content":"clang debugger to use","path":"options.html#option-vim-languages-clang-dap-debugger"},{"id":"579","title":"Option: vim.languages.clang.dap.enable","content":"Enable clang Debug Adapter","path":"options.html#option-vim-languages-clang-dap-enable"},{"id":"580","title":"Option: vim.languages.clang.dap.package","content":"clang debugger package.","path":"options.html#option-vim-languages-clang-dap-package"},{"id":"581","title":"Option: vim.languages.clang.enable","content":"Whether to enable C/C++ language support.","path":"options.html#option-vim-languages-clang-enable"},{"id":"582","title":"Option: vim.languages.clang.lsp.enable","content":"Whether to enable clang LSP support.","path":"options.html#option-vim-languages-clang-lsp-enable"},{"id":"583","title":"Option: vim.languages.clang.lsp.opts","content":"Options to pass to clang LSP server","path":"options.html#option-vim-languages-clang-lsp-opts"},{"id":"584","title":"Option: vim.languages.clang.lsp.package","content":"clang LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-clang-lsp-package"},{"id":"585","title":"Option: vim.languages.clang.lsp.server","content":"The clang LSP server to use","path":"options.html#option-vim-languages-clang-lsp-server"},{"id":"586","title":"Option: vim.languages.clang.treesitter.cPackage","content":"The c treesitter package to use.","path":"options.html#option-vim-languages-clang-treesitter-cPackage"},{"id":"587","title":"Option: vim.languages.clang.treesitter.cppPackage","content":"The cpp treesitter package to use.","path":"options.html#option-vim-languages-clang-treesitter-cppPackage"},{"id":"588","title":"Option: vim.languages.clang.treesitter.enable","content":"Whether to enable C/C++ treesitter.","path":"options.html#option-vim-languages-clang-treesitter-enable"},{"id":"589","title":"Option: vim.languages.clojure.enable","content":"Whether to enable Clojure language support.","path":"options.html#option-vim-languages-clojure-enable"},{"id":"590","title":"Option: vim.languages.clojure.lsp.enable","content":"Whether to enable Clojure LSP support.","path":"options.html#option-vim-languages-clojure-lsp-enable"},{"id":"591","title":"Option: vim.languages.clojure.lsp.package","content":"Clojure LSP","path":"options.html#option-vim-languages-clojure-lsp-package"},{"id":"592","title":"Option: vim.languages.clojure.treesitter.enable","content":"Whether to enable Clojure treesitter.","path":"options.html#option-vim-languages-clojure-treesitter-enable"},{"id":"593","title":"Option: vim.languages.clojure.treesitter.package","content":"The clojure treesitter package to use.","path":"options.html#option-vim-languages-clojure-treesitter-package"},{"id":"594","title":"Option: vim.languages.csharp.enable","content":"Whether to enable C# language support.","path":"options.html#option-vim-languages-csharp-enable"},{"id":"595","title":"Option: vim.languages.csharp.lsp.enable","content":"Whether to enable C# LSP support.","path":"options.html#option-vim-languages-csharp-lsp-enable"},{"id":"596","title":"Option: vim.languages.csharp.lsp.package","content":"C# LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-csharp-lsp-package"},{"id":"597","title":"Option: vim.languages.csharp.lsp.server","content":"C# LSP server to use","path":"options.html#option-vim-languages-csharp-lsp-server"},{"id":"598","title":"Option: vim.languages.csharp.treesitter.enable","content":"Whether to enable C# treesitter.","path":"options.html#option-vim-languages-csharp-treesitter-enable"},{"id":"599","title":"Option: vim.languages.csharp.treesitter.package","content":"The c-sharp treesitter package to use.","path":"options.html#option-vim-languages-csharp-treesitter-package"},{"id":"600","title":"Option: vim.languages.css.enable","content":"Whether to enable CSS language support.","path":"options.html#option-vim-languages-css-enable"},{"id":"601","title":"Option: vim.languages.css.format.enable","content":"Whether to enable CSS formatting.","path":"options.html#option-vim-languages-css-format-enable"},{"id":"602","title":"Option: vim.languages.css.format.package","content":"CSS formatter package","path":"options.html#option-vim-languages-css-format-package"},{"id":"603","title":"Option: vim.languages.css.format.type","content":"CSS formatter to use","path":"options.html#option-vim-languages-css-format-type"},{"id":"604","title":"Option: vim.languages.css.lsp.enable","content":"Whether to enable CSS LSP support.","path":"options.html#option-vim-languages-css-lsp-enable"},{"id":"605","title":"Option: vim.languages.css.lsp.package","content":"CSS LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-css-lsp-package"},{"id":"606","title":"Option: vim.languages.css.lsp.server","content":"CSS LSP server to use","path":"options.html#option-vim-languages-css-lsp-server"},{"id":"607","title":"Option: vim.languages.css.treesitter.enable","content":"Whether to enable CSS treesitter.","path":"options.html#option-vim-languages-css-treesitter-enable"},{"id":"608","title":"Option: vim.languages.css.treesitter.package","content":"The css treesitter package to use.","path":"options.html#option-vim-languages-css-treesitter-package"},{"id":"609","title":"Option: vim.languages.cue.enable","content":"Whether to enable CUE language support.","path":"options.html#option-vim-languages-cue-enable"},{"id":"610","title":"Option: vim.languages.cue.lsp.enable","content":"Whether to enable CUE LSP support.","path":"options.html#option-vim-languages-cue-lsp-enable"},{"id":"611","title":"Option: vim.languages.cue.lsp.package","content":"cue lsp implementation","path":"options.html#option-vim-languages-cue-lsp-package"},{"id":"612","title":"Option: vim.languages.cue.treesitter.enable","content":"Whether to enable CUE treesitter.","path":"options.html#option-vim-languages-cue-treesitter-enable"},{"id":"613","title":"Option: vim.languages.cue.treesitter.package","content":"The cue treesitter package to use.","path":"options.html#option-vim-languages-cue-treesitter-package"},{"id":"614","title":"Option: vim.languages.dart.dap.enable","content":"Enable Dart DAP support via flutter-tools","path":"options.html#option-vim-languages-dart-dap-enable"},{"id":"615","title":"Option: vim.languages.dart.enable","content":"Whether to enable Dart language support.","path":"options.html#option-vim-languages-dart-enable"},{"id":"616","title":"Option: vim.languages.dart.flutter-tools.color.enable","content":"Whether to enable highlighting color variables.","path":"options.html#option-vim-languages-dart-flutter-tools-color-enable"},{"id":"617","title":"Option: vim.languages.dart.flutter-tools.color.highlightBackground","content":"Highlight the background","path":"options.html#option-vim-languages-dart-flutter-tools-color-highlightBackground"},{"id":"618","title":"Option: vim.languages.dart.flutter-tools.color.highlightForeground","content":"Highlight the foreground","path":"options.html#option-vim-languages-dart-flutter-tools-color-highlightForeground"},{"id":"619","title":"Option: vim.languages.dart.flutter-tools.color.virtualText.character","content":"Virtual text character to highlight","path":"options.html#option-vim-languages-dart-flutter-tools-color-virtualText-character"},{"id":"620","title":"Option: vim.languages.dart.flutter-tools.color.virtualText.enable","content":"Whether to enable Show the highlight using virtual text.","path":"options.html#option-vim-languages-dart-flutter-tools-color-virtualText-enable"},{"id":"621","title":"Option: vim.languages.dart.flutter-tools.enable","content":"Enable flutter-tools for flutter support","path":"options.html#option-vim-languages-dart-flutter-tools-enable"},{"id":"622","title":"Option: vim.languages.dart.flutter-tools.enableNoResolvePatch","content":"Whether to patch flutter-tools so that it doesn't resolve\nsymlinks when detecting flutter path.\n\n::: {.note}\nThis is required if `flutterPackage` is set to null and the flutter\npackage in your `PATH` was built with Nix. If you are using a flutter\nSDK installed from a different source and encounter the error \"`dart`\nmissing from `PATH`\", leave this option disabled.\n:::\n","path":"options.html#option-vim-languages-dart-flutter-tools-enableNoResolvePatch"},{"id":"623","title":"Option: vim.languages.dart.flutter-tools.flutterPackage","content":"Flutter package, or null to detect the flutter path at runtime instead.","path":"options.html#option-vim-languages-dart-flutter-tools-flutterPackage"},{"id":"624","title":"Option: vim.languages.dart.lsp.enable","content":"Whether to enable Dart LSP support.","path":"options.html#option-vim-languages-dart-lsp-enable"},{"id":"625","title":"Option: vim.languages.dart.lsp.opts","content":"Options to pass to Dart LSP server","path":"options.html#option-vim-languages-dart-lsp-opts"},{"id":"626","title":"Option: vim.languages.dart.lsp.package","content":"Dart LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-dart-lsp-package"},{"id":"627","title":"Option: vim.languages.dart.lsp.server","content":"The Dart LSP server to use","path":"options.html#option-vim-languages-dart-lsp-server"},{"id":"628","title":"Option: vim.languages.dart.treesitter.enable","content":"Whether to enable Dart treesitter.","path":"options.html#option-vim-languages-dart-treesitter-enable"},{"id":"629","title":"Option: vim.languages.dart.treesitter.package","content":"The dart treesitter package to use.","path":"options.html#option-vim-languages-dart-treesitter-package"},{"id":"630","title":"Option: vim.languages.elixir.elixir-tools.enable","content":"Whether to enable Elixir tools.","path":"options.html#option-vim-languages-elixir-elixir-tools-enable"},{"id":"631","title":"Option: vim.languages.elixir.enable","content":"Whether to enable Elixir language support.","path":"options.html#option-vim-languages-elixir-enable"},{"id":"632","title":"Option: vim.languages.elixir.format.enable","content":"Whether to enable Elixir formatting.","path":"options.html#option-vim-languages-elixir-format-enable"},{"id":"633","title":"Option: vim.languages.elixir.format.package","content":"Elixir formatter package","path":"options.html#option-vim-languages-elixir-format-package"},{"id":"634","title":"Option: vim.languages.elixir.format.type","content":"Elixir formatter to use","path":"options.html#option-vim-languages-elixir-format-type"},{"id":"635","title":"Option: vim.languages.elixir.lsp.enable","content":"Whether to enable Elixir LSP support.","path":"options.html#option-vim-languages-elixir-lsp-enable"},{"id":"636","title":"Option: vim.languages.elixir.lsp.package","content":"Elixir LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-elixir-lsp-package"},{"id":"637","title":"Option: vim.languages.elixir.lsp.server","content":"Elixir LSP server to use","path":"options.html#option-vim-languages-elixir-lsp-server"},{"id":"638","title":"Option: vim.languages.elixir.treesitter.enable","content":"Whether to enable Elixir treesitter.","path":"options.html#option-vim-languages-elixir-treesitter-enable"},{"id":"639","title":"Option: vim.languages.elixir.treesitter.package","content":"The elixir treesitter package to use.","path":"options.html#option-vim-languages-elixir-treesitter-package"},{"id":"640","title":"Option: vim.languages.enableDAP","content":"Turn on Debug Adapter for enabled languages by default","path":"options.html#option-vim-languages-enableDAP"},{"id":"641","title":"Option: vim.languages.enableExtraDiagnostics","content":"Turn on extra diagnostics for enabled languages by default","path":"options.html#option-vim-languages-enableExtraDiagnostics"},{"id":"642","title":"Option: vim.languages.enableFormat","content":"Turn on Formatting for enabled languages by default","path":"options.html#option-vim-languages-enableFormat"},{"id":"643","title":"Option: vim.languages.enableTreesitter","content":"Turn on Treesitter for enabled languages by default","path":"options.html#option-vim-languages-enableTreesitter"},{"id":"644","title":"Option: vim.languages.fsharp.enable","content":"Whether to enable F# language support.","path":"options.html#option-vim-languages-fsharp-enable"},{"id":"645","title":"Option: vim.languages.fsharp.format.enable","content":"Whether to enable F# formatting.","path":"options.html#option-vim-languages-fsharp-format-enable"},{"id":"646","title":"Option: vim.languages.fsharp.format.package","content":"F# formatter package","path":"options.html#option-vim-languages-fsharp-format-package"},{"id":"647","title":"Option: vim.languages.fsharp.format.type","content":"F# formatter to use","path":"options.html#option-vim-languages-fsharp-format-type"},{"id":"648","title":"Option: vim.languages.fsharp.lsp.enable","content":"Whether to enable F# LSP support.","path":"options.html#option-vim-languages-fsharp-lsp-enable"},{"id":"649","title":"Option: vim.languages.fsharp.lsp.package","content":"F# LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-fsharp-lsp-package"},{"id":"650","title":"Option: vim.languages.fsharp.lsp.server","content":"F# LSP server to use","path":"options.html#option-vim-languages-fsharp-lsp-server"},{"id":"651","title":"Option: vim.languages.fsharp.treesitter.enable","content":"Whether to enable F# treesitter.","path":"options.html#option-vim-languages-fsharp-treesitter-enable"},{"id":"652","title":"Option: vim.languages.fsharp.treesitter.package","content":"The fsharp treesitter package to use.","path":"options.html#option-vim-languages-fsharp-treesitter-package"},{"id":"653","title":"Option: vim.languages.gleam.enable","content":"Whether to enable Gleam language support.","path":"options.html#option-vim-languages-gleam-enable"},{"id":"654","title":"Option: vim.languages.gleam.lsp.enable","content":"Whether to enable Gleam LSP support.","path":"options.html#option-vim-languages-gleam-lsp-enable"},{"id":"655","title":"Option: vim.languages.gleam.lsp.package","content":"Gleam LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-gleam-lsp-package"},{"id":"656","title":"Option: vim.languages.gleam.lsp.server","content":"Gleam LSP server to use","path":"options.html#option-vim-languages-gleam-lsp-server"},{"id":"657","title":"Option: vim.languages.gleam.treesitter.enable","content":"Whether to enable Gleam treesitter.","path":"options.html#option-vim-languages-gleam-treesitter-enable"},{"id":"658","title":"Option: vim.languages.gleam.treesitter.package","content":"The gleam treesitter package to use.","path":"options.html#option-vim-languages-gleam-treesitter-package"},{"id":"659","title":"Option: vim.languages.go.dap.debugger","content":"Go debugger to use","path":"options.html#option-vim-languages-go-dap-debugger"},{"id":"660","title":"Option: vim.languages.go.dap.enable","content":"Enable Go Debug Adapter via nvim-dap-go plugin","path":"options.html#option-vim-languages-go-dap-enable"},{"id":"661","title":"Option: vim.languages.go.dap.package","content":"Go debugger package.","path":"options.html#option-vim-languages-go-dap-package"},{"id":"662","title":"Option: vim.languages.go.enable","content":"Whether to enable Go language support.","path":"options.html#option-vim-languages-go-enable"},{"id":"663","title":"Option: vim.languages.go.format.enable","content":"Whether to enable Go formatting.","path":"options.html#option-vim-languages-go-format-enable"},{"id":"664","title":"Option: vim.languages.go.format.package","content":"Go formatter package","path":"options.html#option-vim-languages-go-format-package"},{"id":"665","title":"Option: vim.languages.go.format.type","content":"Go formatter to use","path":"options.html#option-vim-languages-go-format-type"},{"id":"666","title":"Option: vim.languages.go.lsp.enable","content":"Whether to enable Go LSP support.","path":"options.html#option-vim-languages-go-lsp-enable"},{"id":"667","title":"Option: vim.languages.go.lsp.package","content":"Go LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-go-lsp-package"},{"id":"668","title":"Option: vim.languages.go.lsp.server","content":"Go LSP server to use","path":"options.html#option-vim-languages-go-lsp-server"},{"id":"669","title":"Option: vim.languages.go.treesitter.enable","content":"Whether to enable Go treesitter.","path":"options.html#option-vim-languages-go-treesitter-enable"},{"id":"670","title":"Option: vim.languages.go.treesitter.package","content":"The go treesitter package to use.","path":"options.html#option-vim-languages-go-treesitter-package"},{"id":"671","title":"Option: vim.languages.haskell.dap.enable","content":"Whether to enable DAP support for Haskell.","path":"options.html#option-vim-languages-haskell-dap-enable"},{"id":"672","title":"Option: vim.languages.haskell.dap.package","content":"Haskell DAP package or command to run the Haskell DAP","path":"options.html#option-vim-languages-haskell-dap-package"},{"id":"673","title":"Option: vim.languages.haskell.enable","content":"Whether to enable Haskell support.","path":"options.html#option-vim-languages-haskell-enable"},{"id":"674","title":"Option: vim.languages.haskell.lsp.enable","content":"Whether to enable LSP support for Haskell.","path":"options.html#option-vim-languages-haskell-lsp-enable"},{"id":"675","title":"Option: vim.languages.haskell.lsp.package","content":"Haskell LSP package or command to run the Haskell LSP","path":"options.html#option-vim-languages-haskell-lsp-package"},{"id":"676","title":"Option: vim.languages.haskell.treesitter.enable","content":"Whether to enable Treesitter support for Haskell.","path":"options.html#option-vim-languages-haskell-treesitter-enable"},{"id":"677","title":"Option: vim.languages.haskell.treesitter.package","content":"The haskell treesitter package to use.","path":"options.html#option-vim-languages-haskell-treesitter-package"},{"id":"678","title":"Option: vim.languages.hcl.enable","content":"Whether to enable HCL support.","path":"options.html#option-vim-languages-hcl-enable"},{"id":"679","title":"Option: vim.languages.hcl.format.enable","content":"Enable HCL formatting","path":"options.html#option-vim-languages-hcl-format-enable"},{"id":"680","title":"Option: vim.languages.hcl.format.package","content":"HCL formatter package","path":"options.html#option-vim-languages-hcl-format-package"},{"id":"681","title":"Option: vim.languages.hcl.format.type","content":"HCL formatter to use","path":"options.html#option-vim-languages-hcl-format-type"},{"id":"682","title":"Option: vim.languages.hcl.lsp.enable","content":"Whether to enable HCL LSP support (terraform-ls).","path":"options.html#option-vim-languages-hcl-lsp-enable"},{"id":"683","title":"Option: vim.languages.hcl.lsp.package","content":"HCL language server package (terraform-ls)","path":"options.html#option-vim-languages-hcl-lsp-package"},{"id":"684","title":"Option: vim.languages.hcl.treesitter.enable","content":"Whether to enable HCL treesitter.","path":"options.html#option-vim-languages-hcl-treesitter-enable"},{"id":"685","title":"Option: vim.languages.hcl.treesitter.package","content":"The hcl treesitter package to use.","path":"options.html#option-vim-languages-hcl-treesitter-package"},{"id":"686","title":"Option: vim.languages.helm.enable","content":"Whether to enable Helm language support.","path":"options.html#option-vim-languages-helm-enable"},{"id":"687","title":"Option: vim.languages.helm.lsp.enable","content":"Whether to enable Helm LSP support.","path":"options.html#option-vim-languages-helm-lsp-enable"},{"id":"688","title":"Option: vim.languages.helm.lsp.package","content":"Helm LSP server package","path":"options.html#option-vim-languages-helm-lsp-package"},{"id":"689","title":"Option: vim.languages.helm.lsp.server","content":"Helm LSP server to use","path":"options.html#option-vim-languages-helm-lsp-server"},{"id":"690","title":"Option: vim.languages.helm.treesitter.enable","content":"Whether to enable Helm treesitter.","path":"options.html#option-vim-languages-helm-treesitter-enable"},{"id":"691","title":"Option: vim.languages.helm.treesitter.package","content":"The helm treesitter package to use.","path":"options.html#option-vim-languages-helm-treesitter-package"},{"id":"692","title":"Option: vim.languages.html.enable","content":"Whether to enable HTML language support.","path":"options.html#option-vim-languages-html-enable"},{"id":"693","title":"Option: vim.languages.html.treesitter.autotagHtml","content":"Enable autoclose/autorename of html tags (nvim-ts-autotag)","path":"options.html#option-vim-languages-html-treesitter-autotagHtml"},{"id":"694","title":"Option: vim.languages.html.treesitter.enable","content":"Whether to enable HTML treesitter support.","path":"options.html#option-vim-languages-html-treesitter-enable"},{"id":"695","title":"Option: vim.languages.html.treesitter.package","content":"The html treesitter package to use.","path":"options.html#option-vim-languages-html-treesitter-package"},{"id":"696","title":"Option: vim.languages.java.enable","content":"Whether to enable Java language support.","path":"options.html#option-vim-languages-java-enable"},{"id":"697","title":"Option: vim.languages.java.lsp.enable","content":"Whether to enable Java LSP support (java-language-server).","path":"options.html#option-vim-languages-java-lsp-enable"},{"id":"698","title":"Option: vim.languages.java.lsp.package","content":"java language server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-java-lsp-package"},{"id":"699","title":"Option: vim.languages.java.treesitter.enable","content":"Whether to enable Java treesitter.","path":"options.html#option-vim-languages-java-treesitter-enable"},{"id":"700","title":"Option: vim.languages.java.treesitter.package","content":"The java treesitter package to use.","path":"options.html#option-vim-languages-java-treesitter-package"},{"id":"701","title":"Option: vim.languages.julia.enable","content":"Whether to enable Julia language support.","path":"options.html#option-vim-languages-julia-enable"},{"id":"702","title":"Option: vim.languages.julia.lsp.enable","content":"Whether to enable Julia LSP support.\n\n::: {.note}\nThe entirety of Julia is bundled with nvf, if you enable this\noption, since there is no way to provide only the LSP server.\n\nIf you want to avoid that, you have to change\n[](#opt-vim.languages.julia.lsp.package) to use the Julia binary\nin {env}`PATH` (set it to `null`), and add the `LanguageServer` package to\nJulia in your devshells.\n:::\n","path":"options.html#option-vim-languages-julia-lsp-enable"},{"id":"703","title":"Option: vim.languages.julia.lsp.package","content":"Julia LSP server package, `null` to use the Julia binary in {env}`PATH`, or\nthe command to run as a list of strings.\n","path":"options.html#option-vim-languages-julia-lsp-package"},{"id":"704","title":"Option: vim.languages.julia.lsp.server","content":"Julia LSP server to use","path":"options.html#option-vim-languages-julia-lsp-server"},{"id":"705","title":"Option: vim.languages.julia.treesitter.enable","content":"Whether to enable Julia treesitter.","path":"options.html#option-vim-languages-julia-treesitter-enable"},{"id":"706","title":"Option: vim.languages.julia.treesitter.package","content":"The julia treesitter package to use.","path":"options.html#option-vim-languages-julia-treesitter-package"},{"id":"707","title":"Option: vim.languages.kotlin.enable","content":"Whether to enable Kotlin/HCL support.","path":"options.html#option-vim-languages-kotlin-enable"},{"id":"708","title":"Option: vim.languages.kotlin.extraDiagnostics.enable","content":"Whether to enable extra Kotlin diagnostics.","path":"options.html#option-vim-languages-kotlin-extraDiagnostics-enable"},{"id":"709","title":"Option: vim.languages.kotlin.extraDiagnostics.types","content":"List of Kotlin diagnostics to enable","path":"options.html#option-vim-languages-kotlin-extraDiagnostics-types"},{"id":"710","title":"Option: vim.languages.kotlin.lsp.enable","content":"Whether to enable Kotlin LSP support.","path":"options.html#option-vim-languages-kotlin-lsp-enable"},{"id":"711","title":"Option: vim.languages.kotlin.lsp.package","content":"kotlin_language_server package with Kotlin runtime","path":"options.html#option-vim-languages-kotlin-lsp-package"},{"id":"712","title":"Option: vim.languages.kotlin.treesitter.enable","content":"Whether to enable Kotlin treesitter.","path":"options.html#option-vim-languages-kotlin-treesitter-enable"},{"id":"713","title":"Option: vim.languages.kotlin.treesitter.package","content":"The kotlin treesitter package to use.","path":"options.html#option-vim-languages-kotlin-treesitter-package"},{"id":"714","title":"Option: vim.languages.lua.enable","content":"Whether to enable Lua language support.","path":"options.html#option-vim-languages-lua-enable"},{"id":"715","title":"Option: vim.languages.lua.extraDiagnostics.enable","content":"Whether to enable extra Lua diagnostics.","path":"options.html#option-vim-languages-lua-extraDiagnostics-enable"},{"id":"716","title":"Option: vim.languages.lua.extraDiagnostics.types","content":"List of Lua diagnostics to enable","path":"options.html#option-vim-languages-lua-extraDiagnostics-types"},{"id":"717","title":"Option: vim.languages.lua.format.enable","content":"Enable Lua formatting","path":"options.html#option-vim-languages-lua-format-enable"},{"id":"718","title":"Option: vim.languages.lua.format.package","content":"Lua formatter package","path":"options.html#option-vim-languages-lua-format-package"},{"id":"719","title":"Option: vim.languages.lua.format.type","content":"Lua formatter to use","path":"options.html#option-vim-languages-lua-format-type"},{"id":"720","title":"Option: vim.languages.lua.lsp.enable","content":"Whether to enable Lua LSP support via LuaLS.","path":"options.html#option-vim-languages-lua-lsp-enable"},{"id":"721","title":"Option: vim.languages.lua.lsp.lazydev.enable","content":"Whether to enable lazydev.nvim integration, useful for neovim plugin developers.","path":"options.html#option-vim-languages-lua-lsp-lazydev-enable"},{"id":"722","title":"Option: vim.languages.lua.lsp.package","content":"LuaLS package, or the command to run as a list of strings","path":"options.html#option-vim-languages-lua-lsp-package"},{"id":"723","title":"Option: vim.languages.lua.treesitter.enable","content":"Whether to enable Lua Treesitter support.","path":"options.html#option-vim-languages-lua-treesitter-enable"},{"id":"724","title":"Option: vim.languages.lua.treesitter.package","content":"The lua treesitter package to use.","path":"options.html#option-vim-languages-lua-treesitter-package"},{"id":"725","title":"Option: vim.languages.markdown.enable","content":"Whether to enable Markdown markup language support.","path":"options.html#option-vim-languages-markdown-enable"},{"id":"726","title":"Option: vim.languages.markdown.extensions.markview-nvim.enable","content":"[markview.nvim]: https://github.com/OXY2DEV/markview.nvim\n\n[markview.nvim] - a hackable markdown, Typst, latex, html(inline) & YAML previewer\n","path":"options.html#option-vim-languages-markdown-extensions-markview-nvim-enable"},{"id":"727","title":"Option: vim.languages.markdown.extensions.markview-nvim.setupOpts","content":"Option table to pass into the setup function of markview-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-languages-markdown-extensions-markview-nvim-setupOpts"},{"id":"728","title":"Option: vim.languages.markdown.extensions.render-markdown-nvim.enable","content":"[render-markdown.nvim]: https://github.com/MeanderingProgrammer/render-markdown.nvim\n\nInline Markdown rendering with [render-markdown.nvim]\n","path":"options.html#option-vim-languages-markdown-extensions-render-markdown-nvim-enable"},{"id":"729","title":"Option: vim.languages.markdown.extensions.render-markdown-nvim.setupOpts","content":"Option table to pass into the setup function of render-markdown\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-languages-markdown-extensions-render-markdown-nvim-setupOpts"},{"id":"730","title":"Option: vim.languages.markdown.extensions.render-markdown-nvim.setupOpts.file_types","content":"List of buffer filetypes to enable this plugin in.\n\nThis will cause the plugin to attach to new buffers who\nhave any of these filetypes.\n","path":"options.html#option-vim-languages-markdown-extensions-render-markdown-nvim-setupOpts-file_types"},{"id":"731","title":"Option: vim.languages.markdown.extraDiagnostics.enable","content":"Whether to enable extra Markdown diagnostics.","path":"options.html#option-vim-languages-markdown-extraDiagnostics-enable"},{"id":"732","title":"Option: vim.languages.markdown.extraDiagnostics.types","content":"List of Markdown diagnostics to enable","path":"options.html#option-vim-languages-markdown-extraDiagnostics-types"},{"id":"733","title":"Option: vim.languages.markdown.format.enable","content":"Whether to enable Markdown formatting.","path":"options.html#option-vim-languages-markdown-format-enable"},{"id":"734","title":"Option: vim.languages.markdown.format.extraFiletypes","content":"Extra filetypes to format with the Markdown formatter","path":"options.html#option-vim-languages-markdown-format-extraFiletypes"},{"id":"735","title":"Option: vim.languages.markdown.format.package","content":"Markdown formatter package","path":"options.html#option-vim-languages-markdown-format-package"},{"id":"736","title":"Option: vim.languages.markdown.format.type","content":"Markdown formatter to use. `denofmt` is deprecated and currently aliased to deno_fmt.","path":"options.html#option-vim-languages-markdown-format-type"},{"id":"737","title":"Option: vim.languages.markdown.lsp.enable","content":"Whether to enable Enable Markdown LSP support.","path":"options.html#option-vim-languages-markdown-lsp-enable"},{"id":"738","title":"Option: vim.languages.markdown.lsp.package","content":"Markdown LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-markdown-lsp-package"},{"id":"739","title":"Option: vim.languages.markdown.lsp.server","content":"Markdown LSP server to use","path":"options.html#option-vim-languages-markdown-lsp-server"},{"id":"740","title":"Option: vim.languages.markdown.treesitter.enable","content":"Enable Markdown treesitter","path":"options.html#option-vim-languages-markdown-treesitter-enable"},{"id":"741","title":"Option: vim.languages.markdown.treesitter.mdInlinePackage","content":"The markdown-inline treesitter package to use.","path":"options.html#option-vim-languages-markdown-treesitter-mdInlinePackage"},{"id":"742","title":"Option: vim.languages.markdown.treesitter.mdPackage","content":"The markdown treesitter package to use.","path":"options.html#option-vim-languages-markdown-treesitter-mdPackage"},{"id":"743","title":"Option: vim.languages.nim.enable","content":"Whether to enable Nim language support.","path":"options.html#option-vim-languages-nim-enable"},{"id":"744","title":"Option: vim.languages.nim.format.enable","content":"Whether to enable Nim formatting.","path":"options.html#option-vim-languages-nim-format-enable"},{"id":"745","title":"Option: vim.languages.nim.format.package","content":"Nim formatter package","path":"options.html#option-vim-languages-nim-format-package"},{"id":"746","title":"Option: vim.languages.nim.format.type","content":"Nim formatter to use","path":"options.html#option-vim-languages-nim-format-type"},{"id":"747","title":"Option: vim.languages.nim.lsp.enable","content":"Whether to enable Nim LSP support.","path":"options.html#option-vim-languages-nim-lsp-enable"},{"id":"748","title":"Option: vim.languages.nim.lsp.package","content":"Nim LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-nim-lsp-package"},{"id":"749","title":"Option: vim.languages.nim.lsp.server","content":"Nim LSP server to use","path":"options.html#option-vim-languages-nim-lsp-server"},{"id":"750","title":"Option: vim.languages.nim.treesitter.enable","content":"Whether to enable Nim treesitter.","path":"options.html#option-vim-languages-nim-treesitter-enable"},{"id":"751","title":"Option: vim.languages.nim.treesitter.package","content":"The nim treesitter package to use.","path":"options.html#option-vim-languages-nim-treesitter-package"},{"id":"752","title":"Option: vim.languages.nix.enable","content":"Whether to enable Nix language support.","path":"options.html#option-vim-languages-nix-enable"},{"id":"753","title":"Option: vim.languages.nix.extraDiagnostics.enable","content":"Whether to enable extra Nix diagnostics.","path":"options.html#option-vim-languages-nix-extraDiagnostics-enable"},{"id":"754","title":"Option: vim.languages.nix.extraDiagnostics.types","content":"List of Nix diagnostics to enable","path":"options.html#option-vim-languages-nix-extraDiagnostics-types"},{"id":"755","title":"Option: vim.languages.nix.format.enable","content":"Whether to enable Nix formatting.","path":"options.html#option-vim-languages-nix-format-enable"},{"id":"756","title":"Option: vim.languages.nix.format.package","content":"Nix formatter package","path":"options.html#option-vim-languages-nix-format-package"},{"id":"757","title":"Option: vim.languages.nix.format.type","content":"Nix formatter to use","path":"options.html#option-vim-languages-nix-format-type"},{"id":"758","title":"Option: vim.languages.nix.lsp.enable","content":"Whether to enable Nix LSP support.","path":"options.html#option-vim-languages-nix-lsp-enable"},{"id":"759","title":"Option: vim.languages.nix.lsp.options","content":"Options to pass to nixd LSP server","path":"options.html#option-vim-languages-nix-lsp-options"},{"id":"760","title":"Option: vim.languages.nix.lsp.package","content":"Nix LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-nix-lsp-package"},{"id":"761","title":"Option: vim.languages.nix.lsp.server","content":"Nix LSP server to use","path":"options.html#option-vim-languages-nix-lsp-server"},{"id":"762","title":"Option: vim.languages.nix.treesitter.enable","content":"Whether to enable Nix treesitter.","path":"options.html#option-vim-languages-nix-treesitter-enable"},{"id":"763","title":"Option: vim.languages.nix.treesitter.package","content":"The nix treesitter package to use.","path":"options.html#option-vim-languages-nix-treesitter-package"},{"id":"764","title":"Option: vim.languages.nu.enable","content":"Whether to enable Nu language support.","path":"options.html#option-vim-languages-nu-enable"},{"id":"765","title":"Option: vim.languages.nu.lsp.enable","content":"Whether to enable Nu LSP support.","path":"options.html#option-vim-languages-nu-lsp-enable"},{"id":"766","title":"Option: vim.languages.nu.lsp.package","content":"Nu LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-nu-lsp-package"},{"id":"767","title":"Option: vim.languages.nu.lsp.server","content":"Nu LSP server to use","path":"options.html#option-vim-languages-nu-lsp-server"},{"id":"768","title":"Option: vim.languages.nu.treesitter.enable","content":"Whether to enable Nu treesitter.","path":"options.html#option-vim-languages-nu-treesitter-enable"},{"id":"769","title":"Option: vim.languages.nu.treesitter.package","content":"The nu treesitter package to use.","path":"options.html#option-vim-languages-nu-treesitter-package"},{"id":"770","title":"Option: vim.languages.ocaml.enable","content":"Whether to enable OCaml language support.","path":"options.html#option-vim-languages-ocaml-enable"},{"id":"771","title":"Option: vim.languages.ocaml.format.enable","content":"Whether to enable OCaml formatting support (ocamlformat).","path":"options.html#option-vim-languages-ocaml-format-enable"},{"id":"772","title":"Option: vim.languages.ocaml.format.package","content":"OCaml formatter package","path":"options.html#option-vim-languages-ocaml-format-package"},{"id":"773","title":"Option: vim.languages.ocaml.format.type","content":"OCaml formatter to use","path":"options.html#option-vim-languages-ocaml-format-type"},{"id":"774","title":"Option: vim.languages.ocaml.lsp.enable","content":"Whether to enable OCaml LSP support (ocaml-lsp).","path":"options.html#option-vim-languages-ocaml-lsp-enable"},{"id":"775","title":"Option: vim.languages.ocaml.lsp.package","content":"OCaml language server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-ocaml-lsp-package"},{"id":"776","title":"Option: vim.languages.ocaml.lsp.server","content":"OCaml LSP server to user","path":"options.html#option-vim-languages-ocaml-lsp-server"},{"id":"777","title":"Option: vim.languages.ocaml.treesitter.enable","content":"Whether to enable OCaml treesitter.","path":"options.html#option-vim-languages-ocaml-treesitter-enable"},{"id":"778","title":"Option: vim.languages.ocaml.treesitter.package","content":"The ocaml treesitter package to use.","path":"options.html#option-vim-languages-ocaml-treesitter-package"},{"id":"779","title":"Option: vim.languages.odin.enable","content":"Whether to enable Odin language support.","path":"options.html#option-vim-languages-odin-enable"},{"id":"780","title":"Option: vim.languages.odin.lsp.enable","content":"Whether to enable Odin LSP support.","path":"options.html#option-vim-languages-odin-lsp-enable"},{"id":"781","title":"Option: vim.languages.odin.lsp.package","content":"Ols package, or the command to run as a list of strings","path":"options.html#option-vim-languages-odin-lsp-package"},{"id":"782","title":"Option: vim.languages.odin.lsp.server","content":"Odin LSP server to use","path":"options.html#option-vim-languages-odin-lsp-server"},{"id":"783","title":"Option: vim.languages.odin.treesitter.enable","content":"Whether to enable Odin treesitter.","path":"options.html#option-vim-languages-odin-treesitter-enable"},{"id":"784","title":"Option: vim.languages.odin.treesitter.package","content":"The odin treesitter package to use.","path":"options.html#option-vim-languages-odin-treesitter-package"},{"id":"785","title":"Option: vim.languages.php.enable","content":"Whether to enable PHP language support.","path":"options.html#option-vim-languages-php-enable"},{"id":"786","title":"Option: vim.languages.php.lsp.enable","content":"Whether to enable PHP LSP support.","path":"options.html#option-vim-languages-php-lsp-enable"},{"id":"787","title":"Option: vim.languages.php.lsp.package","content":"PHP LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-php-lsp-package"},{"id":"788","title":"Option: vim.languages.php.lsp.server","content":"PHP LSP server to use","path":"options.html#option-vim-languages-php-lsp-server"},{"id":"789","title":"Option: vim.languages.php.treesitter.enable","content":"Whether to enable PHP treesitter.","path":"options.html#option-vim-languages-php-treesitter-enable"},{"id":"790","title":"Option: vim.languages.php.treesitter.package","content":"The php treesitter package to use.","path":"options.html#option-vim-languages-php-treesitter-package"},{"id":"791","title":"Option: vim.languages.python.dap.debugger","content":"Python debugger to use","path":"options.html#option-vim-languages-python-dap-debugger"},{"id":"792","title":"Option: vim.languages.python.dap.enable","content":"Enable Python Debug Adapter","path":"options.html#option-vim-languages-python-dap-enable"},{"id":"793","title":"Option: vim.languages.python.dap.package","content":"Python debugger package.\nThis is a python package with debugpy installed, see https://nixos.wiki/wiki/Python#Install_Python_Packages.\n","path":"options.html#option-vim-languages-python-dap-package"},{"id":"794","title":"Option: vim.languages.python.enable","content":"Whether to enable Python language support.","path":"options.html#option-vim-languages-python-enable"},{"id":"795","title":"Option: vim.languages.python.format.enable","content":"Whether to enable Python formatting.","path":"options.html#option-vim-languages-python-format-enable"},{"id":"796","title":"Option: vim.languages.python.format.package","content":"Python formatter package","path":"options.html#option-vim-languages-python-format-package"},{"id":"797","title":"Option: vim.languages.python.format.type","content":"Python formatter to use","path":"options.html#option-vim-languages-python-format-type"},{"id":"798","title":"Option: vim.languages.python.lsp.enable","content":"Whether to enable Python LSP support.","path":"options.html#option-vim-languages-python-lsp-enable"},{"id":"799","title":"Option: vim.languages.python.lsp.package","content":"python LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-python-lsp-package"},{"id":"800","title":"Option: vim.languages.python.lsp.server","content":"Python LSP server to use","path":"options.html#option-vim-languages-python-lsp-server"},{"id":"801","title":"Option: vim.languages.python.treesitter.enable","content":"Whether to enable Python treesitter.","path":"options.html#option-vim-languages-python-treesitter-enable"},{"id":"802","title":"Option: vim.languages.python.treesitter.package","content":"Python treesitter grammar to use","path":"options.html#option-vim-languages-python-treesitter-package"},{"id":"803","title":"Option: vim.languages.r.enable","content":"Whether to enable R language support.","path":"options.html#option-vim-languages-r-enable"},{"id":"804","title":"Option: vim.languages.r.format.enable","content":"Whether to enable R formatting.","path":"options.html#option-vim-languages-r-format-enable"},{"id":"805","title":"Option: vim.languages.r.format.package","content":"R formatter package","path":"options.html#option-vim-languages-r-format-package"},{"id":"806","title":"Option: vim.languages.r.format.type","content":"R formatter to use","path":"options.html#option-vim-languages-r-format-type"},{"id":"807","title":"Option: vim.languages.r.lsp.enable","content":"Whether to enable R LSP support.","path":"options.html#option-vim-languages-r-lsp-enable"},{"id":"808","title":"Option: vim.languages.r.lsp.package","content":"R LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-r-lsp-package"},{"id":"809","title":"Option: vim.languages.r.lsp.server","content":"R LSP server to use","path":"options.html#option-vim-languages-r-lsp-server"},{"id":"810","title":"Option: vim.languages.r.treesitter.enable","content":"Whether to enable R treesitter.","path":"options.html#option-vim-languages-r-treesitter-enable"},{"id":"811","title":"Option: vim.languages.r.treesitter.package","content":"The r treesitter package to use.","path":"options.html#option-vim-languages-r-treesitter-package"},{"id":"812","title":"Option: vim.languages.ruby.enable","content":"Whether to enable Ruby language support.","path":"options.html#option-vim-languages-ruby-enable"},{"id":"813","title":"Option: vim.languages.ruby.extraDiagnostics.enable","content":"Whether to enable Ruby extra diagnostics support.","path":"options.html#option-vim-languages-ruby-extraDiagnostics-enable"},{"id":"814","title":"Option: vim.languages.ruby.extraDiagnostics.types","content":"List of Ruby diagnostics to enable","path":"options.html#option-vim-languages-ruby-extraDiagnostics-types"},{"id":"815","title":"Option: vim.languages.ruby.format.enable","content":"Whether to enable Ruby formatter support.","path":"options.html#option-vim-languages-ruby-format-enable"},{"id":"816","title":"Option: vim.languages.ruby.format.package","content":"Ruby formatter package","path":"options.html#option-vim-languages-ruby-format-package"},{"id":"817","title":"Option: vim.languages.ruby.format.type","content":"Ruby formatter to use","path":"options.html#option-vim-languages-ruby-format-type"},{"id":"818","title":"Option: vim.languages.ruby.lsp.enable","content":"Whether to enable Ruby LSP support.","path":"options.html#option-vim-languages-ruby-lsp-enable"},{"id":"819","title":"Option: vim.languages.ruby.lsp.package","content":"Ruby LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-ruby-lsp-package"},{"id":"820","title":"Option: vim.languages.ruby.lsp.server","content":"Ruby LSP server to use","path":"options.html#option-vim-languages-ruby-lsp-server"},{"id":"821","title":"Option: vim.languages.ruby.treesitter.enable","content":"Whether to enable Ruby treesitter.","path":"options.html#option-vim-languages-ruby-treesitter-enable"},{"id":"822","title":"Option: vim.languages.ruby.treesitter.package","content":"The ruby treesitter package to use.","path":"options.html#option-vim-languages-ruby-treesitter-package"},{"id":"823","title":"Option: vim.languages.rust.crates.codeActions","content":"Enable code actions through null-ls","path":"options.html#option-vim-languages-rust-crates-codeActions"},{"id":"824","title":"Option: vim.languages.rust.crates.enable","content":"Whether to enable crates-nvim, tools for managing dependencies.","path":"options.html#option-vim-languages-rust-crates-enable"},{"id":"825","title":"Option: vim.languages.rust.dap.enable","content":"Rust Debug Adapter support","path":"options.html#option-vim-languages-rust-dap-enable"},{"id":"826","title":"Option: vim.languages.rust.dap.package","content":"lldb package","path":"options.html#option-vim-languages-rust-dap-package"},{"id":"827","title":"Option: vim.languages.rust.enable","content":"Whether to enable Rust language support.","path":"options.html#option-vim-languages-rust-enable"},{"id":"828","title":"Option: vim.languages.rust.format.enable","content":"Whether to enable Rust formatting.","path":"options.html#option-vim-languages-rust-format-enable"},{"id":"829","title":"Option: vim.languages.rust.format.package","content":"Rust formatter package","path":"options.html#option-vim-languages-rust-format-package"},{"id":"830","title":"Option: vim.languages.rust.format.type","content":"Rust formatter to use","path":"options.html#option-vim-languages-rust-format-type"},{"id":"831","title":"Option: vim.languages.rust.lsp.enable","content":"Whether to enable Rust LSP support (rust-analyzer with extra tools).","path":"options.html#option-vim-languages-rust-lsp-enable"},{"id":"832","title":"Option: vim.languages.rust.lsp.opts","content":"Options to pass to rust analyzer","path":"options.html#option-vim-languages-rust-lsp-opts"},{"id":"833","title":"Option: vim.languages.rust.lsp.package","content":"rust-analyzer package, or the command to run as a list of strings","path":"options.html#option-vim-languages-rust-lsp-package"},{"id":"834","title":"Option: vim.languages.rust.treesitter.enable","content":"Whether to enable Rust treesitter.","path":"options.html#option-vim-languages-rust-treesitter-enable"},{"id":"835","title":"Option: vim.languages.rust.treesitter.package","content":"The rust treesitter package to use.","path":"options.html#option-vim-languages-rust-treesitter-package"},{"id":"836","title":"Option: vim.languages.scala.dap.config","content":"Lua configuration for dap","path":"options.html#option-vim-languages-scala-dap-config"},{"id":"837","title":"Option: vim.languages.scala.dap.enable","content":"Whether to enable Scala Debug Adapter support (metals).","path":"options.html#option-vim-languages-scala-dap-enable"},{"id":"838","title":"Option: vim.languages.scala.enable","content":"Whether to enable Scala language support.","path":"options.html#option-vim-languages-scala-enable"},{"id":"839","title":"Option: vim.languages.scala.fixShortmess","content":"Remove the 'F' flag from shortmess to allow messages to be shown. Without doing this, autocommands that deal with filetypes prohibit messages from being shown","path":"options.html#option-vim-languages-scala-fixShortmess"},{"id":"840","title":"Option: vim.languages.scala.lsp.enable","content":"Whether to enable Scala LSP support (metals).","path":"options.html#option-vim-languages-scala-lsp-enable"},{"id":"841","title":"Option: vim.languages.scala.lsp.extraMappings.listCommands","content":"List Metals commands","path":"options.html#option-vim-languages-scala-lsp-extraMappings-listCommands"},{"id":"842","title":"Option: vim.languages.scala.lsp.extraSettings","content":"Extra settings passed to the metals config. Check nvim-metals docs for available options","path":"options.html#option-vim-languages-scala-lsp-extraSettings"},{"id":"843","title":"Option: vim.languages.scala.lsp.package","content":"The metals package to use.","path":"options.html#option-vim-languages-scala-lsp-package"},{"id":"844","title":"Option: vim.languages.scala.treesitter.enable","content":"Whether to enable Scala treesitter.","path":"options.html#option-vim-languages-scala-treesitter-enable"},{"id":"845","title":"Option: vim.languages.scala.treesitter.package","content":"The scala treesitter package to use.","path":"options.html#option-vim-languages-scala-treesitter-package"},{"id":"846","title":"Option: vim.languages.sql.dialect","content":"SQL dialect for sqlfluff (if used)","path":"options.html#option-vim-languages-sql-dialect"},{"id":"847","title":"Option: vim.languages.sql.enable","content":"Whether to enable SQL language support.","path":"options.html#option-vim-languages-sql-enable"},{"id":"848","title":"Option: vim.languages.sql.extraDiagnostics.enable","content":"Whether to enable extra SQL diagnostics.","path":"options.html#option-vim-languages-sql-extraDiagnostics-enable"},{"id":"849","title":"Option: vim.languages.sql.extraDiagnostics.types","content":"List of SQL diagnostics to enable","path":"options.html#option-vim-languages-sql-extraDiagnostics-types"},{"id":"850","title":"Option: vim.languages.sql.format.enable","content":"Whether to enable SQL formatting.","path":"options.html#option-vim-languages-sql-format-enable"},{"id":"851","title":"Option: vim.languages.sql.format.package","content":"SQL formatter package","path":"options.html#option-vim-languages-sql-format-package"},{"id":"852","title":"Option: vim.languages.sql.format.type","content":"SQL formatter to use","path":"options.html#option-vim-languages-sql-format-type"},{"id":"853","title":"Option: vim.languages.sql.lsp.enable","content":"Whether to enable SQL LSP support.","path":"options.html#option-vim-languages-sql-lsp-enable"},{"id":"854","title":"Option: vim.languages.sql.lsp.package","content":"SQL LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-sql-lsp-package"},{"id":"855","title":"Option: vim.languages.sql.lsp.server","content":"SQL LSP server to use","path":"options.html#option-vim-languages-sql-lsp-server"},{"id":"856","title":"Option: vim.languages.sql.treesitter.enable","content":"Whether to enable SQL treesitter.","path":"options.html#option-vim-languages-sql-treesitter-enable"},{"id":"857","title":"Option: vim.languages.sql.treesitter.package","content":"SQL treesitter grammar to use","path":"options.html#option-vim-languages-sql-treesitter-package"},{"id":"858","title":"Option: vim.languages.svelte.enable","content":"Whether to enable Svelte language support.","path":"options.html#option-vim-languages-svelte-enable"},{"id":"859","title":"Option: vim.languages.svelte.extraDiagnostics.enable","content":"Whether to enable extra Svelte diagnostics.","path":"options.html#option-vim-languages-svelte-extraDiagnostics-enable"},{"id":"860","title":"Option: vim.languages.svelte.extraDiagnostics.types","content":"List of Svelte diagnostics to enable","path":"options.html#option-vim-languages-svelte-extraDiagnostics-types"},{"id":"861","title":"Option: vim.languages.svelte.format.enable","content":"Whether to enable Svelte formatting.","path":"options.html#option-vim-languages-svelte-format-enable"},{"id":"862","title":"Option: vim.languages.svelte.format.package","content":"Svelte formatter package","path":"options.html#option-vim-languages-svelte-format-package"},{"id":"863","title":"Option: vim.languages.svelte.format.type","content":"Svelte formatter to use","path":"options.html#option-vim-languages-svelte-format-type"},{"id":"864","title":"Option: vim.languages.svelte.lsp.enable","content":"Whether to enable Svelte LSP support.","path":"options.html#option-vim-languages-svelte-lsp-enable"},{"id":"865","title":"Option: vim.languages.svelte.lsp.package","content":"Svelte LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-svelte-lsp-package"},{"id":"866","title":"Option: vim.languages.svelte.lsp.server","content":"Svelte LSP server to use","path":"options.html#option-vim-languages-svelte-lsp-server"},{"id":"867","title":"Option: vim.languages.svelte.treesitter.enable","content":"Whether to enable Svelte treesitter.","path":"options.html#option-vim-languages-svelte-treesitter-enable"},{"id":"868","title":"Option: vim.languages.svelte.treesitter.sveltePackage","content":"The svelte treesitter package to use.","path":"options.html#option-vim-languages-svelte-treesitter-sveltePackage"},{"id":"869","title":"Option: vim.languages.tailwind.enable","content":"Whether to enable Tailwindcss language support.","path":"options.html#option-vim-languages-tailwind-enable"},{"id":"870","title":"Option: vim.languages.tailwind.lsp.enable","content":"Whether to enable Tailwindcss LSP support.","path":"options.html#option-vim-languages-tailwind-lsp-enable"},{"id":"871","title":"Option: vim.languages.tailwind.lsp.package","content":"Tailwindcss LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-tailwind-lsp-package"},{"id":"872","title":"Option: vim.languages.tailwind.lsp.server","content":"Tailwindcss LSP server to use","path":"options.html#option-vim-languages-tailwind-lsp-server"},{"id":"873","title":"Option: vim.languages.terraform.enable","content":"Whether to enable Terraform/HCL support.","path":"options.html#option-vim-languages-terraform-enable"},{"id":"874","title":"Option: vim.languages.terraform.lsp.enable","content":"Whether to enable Terraform LSP support (terraform-ls).","path":"options.html#option-vim-languages-terraform-lsp-enable"},{"id":"875","title":"Option: vim.languages.terraform.lsp.package","content":"terraform-ls package","path":"options.html#option-vim-languages-terraform-lsp-package"},{"id":"876","title":"Option: vim.languages.terraform.treesitter.enable","content":"Whether to enable Terraform treesitter.","path":"options.html#option-vim-languages-terraform-treesitter-enable"},{"id":"877","title":"Option: vim.languages.terraform.treesitter.package","content":"The terraform treesitter package to use.","path":"options.html#option-vim-languages-terraform-treesitter-package"},{"id":"878","title":"Option: vim.languages.ts.enable","content":"Whether to enable Typescript/Javascript language support.","path":"options.html#option-vim-languages-ts-enable"},{"id":"879","title":"Option: vim.languages.ts.extensions.ts-error-translator.enable","content":"Whether to enable [ts-error-translator.nvim]: https://github.com/dmmulroy/ts-error-translator.nvim\n\nTypescript error translation with [ts-error-translator.nvim]\n\n.","path":"options.html#option-vim-languages-ts-extensions-ts-error-translator-enable"},{"id":"880","title":"Option: vim.languages.ts.extensions.ts-error-translator.setupOpts","content":"Option table to pass into the setup function of ts-error-translator\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-languages-ts-extensions-ts-error-translator-setupOpts"},{"id":"881","title":"Option: vim.languages.ts.extensions.ts-error-translator.setupOpts.auto_override_publish_diagnostics","content":"Automatically override the publish_diagnostics handler","path":"options.html#option-vim-languages-ts-extensions-ts-error-translator-setupOpts-auto_override_publish_diagnostics"},{"id":"882","title":"Option: vim.languages.ts.extraDiagnostics.enable","content":"Whether to enable extra Typescript/Javascript diagnostics.","path":"options.html#option-vim-languages-ts-extraDiagnostics-enable"},{"id":"883","title":"Option: vim.languages.ts.extraDiagnostics.types","content":"List of Typescript/Javascript diagnostics to enable","path":"options.html#option-vim-languages-ts-extraDiagnostics-types"},{"id":"884","title":"Option: vim.languages.ts.format.enable","content":"Whether to enable Typescript/Javascript formatting.","path":"options.html#option-vim-languages-ts-format-enable"},{"id":"885","title":"Option: vim.languages.ts.format.package","content":"Typescript/Javascript formatter package","path":"options.html#option-vim-languages-ts-format-package"},{"id":"886","title":"Option: vim.languages.ts.format.type","content":"Typescript/Javascript formatter to use","path":"options.html#option-vim-languages-ts-format-type"},{"id":"887","title":"Option: vim.languages.ts.lsp.enable","content":"Whether to enable Typescript/Javascript LSP support.","path":"options.html#option-vim-languages-ts-lsp-enable"},{"id":"888","title":"Option: vim.languages.ts.lsp.package","content":"Typescript/Javascript LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-ts-lsp-package"},{"id":"889","title":"Option: vim.languages.ts.lsp.server","content":"Typescript/Javascript LSP server to use","path":"options.html#option-vim-languages-ts-lsp-server"},{"id":"890","title":"Option: vim.languages.ts.treesitter.enable","content":"Whether to enable Typescript/Javascript treesitter.","path":"options.html#option-vim-languages-ts-treesitter-enable"},{"id":"891","title":"Option: vim.languages.ts.treesitter.jsPackage","content":"The javascript treesitter package to use.","path":"options.html#option-vim-languages-ts-treesitter-jsPackage"},{"id":"892","title":"Option: vim.languages.ts.treesitter.tsPackage","content":"The tsx treesitter package to use.","path":"options.html#option-vim-languages-ts-treesitter-tsPackage"},{"id":"893","title":"Option: vim.languages.typst.enable","content":"Whether to enable Typst language support.","path":"options.html#option-vim-languages-typst-enable"},{"id":"894","title":"Option: vim.languages.typst.extensions.typst-preview-nvim.enable","content":"Whether to enable [typst-preview.nvim]: https://github.com/chomosuke/typst-preview.nvim\n\nLow latency typst preview for Neovim via [typst-preview.nvim]\n.","path":"options.html#option-vim-languages-typst-extensions-typst-preview-nvim-enable"},{"id":"895","title":"Option: vim.languages.typst.extensions.typst-preview-nvim.setupOpts","content":"Option table to pass into the setup function of typst-preview-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-languages-typst-extensions-typst-preview-nvim-setupOpts"},{"id":"896","title":"Option: vim.languages.typst.extensions.typst-preview-nvim.setupOpts.dependencies_bin","content":"Provide the path to binaries for dependencies. Setting this\nto a non-null value will skip the download of the binary by\nthe plugin.\n","path":"options.html#option-vim-languages-typst-extensions-typst-preview-nvim-setupOpts-dependencies_bin"},{"id":"897","title":"Option: vim.languages.typst.extensions.typst-preview-nvim.setupOpts.extra_args","content":"A list of extra arguments (or `null`) to be passed to previewer","path":"options.html#option-vim-languages-typst-extensions-typst-preview-nvim-setupOpts-extra_args"},{"id":"898","title":"Option: vim.languages.typst.extensions.typst-preview-nvim.setupOpts.open_cmd","content":"Custom format string to open the output link provided with `%s`\n","path":"options.html#option-vim-languages-typst-extensions-typst-preview-nvim-setupOpts-open_cmd"},{"id":"899","title":"Option: vim.languages.typst.format.enable","content":"Whether to enable Typst document formatting.","path":"options.html#option-vim-languages-typst-format-enable"},{"id":"900","title":"Option: vim.languages.typst.format.package","content":"Typst formatter package","path":"options.html#option-vim-languages-typst-format-package"},{"id":"901","title":"Option: vim.languages.typst.format.type","content":"Typst formatter to use","path":"options.html#option-vim-languages-typst-format-type"},{"id":"902","title":"Option: vim.languages.typst.lsp.enable","content":"Whether to enable Typst LSP support (typst-lsp).","path":"options.html#option-vim-languages-typst-lsp-enable"},{"id":"903","title":"Option: vim.languages.typst.lsp.package","content":"typst-lsp package, or the command to run as a list of strings","path":"options.html#option-vim-languages-typst-lsp-package"},{"id":"904","title":"Option: vim.languages.typst.lsp.server","content":"Typst LSP server to use","path":"options.html#option-vim-languages-typst-lsp-server"},{"id":"905","title":"Option: vim.languages.typst.treesitter.enable","content":"Whether to enable Typst treesitter.","path":"options.html#option-vim-languages-typst-treesitter-enable"},{"id":"906","title":"Option: vim.languages.typst.treesitter.package","content":"The typst treesitter package to use.","path":"options.html#option-vim-languages-typst-treesitter-package"},{"id":"907","title":"Option: vim.languages.vala.enable","content":"Whether to enable Vala language support.","path":"options.html#option-vim-languages-vala-enable"},{"id":"908","title":"Option: vim.languages.vala.lsp.enable","content":"Whether to enable Vala LSP support.","path":"options.html#option-vim-languages-vala-lsp-enable"},{"id":"909","title":"Option: vim.languages.vala.lsp.package","content":"Vala LSP server package, or the command to run as a list of strings","path":"options.html#option-vim-languages-vala-lsp-package"},{"id":"910","title":"Option: vim.languages.vala.lsp.server","content":"Vala LSP server to use","path":"options.html#option-vim-languages-vala-lsp-server"},{"id":"911","title":"Option: vim.languages.vala.treesitter.enable","content":"Whether to enable Vala treesitter.","path":"options.html#option-vim-languages-vala-treesitter-enable"},{"id":"912","title":"Option: vim.languages.vala.treesitter.package","content":"The vala treesitter package to use.","path":"options.html#option-vim-languages-vala-treesitter-package"},{"id":"913","title":"Option: vim.languages.wgsl.enable","content":"Whether to enable WGSL language support.","path":"options.html#option-vim-languages-wgsl-enable"},{"id":"914","title":"Option: vim.languages.wgsl.lsp.enable","content":"Whether to enable WGSL LSP support.","path":"options.html#option-vim-languages-wgsl-lsp-enable"},{"id":"915","title":"Option: vim.languages.wgsl.lsp.package","content":"wgsl-analyzer package, or the command to run as a list of strings","path":"options.html#option-vim-languages-wgsl-lsp-package"},{"id":"916","title":"Option: vim.languages.wgsl.lsp.server","content":"WGSL LSP server to use","path":"options.html#option-vim-languages-wgsl-lsp-server"},{"id":"917","title":"Option: vim.languages.wgsl.treesitter.enable","content":"Whether to enable WGSL treesitter.","path":"options.html#option-vim-languages-wgsl-treesitter-enable"},{"id":"918","title":"Option: vim.languages.wgsl.treesitter.package","content":"The wgsl treesitter package to use.","path":"options.html#option-vim-languages-wgsl-treesitter-package"},{"id":"919","title":"Option: vim.languages.yaml.enable","content":"Whether to enable YAML language support.","path":"options.html#option-vim-languages-yaml-enable"},{"id":"920","title":"Option: vim.languages.yaml.lsp.enable","content":"Whether to enable YAML LSP support.","path":"options.html#option-vim-languages-yaml-lsp-enable"},{"id":"921","title":"Option: vim.languages.yaml.lsp.package","content":"YAML LSP server package","path":"options.html#option-vim-languages-yaml-lsp-package"},{"id":"922","title":"Option: vim.languages.yaml.lsp.server","content":"YAML LSP server to use","path":"options.html#option-vim-languages-yaml-lsp-server"},{"id":"923","title":"Option: vim.languages.yaml.treesitter.enable","content":"Whether to enable YAML treesitter.","path":"options.html#option-vim-languages-yaml-treesitter-enable"},{"id":"924","title":"Option: vim.languages.yaml.treesitter.package","content":"The yaml treesitter package to use.","path":"options.html#option-vim-languages-yaml-treesitter-package"},{"id":"925","title":"Option: vim.languages.zig.dap.debugger","content":"Zig debugger to use","path":"options.html#option-vim-languages-zig-dap-debugger"},{"id":"926","title":"Option: vim.languages.zig.dap.enable","content":"Enable Zig Debug Adapter","path":"options.html#option-vim-languages-zig-dap-enable"},{"id":"927","title":"Option: vim.languages.zig.dap.package","content":"Zig debugger package.","path":"options.html#option-vim-languages-zig-dap-package"},{"id":"928","title":"Option: vim.languages.zig.enable","content":"Whether to enable Zig language support.","path":"options.html#option-vim-languages-zig-enable"},{"id":"929","title":"Option: vim.languages.zig.lsp.enable","content":"Whether to enable Zig LSP support.","path":"options.html#option-vim-languages-zig-lsp-enable"},{"id":"930","title":"Option: vim.languages.zig.lsp.package","content":"ZLS package, or the command to run as a list of strings","path":"options.html#option-vim-languages-zig-lsp-package"},{"id":"931","title":"Option: vim.languages.zig.lsp.server","content":"Zig LSP server to use","path":"options.html#option-vim-languages-zig-lsp-server"},{"id":"932","title":"Option: vim.languages.zig.treesitter.enable","content":"Whether to enable Zig treesitter.","path":"options.html#option-vim-languages-zig-treesitter-enable"},{"id":"933","title":"Option: vim.languages.zig.treesitter.package","content":"The zig treesitter package to use.","path":"options.html#option-vim-languages-zig-treesitter-package"},{"id":"934","title":"Option: vim.lazy.enable","content":"Whether to enable plugin lazy-loading via lz.n and lzn-auto-require.","path":"options.html#option-vim-lazy-enable"},{"id":"935","title":"Option: vim.lazy.enableLznAutoRequire","content":"Enable lzn-auto-require. Since builtin plugins rely on this, only turn\noff for debugging.\n","path":"options.html#option-vim-lazy-enableLznAutoRequire"},{"id":"936","title":"Option: vim.lazy.loader","content":"Lazy loader to use","path":"options.html#option-vim-lazy-loader"},{"id":"937","title":"Option: vim.lazy.plugins","content":"Plugins to lazy load.\n\nThe attribute key is used as the plugin name: for the default `vim.g.lz_n.load`\nfunction this should be either the `package.pname` or `package.name`.\n","path":"options.html#option-vim-lazy-plugins"},{"id":"938","title":"Option: vim.lazy.plugins.<name>.after","content":"Lua code to run after plugin is loaded. This will be wrapped in a function.\n\nIf [](#opt-vim.lazy.plugins._name_.setupModule) is provided, the setup will be ran before `after`.\n","path":"options.html#option-vim-lazy-plugins-<name>-after"},{"id":"939","title":"Option: vim.lazy.plugins.<name>.before","content":"Lua code to run before plugin is loaded. This will be wrapped in a function.","path":"options.html#option-vim-lazy-plugins-<name>-before"},{"id":"940","title":"Option: vim.lazy.plugins.<name>.beforeAll","content":"Lua code to run before any plugins are loaded. This will be wrapped in a function.","path":"options.html#option-vim-lazy-plugins-<name>-beforeAll"},{"id":"941","title":"Option: vim.lazy.plugins.<name>.beforeSetup","content":"Lua code to run after the plugin is loaded, but before the setup\nfunction is called.\n","path":"options.html#option-vim-lazy-plugins-<name>-beforeSetup"},{"id":"942","title":"Option: vim.lazy.plugins.<name>.cmd","content":"Lazy-load on command","path":"options.html#option-vim-lazy-plugins-<name>-cmd"},{"id":"943","title":"Option: vim.lazy.plugins.<name>.colorscheme","content":"Lazy-load on colorscheme.","path":"options.html#option-vim-lazy-plugins-<name>-colorscheme"},{"id":"944","title":"Option: vim.lazy.plugins.<name>.enabled","content":"When false, or if the lua function returns false, this plugin will not be included in the spec","path":"options.html#option-vim-lazy-plugins-<name>-enabled"},{"id":"945","title":"Option: vim.lazy.plugins.<name>.event","content":"Lazy-load on event","path":"options.html#option-vim-lazy-plugins-<name>-event"},{"id":"946","title":"Option: vim.lazy.plugins.<name>.ft","content":"Lazy-load on filetype","path":"options.html#option-vim-lazy-plugins-<name>-ft"},{"id":"947","title":"Option: vim.lazy.plugins.<name>.keys","content":"Lazy-load on key mapping","path":"options.html#option-vim-lazy-plugins-<name>-keys"},{"id":"948","title":"Option: vim.lazy.plugins.<name>.lazy","content":"Force enable/disable lazy-loading. `null` means only lazy-load if\na valid lazy-load condition is set e.g. `cmd`, `ft`, `keys` etc.\n","path":"options.html#option-vim-lazy-plugins-<name>-lazy"},{"id":"949","title":"Option: vim.lazy.plugins.<name>.load","content":"Lua code to override the `vim.g.lz_n.load()` function for a single plugin.\n\nThis will be wrapped in a `function(name) ... end`.\n","path":"options.html#option-vim-lazy-plugins-<name>-load"},{"id":"950","title":"Option: vim.lazy.plugins.<name>.package","content":"Plugin package.\n\nIf null, a custom load function must be provided\n","path":"options.html#option-vim-lazy-plugins-<name>-package"},{"id":"951","title":"Option: vim.lazy.plugins.<name>.priority","content":"Only useful for stat plugins (not lazy-loaded) to force loading certain plugins first.","path":"options.html#option-vim-lazy-plugins-<name>-priority"},{"id":"952","title":"Option: vim.lazy.plugins.<name>.setupModule","content":"Lua module to run setup function on.","path":"options.html#option-vim-lazy-plugins-<name>-setupModule"},{"id":"953","title":"Option: vim.lazy.plugins.<name>.setupOpts","content":"Options to pass to the setup function","path":"options.html#option-vim-lazy-plugins-<name>-setupOpts"},{"id":"954","title":"Option: vim.lineNumberMode","content":"How line numbers are displayed.","path":"options.html#option-vim-lineNumberMode"},{"id":"955","title":"Option: vim.lsp.enable","content":"Whether to enable global LSP functionality for Neovim.\n\nThis option controls whether to enable LSP functionality within modules under\n{option}`vim.languages`. You do not need to set this to `true` for language\nservers defined in {option}`vim.lsp.servers` to take effect, since they are\nenabled automatically.\n.","path":"options.html#option-vim-lsp-enable"},{"id":"956","title":"Option: vim.lsp.formatOnSave","content":"Whether to enable format on save.","path":"options.html#option-vim-lsp-formatOnSave"},{"id":"957","title":"Option: vim.lsp.inlayHints.enable","content":"Whether to enable inlay hints.","path":"options.html#option-vim-lsp-inlayHints-enable"},{"id":"958","title":"Option: vim.lsp.lightbulb.autocmd.enable","content":"Whether to enable updating lightbulb glyph automatically.","path":"options.html#option-vim-lsp-lightbulb-autocmd-enable"},{"id":"959","title":"Option: vim.lsp.lightbulb.autocmd.events","content":"Events on which to update nvim-lightbulb glyphs","path":"options.html#option-vim-lsp-lightbulb-autocmd-events"},{"id":"960","title":"Option: vim.lsp.lightbulb.autocmd.pattern","content":"File patterns or buffer names to match, determining which files or buffers trigger\nglyph updates.\n","path":"options.html#option-vim-lsp-lightbulb-autocmd-pattern"},{"id":"961","title":"Option: vim.lsp.lightbulb.enable","content":"Whether to enable Lightbulb for code actions. Requires an emoji font.","path":"options.html#option-vim-lsp-lightbulb-enable"},{"id":"962","title":"Option: vim.lsp.lightbulb.setupOpts","content":"Option table to pass into the setup function of nvim-lightbulb\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-lsp-lightbulb-setupOpts"},{"id":"963","title":"Option: vim.lsp.lspSignature.enable","content":"Whether to enable lsp signature viewer.","path":"options.html#option-vim-lsp-lspSignature-enable"},{"id":"964","title":"Option: vim.lsp.lspSignature.setupOpts","content":"Option table to pass into the setup function of lsp-signature\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-lsp-lspSignature-setupOpts"},{"id":"965","title":"Option: vim.lsp.lspconfig.enable","content":"Whether to enable nvim-lspconfig, also enabled automatically.","path":"options.html#option-vim-lsp-lspconfig-enable"},{"id":"966","title":"Option: vim.lsp.lspconfig.sources","content":"nvim-lspconfig sources","path":"options.html#option-vim-lsp-lspconfig-sources"},{"id":"967","title":"Option: vim.lsp.lspkind.enable","content":"Whether to enable vscode-like pictograms for lsp [lspkind].","path":"options.html#option-vim-lsp-lspkind-enable"},{"id":"968","title":"Option: vim.lsp.lspkind.setupOpts","content":"Option table to pass into the setup function of lspkind.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-lsp-lspkind-setupOpts"},{"id":"969","title":"Option: vim.lsp.lspkind.setupOpts.before","content":"The function that will be called before lspkind's modifications are applied","path":"options.html#option-vim-lsp-lspkind-setupOpts-before"},{"id":"970","title":"Option: vim.lsp.lspkind.setupOpts.mode","content":"Defines how annotations are shown","path":"options.html#option-vim-lsp-lspkind-setupOpts-mode"},{"id":"971","title":"Option: vim.lsp.lspsaga.enable","content":"Whether to enable LSP Saga.","path":"options.html#option-vim-lsp-lspsaga-enable"},{"id":"972","title":"Option: vim.lsp.lspsaga.setupOpts","content":"Option table to pass into the setup function of lspsaga\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-lsp-lspsaga-setupOpts"},{"id":"973","title":"Option: vim.lsp.lspsaga.setupOpts.border_style","content":"Border type, see {command}`:help nvim_open_win`","path":"options.html#option-vim-lsp-lspsaga-setupOpts-border_style"},{"id":"974","title":"Option: vim.lsp.mappings.addWorkspaceFolder","content":"Add workspace folder","path":"options.html#option-vim-lsp-mappings-addWorkspaceFolder"},{"id":"975","title":"Option: vim.lsp.mappings.codeAction","content":"Code action","path":"options.html#option-vim-lsp-mappings-codeAction"},{"id":"976","title":"Option: vim.lsp.mappings.documentHighlight","content":"Document highlight","path":"options.html#option-vim-lsp-mappings-documentHighlight"},{"id":"977","title":"Option: vim.lsp.mappings.format","content":"Format","path":"options.html#option-vim-lsp-mappings-format"},{"id":"978","title":"Option: vim.lsp.mappings.goToDeclaration","content":"Go to declaration","path":"options.html#option-vim-lsp-mappings-goToDeclaration"},{"id":"979","title":"Option: vim.lsp.mappings.goToDefinition","content":"Go to definition","path":"options.html#option-vim-lsp-mappings-goToDefinition"},{"id":"980","title":"Option: vim.lsp.mappings.goToType","content":"Go to type","path":"options.html#option-vim-lsp-mappings-goToType"},{"id":"981","title":"Option: vim.lsp.mappings.hover","content":"Trigger hover","path":"options.html#option-vim-lsp-mappings-hover"},{"id":"982","title":"Option: vim.lsp.mappings.listDocumentSymbols","content":"List document symbols","path":"options.html#option-vim-lsp-mappings-listDocumentSymbols"},{"id":"983","title":"Option: vim.lsp.mappings.listImplementations","content":"List implementations","path":"options.html#option-vim-lsp-mappings-listImplementations"},{"id":"984","title":"Option: vim.lsp.mappings.listReferences","content":"List references","path":"options.html#option-vim-lsp-mappings-listReferences"},{"id":"985","title":"Option: vim.lsp.mappings.listWorkspaceFolders","content":"List workspace folders","path":"options.html#option-vim-lsp-mappings-listWorkspaceFolders"},{"id":"986","title":"Option: vim.lsp.mappings.listWorkspaceSymbols","content":"List workspace symbols","path":"options.html#option-vim-lsp-mappings-listWorkspaceSymbols"},{"id":"987","title":"Option: vim.lsp.mappings.nextDiagnostic","content":"Go to next diagnostic","path":"options.html#option-vim-lsp-mappings-nextDiagnostic"},{"id":"988","title":"Option: vim.lsp.mappings.openDiagnosticFloat","content":"Open diagnostic float","path":"options.html#option-vim-lsp-mappings-openDiagnosticFloat"},{"id":"989","title":"Option: vim.lsp.mappings.previousDiagnostic","content":"Go to previous diagnostic","path":"options.html#option-vim-lsp-mappings-previousDiagnostic"},{"id":"990","title":"Option: vim.lsp.mappings.removeWorkspaceFolder","content":"Remove workspace folder","path":"options.html#option-vim-lsp-mappings-removeWorkspaceFolder"},{"id":"991","title":"Option: vim.lsp.mappings.renameSymbol","content":"Rename symbol","path":"options.html#option-vim-lsp-mappings-renameSymbol"},{"id":"992","title":"Option: vim.lsp.mappings.signatureHelp","content":"Signature help","path":"options.html#option-vim-lsp-mappings-signatureHelp"},{"id":"993","title":"Option: vim.lsp.mappings.toggleFormatOnSave","content":"Toggle format on save","path":"options.html#option-vim-lsp-mappings-toggleFormatOnSave"},{"id":"994","title":"Option: vim.lsp.null-ls.enable","content":"Whether to enable null-ls, plugin to use Neovim as a language server to inject LSP diagnostics,\ncode actions, and more via Lua.\n.","path":"options.html#option-vim-lsp-null-ls-enable"},{"id":"995","title":"Option: vim.lsp.null-ls.setupOpts","content":"Option table to pass into the setup function of null-ls\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-lsp-null-ls-setupOpts"},{"id":"996","title":"Option: vim.lsp.null-ls.setupOpts.debounce","content":"Amount of time between the last change to a buffer and the next `textDocument/didChange` notification.\n","path":"options.html#option-vim-lsp-null-ls-setupOpts-debounce"},{"id":"997","title":"Option: vim.lsp.null-ls.setupOpts.debug","content":"Whether to enable debugging information for null-ls.\n\nDisplays all possible log messages and writes them to the null-ls log,\nwhich you can view with the command `:NullLsLog`\n.","path":"options.html#option-vim-lsp-null-ls-setupOpts-debug"},{"id":"998","title":"Option: vim.lsp.null-ls.setupOpts.default_timeout","content":"Amount of time (in milliseconds) after which built-in sources will time out.\n\n:::{.note}\nBuilt-in sources can define their own timeout period and users can override\nthe timeout period on a per-source basis\n:::\n","path":"options.html#option-vim-lsp-null-ls-setupOpts-default_timeout"},{"id":"999","title":"Option: vim.lsp.null-ls.setupOpts.diagnostics_format","content":"Sets the default format used for diagnostics. null-ls will replace th\ne following special components with the relevant diagnostic information:\n\n* `#{m}`: message\n* `#{s}`: source name (defaults to null-ls if not specified)\n* `#{c}`: code (if available)\n","path":"options.html#option-vim-lsp-null-ls-setupOpts-diagnostics_format"},{"id":"1000","title":"Option: vim.lsp.null-ls.setupOpts.on_attach","content":"Defines an on_attach callback to run whenever null-ls attaches to a buffer.\n","path":"options.html#option-vim-lsp-null-ls-setupOpts-on_attach"},{"id":"1001","title":"Option: vim.lsp.null-ls.setupOpts.sources","content":"Sources for null-ls to register","path":"options.html#option-vim-lsp-null-ls-setupOpts-sources"},{"id":"1002","title":"Option: vim.lsp.nvim-docs-view.enable","content":"Whether to enable nvim-docs-view, for displaying lsp hover documentation in a side panel..","path":"options.html#option-vim-lsp-nvim-docs-view-enable"},{"id":"1003","title":"Option: vim.lsp.nvim-docs-view.mappings.viewToggle","content":"Open or close the docs view panel","path":"options.html#option-vim-lsp-nvim-docs-view-mappings-viewToggle"},{"id":"1004","title":"Option: vim.lsp.nvim-docs-view.mappings.viewUpdate","content":"Manually update the docs view panel","path":"options.html#option-vim-lsp-nvim-docs-view-mappings-viewUpdate"},{"id":"1005","title":"Option: vim.lsp.nvim-docs-view.setupOpts","content":"Option table to pass into the setup function of nvim-docs-view\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-lsp-nvim-docs-view-setupOpts"},{"id":"1006","title":"Option: vim.lsp.nvim-docs-view.setupOpts.height","content":"Height of the docs view panel if the position is set to either top or bottom\n","path":"options.html#option-vim-lsp-nvim-docs-view-setupOpts-height"},{"id":"1007","title":"Option: vim.lsp.nvim-docs-view.setupOpts.position","content":"Where to open the docs view panel\n","path":"options.html#option-vim-lsp-nvim-docs-view-setupOpts-position"},{"id":"1008","title":"Option: vim.lsp.nvim-docs-view.setupOpts.update_mode","content":"Determines the mechanism used to update the docs view panel content.\n- If auto, the content will update upon cursor move.\n- If manual, the content will only update once :DocsViewUpdate is called\n","path":"options.html#option-vim-lsp-nvim-docs-view-setupOpts-update_mode"},{"id":"1009","title":"Option: vim.lsp.nvim-docs-view.setupOpts.width","content":"Width of the docs view panel if the position is set to either left or right\n","path":"options.html#option-vim-lsp-nvim-docs-view-setupOpts-width"},{"id":"1010","title":"Option: vim.lsp.otter-nvim.enable","content":"Whether to enable lsp features and a code completion source for code embedded in other documents [otter-nvim]\n.","path":"options.html#option-vim-lsp-otter-nvim-enable"},{"id":"1011","title":"Option: vim.lsp.otter-nvim.mappings.toggle","content":"Activate LSP on Cursor Position [otter-nvim]","path":"options.html#option-vim-lsp-otter-nvim-mappings-toggle"},{"id":"1012","title":"Option: vim.lsp.otter-nvim.setupOpts","content":"Option table to pass into the setup function of otter.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-lsp-otter-nvim-setupOpts"},{"id":"1013","title":"Option: vim.lsp.otter-nvim.setupOpts.buffers.set_filetype","content":"if set to true, the filetype of the otterbuffers will be set. Other wide only\nthe autocommand of lspconfig that attaches the language server will be\nexecuted without setting the filetype\n","path":"options.html#option-vim-lsp-otter-nvim-setupOpts-buffers-set_filetype"},{"id":"1014","title":"Option: vim.lsp.otter-nvim.setupOpts.buffers.write_to_disk","content":"write <path>.otter.<embedded language extension> files to disk on save of main buffer.\nUseful for some linters that require actual files.\nOtter files are deleted on quit or main buffer close\n","path":"options.html#option-vim-lsp-otter-nvim-setupOpts-buffers-write_to_disk"},{"id":"1015","title":"Option: vim.lsp.otter-nvim.setupOpts.handle_leading_whitespace","content":"otter may not work the way you expect when entire code blocks are indented\n(eg. in Org files) When true, otter handles these cases fully.\n","path":"options.html#option-vim-lsp-otter-nvim-setupOpts-handle_leading_whitespace"},{"id":"1016","title":"Option: vim.lsp.otter-nvim.setupOpts.lsp.diagnostic_update_event","content":"`:h events` that cause the diagnostic to update.\nSet to: {\"BufWritePost\", \"InsertLeave\", \"TextChanged\" }\nfor less performant but more instant diagnostic updates\n","path":"options.html#option-vim-lsp-otter-nvim-setupOpts-lsp-diagnostic_update_event"},{"id":"1017","title":"Option: vim.lsp.otter-nvim.setupOpts.strip_wrapping_quote_characters","content":"","path":"options.html#option-vim-lsp-otter-nvim-setupOpts-strip_wrapping_quote_characters"},{"id":"1018","title":"Option: vim.lsp.servers","content":"LSP configurations that will be managed using `vim.lsp.config()` and related\nutilities added in Neovim 0.11. LSPs defined here will be added to the\nresulting {file}`init.lua` using `vim.lsp.config` and enabled through\n`vim.lsp.enable()` API from Neovim below the configuration table.\n\nYou may review the generated configuration by running {command}`nvf-print-config`\nin a shell. Please see {command}`:help lsp-config` for more details\non the underlying API.\n","path":"options.html#option-vim-lsp-servers"},{"id":"1019","title":"Option: vim.lsp.servers.<name>.capabilities","content":"LSP capabilitiess to pass to lspconfig","path":"options.html#option-vim-lsp-servers-<name>-capabilities"},{"id":"1020","title":"Option: vim.lsp.servers.<name>.cmd","content":"Command used to start the LSP server","path":"options.html#option-vim-lsp-servers-<name>-cmd"},{"id":"1021","title":"Option: vim.lsp.servers.<name>.enable","content":"Whether to enable this LSP server.","path":"options.html#option-vim-lsp-servers-<name>-enable"},{"id":"1022","title":"Option: vim.lsp.servers.<name>.filetypes","content":"Filetypes to auto-attach LSP in","path":"options.html#option-vim-lsp-servers-<name>-filetypes"},{"id":"1023","title":"Option: vim.lsp.servers.<name>.on_attach","content":"Function to execute when an LSP server attaches to a buffer","path":"options.html#option-vim-lsp-servers-<name>-on_attach"},{"id":"1024","title":"Option: vim.lsp.servers.<name>.root_markers","content":"\"root markers\" used to determine the root directory of the workspace, and\nthe filetypes associated with this LSP server.\n","path":"options.html#option-vim-lsp-servers-<name>-root_markers"},{"id":"1025","title":"Option: vim.lsp.trouble.enable","content":"Whether to enable trouble diagnostics viewer.","path":"options.html#option-vim-lsp-trouble-enable"},{"id":"1026","title":"Option: vim.lsp.trouble.mappings.documentDiagnostics","content":"Document diagnostics [trouble]","path":"options.html#option-vim-lsp-trouble-mappings-documentDiagnostics"},{"id":"1027","title":"Option: vim.lsp.trouble.mappings.locList","content":"LOCList [trouble]","path":"options.html#option-vim-lsp-trouble-mappings-locList"},{"id":"1028","title":"Option: vim.lsp.trouble.mappings.lspReferences","content":"LSP References [trouble]","path":"options.html#option-vim-lsp-trouble-mappings-lspReferences"},{"id":"1029","title":"Option: vim.lsp.trouble.mappings.quickfix","content":"QuickFix [trouble]","path":"options.html#option-vim-lsp-trouble-mappings-quickfix"},{"id":"1030","title":"Option: vim.lsp.trouble.mappings.symbols","content":"Symbols [trouble]","path":"options.html#option-vim-lsp-trouble-mappings-symbols"},{"id":"1031","title":"Option: vim.lsp.trouble.mappings.workspaceDiagnostics","content":"Workspace diagnostics [trouble]","path":"options.html#option-vim-lsp-trouble-mappings-workspaceDiagnostics"},{"id":"1032","title":"Option: vim.lsp.trouble.setupOpts","content":"Option table to pass into the setup function of Trouble\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-lsp-trouble-setupOpts"},{"id":"1033","title":"Option: vim.luaConfigPost","content":"Verbatim lua code that will be inserted **after**\nthe result of the `luaConfigRc` DAG has been resolved\n\nThis option **does not** take a DAG set, but a string\ninstead. Useful when you'd like to insert contents\nof lua configs after the DAG result.\n","path":"options.html#option-vim-luaConfigPost"},{"id":"1034","title":"Option: vim.luaConfigPre","content":"Verbatim lua code that will be inserted **before**\nthe result of `luaConfigRc` DAG has been resolved.\n\nThis option **does not** take a DAG set, but a string\ninstead. Useful when you'd like to insert contents\nof lua configs after the DAG result.\n\n::: {.warning}\nYou do not want to override this option with mkForce\nIt is used internally to set certain options as early\nas possible and should be avoided unless you know what\nyou're doing. Passing a string to this option will\nmerge it with the default contents.\n:::\n","path":"options.html#option-vim-luaConfigPre"},{"id":"1035","title":"Option: vim.luaConfigRC","content":"Lua configuration, either as a string or a DAG.\n\nIf this option is passed as a DAG, it will be resolved\naccording to the DAG resolution rules (e.g. entryBefore\nor entryAfter) as per the **nvf** extended library.\n","path":"options.html#option-vim-luaConfigRC"},{"id":"1036","title":"Option: vim.luaPackages","content":"List of lua packages to install","path":"options.html#option-vim-luaPackages"},{"id":"1037","title":"Option: vim.maps.command","content":"Mappings for command-line mode","path":"options.html#option-vim-maps-command"},{"id":"1038","title":"Option: vim.maps.command.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-command-<name>-action"},{"id":"1039","title":"Option: vim.maps.command.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-command-<name>-desc"},{"id":"1040","title":"Option: vim.maps.command.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-command-<name>-expr"},{"id":"1041","title":"Option: vim.maps.command.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-command-<name>-lua"},{"id":"1042","title":"Option: vim.maps.command.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-command-<name>-noremap"},{"id":"1043","title":"Option: vim.maps.command.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-command-<name>-nowait"},{"id":"1044","title":"Option: vim.maps.command.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-command-<name>-script"},{"id":"1045","title":"Option: vim.maps.command.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-command-<name>-silent"},{"id":"1046","title":"Option: vim.maps.command.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-command-<name>-unique"},{"id":"1047","title":"Option: vim.maps.insert","content":"Mappings for insert mode","path":"options.html#option-vim-maps-insert"},{"id":"1048","title":"Option: vim.maps.insert.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-insert-<name>-action"},{"id":"1049","title":"Option: vim.maps.insert.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-insert-<name>-desc"},{"id":"1050","title":"Option: vim.maps.insert.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-insert-<name>-expr"},{"id":"1051","title":"Option: vim.maps.insert.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-insert-<name>-lua"},{"id":"1052","title":"Option: vim.maps.insert.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-insert-<name>-noremap"},{"id":"1053","title":"Option: vim.maps.insert.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-insert-<name>-nowait"},{"id":"1054","title":"Option: vim.maps.insert.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-insert-<name>-script"},{"id":"1055","title":"Option: vim.maps.insert.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-insert-<name>-silent"},{"id":"1056","title":"Option: vim.maps.insert.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-insert-<name>-unique"},{"id":"1057","title":"Option: vim.maps.insertCommand","content":"Mappings for insert and command-line mode","path":"options.html#option-vim-maps-insertCommand"},{"id":"1058","title":"Option: vim.maps.insertCommand.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-insertCommand-<name>-action"},{"id":"1059","title":"Option: vim.maps.insertCommand.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-insertCommand-<name>-desc"},{"id":"1060","title":"Option: vim.maps.insertCommand.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-insertCommand-<name>-expr"},{"id":"1061","title":"Option: vim.maps.insertCommand.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-insertCommand-<name>-lua"},{"id":"1062","title":"Option: vim.maps.insertCommand.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-insertCommand-<name>-noremap"},{"id":"1063","title":"Option: vim.maps.insertCommand.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-insertCommand-<name>-nowait"},{"id":"1064","title":"Option: vim.maps.insertCommand.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-insertCommand-<name>-script"},{"id":"1065","title":"Option: vim.maps.insertCommand.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-insertCommand-<name>-silent"},{"id":"1066","title":"Option: vim.maps.insertCommand.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-insertCommand-<name>-unique"},{"id":"1067","title":"Option: vim.maps.lang","content":"Mappings for insert, command-line and lang-arg mode","path":"options.html#option-vim-maps-lang"},{"id":"1068","title":"Option: vim.maps.lang.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-lang-<name>-action"},{"id":"1069","title":"Option: vim.maps.lang.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-lang-<name>-desc"},{"id":"1070","title":"Option: vim.maps.lang.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-lang-<name>-expr"},{"id":"1071","title":"Option: vim.maps.lang.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-lang-<name>-lua"},{"id":"1072","title":"Option: vim.maps.lang.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-lang-<name>-noremap"},{"id":"1073","title":"Option: vim.maps.lang.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-lang-<name>-nowait"},{"id":"1074","title":"Option: vim.maps.lang.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-lang-<name>-script"},{"id":"1075","title":"Option: vim.maps.lang.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-lang-<name>-silent"},{"id":"1076","title":"Option: vim.maps.lang.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-lang-<name>-unique"},{"id":"1077","title":"Option: vim.maps.normal","content":"Mappings for normal mode","path":"options.html#option-vim-maps-normal"},{"id":"1078","title":"Option: vim.maps.normal.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-normal-<name>-action"},{"id":"1079","title":"Option: vim.maps.normal.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-normal-<name>-desc"},{"id":"1080","title":"Option: vim.maps.normal.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-normal-<name>-expr"},{"id":"1081","title":"Option: vim.maps.normal.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-normal-<name>-lua"},{"id":"1082","title":"Option: vim.maps.normal.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-normal-<name>-noremap"},{"id":"1083","title":"Option: vim.maps.normal.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-normal-<name>-nowait"},{"id":"1084","title":"Option: vim.maps.normal.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-normal-<name>-script"},{"id":"1085","title":"Option: vim.maps.normal.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-normal-<name>-silent"},{"id":"1086","title":"Option: vim.maps.normal.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-normal-<name>-unique"},{"id":"1087","title":"Option: vim.maps.normalVisualOp","content":"Mappings for normal, visual, select and operator-pending (same as plain 'map') mode","path":"options.html#option-vim-maps-normalVisualOp"},{"id":"1088","title":"Option: vim.maps.normalVisualOp.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-normalVisualOp-<name>-action"},{"id":"1089","title":"Option: vim.maps.normalVisualOp.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-normalVisualOp-<name>-desc"},{"id":"1090","title":"Option: vim.maps.normalVisualOp.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-normalVisualOp-<name>-expr"},{"id":"1091","title":"Option: vim.maps.normalVisualOp.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-normalVisualOp-<name>-lua"},{"id":"1092","title":"Option: vim.maps.normalVisualOp.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-normalVisualOp-<name>-noremap"},{"id":"1093","title":"Option: vim.maps.normalVisualOp.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-normalVisualOp-<name>-nowait"},{"id":"1094","title":"Option: vim.maps.normalVisualOp.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-normalVisualOp-<name>-script"},{"id":"1095","title":"Option: vim.maps.normalVisualOp.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-normalVisualOp-<name>-silent"},{"id":"1096","title":"Option: vim.maps.normalVisualOp.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-normalVisualOp-<name>-unique"},{"id":"1097","title":"Option: vim.maps.operator","content":"Mappings for operator-pending mode","path":"options.html#option-vim-maps-operator"},{"id":"1098","title":"Option: vim.maps.operator.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-operator-<name>-action"},{"id":"1099","title":"Option: vim.maps.operator.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-operator-<name>-desc"},{"id":"1100","title":"Option: vim.maps.operator.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-operator-<name>-expr"},{"id":"1101","title":"Option: vim.maps.operator.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-operator-<name>-lua"},{"id":"1102","title":"Option: vim.maps.operator.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-operator-<name>-noremap"},{"id":"1103","title":"Option: vim.maps.operator.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-operator-<name>-nowait"},{"id":"1104","title":"Option: vim.maps.operator.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-operator-<name>-script"},{"id":"1105","title":"Option: vim.maps.operator.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-operator-<name>-silent"},{"id":"1106","title":"Option: vim.maps.operator.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-operator-<name>-unique"},{"id":"1107","title":"Option: vim.maps.select","content":"Mappings for select mode","path":"options.html#option-vim-maps-select"},{"id":"1108","title":"Option: vim.maps.select.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-select-<name>-action"},{"id":"1109","title":"Option: vim.maps.select.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-select-<name>-desc"},{"id":"1110","title":"Option: vim.maps.select.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-select-<name>-expr"},{"id":"1111","title":"Option: vim.maps.select.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-select-<name>-lua"},{"id":"1112","title":"Option: vim.maps.select.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-select-<name>-noremap"},{"id":"1113","title":"Option: vim.maps.select.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-select-<name>-nowait"},{"id":"1114","title":"Option: vim.maps.select.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-select-<name>-script"},{"id":"1115","title":"Option: vim.maps.select.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-select-<name>-silent"},{"id":"1116","title":"Option: vim.maps.select.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-select-<name>-unique"},{"id":"1117","title":"Option: vim.maps.terminal","content":"Mappings for terminal mode","path":"options.html#option-vim-maps-terminal"},{"id":"1118","title":"Option: vim.maps.terminal.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-terminal-<name>-action"},{"id":"1119","title":"Option: vim.maps.terminal.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-terminal-<name>-desc"},{"id":"1120","title":"Option: vim.maps.terminal.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-terminal-<name>-expr"},{"id":"1121","title":"Option: vim.maps.terminal.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-terminal-<name>-lua"},{"id":"1122","title":"Option: vim.maps.terminal.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-terminal-<name>-noremap"},{"id":"1123","title":"Option: vim.maps.terminal.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-terminal-<name>-nowait"},{"id":"1124","title":"Option: vim.maps.terminal.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-terminal-<name>-script"},{"id":"1125","title":"Option: vim.maps.terminal.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-terminal-<name>-silent"},{"id":"1126","title":"Option: vim.maps.terminal.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-terminal-<name>-unique"},{"id":"1127","title":"Option: vim.maps.visual","content":"Mappings for visual and select mode","path":"options.html#option-vim-maps-visual"},{"id":"1128","title":"Option: vim.maps.visual.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-visual-<name>-action"},{"id":"1129","title":"Option: vim.maps.visual.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-visual-<name>-desc"},{"id":"1130","title":"Option: vim.maps.visual.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-visual-<name>-expr"},{"id":"1131","title":"Option: vim.maps.visual.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-visual-<name>-lua"},{"id":"1132","title":"Option: vim.maps.visual.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-visual-<name>-noremap"},{"id":"1133","title":"Option: vim.maps.visual.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-visual-<name>-nowait"},{"id":"1134","title":"Option: vim.maps.visual.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-visual-<name>-script"},{"id":"1135","title":"Option: vim.maps.visual.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-visual-<name>-silent"},{"id":"1136","title":"Option: vim.maps.visual.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-visual-<name>-unique"},{"id":"1137","title":"Option: vim.maps.visualOnly","content":"Mappings for visual only mode","path":"options.html#option-vim-maps-visualOnly"},{"id":"1138","title":"Option: vim.maps.visualOnly.<name>.action","content":"The command to execute.","path":"options.html#option-vim-maps-visualOnly-<name>-action"},{"id":"1139","title":"Option: vim.maps.visualOnly.<name>.desc","content":"A description of this keybind, to be shown in which-key, if you have it enabled.","path":"options.html#option-vim-maps-visualOnly-<name>-desc"},{"id":"1140","title":"Option: vim.maps.visualOnly.<name>.expr","content":"Means that the action is actually an expression. Equivalent to adding <expr> to a map.","path":"options.html#option-vim-maps-visualOnly-<name>-expr"},{"id":"1141","title":"Option: vim.maps.visualOnly.<name>.lua","content":"If true, `action` is considered to be lua code.\nThus, it will not be wrapped in `\"\"`.\n","path":"options.html#option-vim-maps-visualOnly-<name>-lua"},{"id":"1142","title":"Option: vim.maps.visualOnly.<name>.noremap","content":"Whether to use the 'noremap' variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.","path":"options.html#option-vim-maps-visualOnly-<name>-noremap"},{"id":"1143","title":"Option: vim.maps.visualOnly.<name>.nowait","content":"Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.","path":"options.html#option-vim-maps-visualOnly-<name>-nowait"},{"id":"1144","title":"Option: vim.maps.visualOnly.<name>.script","content":"Equivalent to adding <script> to a map.","path":"options.html#option-vim-maps-visualOnly-<name>-script"},{"id":"1145","title":"Option: vim.maps.visualOnly.<name>.silent","content":"Whether this mapping should be silent. Equivalent to adding <silent> to a map.","path":"options.html#option-vim-maps-visualOnly-<name>-silent"},{"id":"1146","title":"Option: vim.maps.visualOnly.<name>.unique","content":"Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.","path":"options.html#option-vim-maps-visualOnly-<name>-unique"},{"id":"1147","title":"Option: vim.mini.ai.enable","content":"Whether to enable mini.ai.","path":"options.html#option-vim-mini-ai-enable"},{"id":"1148","title":"Option: vim.mini.ai.setupOpts","content":"Option table to pass into the setup function of mini.ai\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-ai-setupOpts"},{"id":"1149","title":"Option: vim.mini.align.enable","content":"Whether to enable mini.align.","path":"options.html#option-vim-mini-align-enable"},{"id":"1150","title":"Option: vim.mini.align.setupOpts","content":"Option table to pass into the setup function of mini.align\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-align-setupOpts"},{"id":"1151","title":"Option: vim.mini.animate.enable","content":"Whether to enable mini.animate.","path":"options.html#option-vim-mini-animate-enable"},{"id":"1152","title":"Option: vim.mini.animate.setupOpts","content":"Option table to pass into the setup function of mini.animate\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-animate-setupOpts"},{"id":"1153","title":"Option: vim.mini.basics.enable","content":"Whether to enable mini.basics.","path":"options.html#option-vim-mini-basics-enable"},{"id":"1154","title":"Option: vim.mini.basics.setupOpts","content":"Option table to pass into the setup function of mini.basics\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-basics-setupOpts"},{"id":"1155","title":"Option: vim.mini.bracketed.enable","content":"Whether to enable mini.bracketed.","path":"options.html#option-vim-mini-bracketed-enable"},{"id":"1156","title":"Option: vim.mini.bracketed.setupOpts","content":"Option table to pass into the setup function of mini.bracketed\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-bracketed-setupOpts"},{"id":"1157","title":"Option: vim.mini.bufremove.enable","content":"Whether to enable mini.bufremove.","path":"options.html#option-vim-mini-bufremove-enable"},{"id":"1158","title":"Option: vim.mini.bufremove.setupOpts","content":"Option table to pass into the setup function of mini.bufremove\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-bufremove-setupOpts"},{"id":"1159","title":"Option: vim.mini.clue.enable","content":"Whether to enable mini.clue.","path":"options.html#option-vim-mini-clue-enable"},{"id":"1160","title":"Option: vim.mini.clue.setupOpts","content":"Option table to pass into the setup function of mini.clue\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-clue-setupOpts"},{"id":"1161","title":"Option: vim.mini.colors.enable","content":"Whether to enable mini.colors.","path":"options.html#option-vim-mini-colors-enable"},{"id":"1162","title":"Option: vim.mini.comment.enable","content":"Whether to enable mini.comment.","path":"options.html#option-vim-mini-comment-enable"},{"id":"1163","title":"Option: vim.mini.comment.setupOpts","content":"Option table to pass into the setup function of mini.comment\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-comment-setupOpts"},{"id":"1164","title":"Option: vim.mini.completion.enable","content":"Whether to enable mini.completion.","path":"options.html#option-vim-mini-completion-enable"},{"id":"1165","title":"Option: vim.mini.completion.setupOpts","content":"Option table to pass into the setup function of mini.completion\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-completion-setupOpts"},{"id":"1166","title":"Option: vim.mini.cursorword.enable","content":"Whether to enable mini.cursorword.","path":"options.html#option-vim-mini-cursorword-enable"},{"id":"1167","title":"Option: vim.mini.cursorword.setupOpts","content":"Option table to pass into the setup function of mini.cursorword\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-cursorword-setupOpts"},{"id":"1168","title":"Option: vim.mini.diff.enable","content":"Whether to enable mini.diff.","path":"options.html#option-vim-mini-diff-enable"},{"id":"1169","title":"Option: vim.mini.diff.setupOpts","content":"Option table to pass into the setup function of mini.diff\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-diff-setupOpts"},{"id":"1170","title":"Option: vim.mini.doc.enable","content":"Whether to enable mini.doc.","path":"options.html#option-vim-mini-doc-enable"},{"id":"1171","title":"Option: vim.mini.doc.setupOpts","content":"Option table to pass into the setup function of mini.doc\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-doc-setupOpts"},{"id":"1172","title":"Option: vim.mini.extra.enable","content":"Whether to enable mini.extra.","path":"options.html#option-vim-mini-extra-enable"},{"id":"1173","title":"Option: vim.mini.files.enable","content":"Whether to enable mini.files.","path":"options.html#option-vim-mini-files-enable"},{"id":"1174","title":"Option: vim.mini.files.setupOpts","content":"Option table to pass into the setup function of mini.files\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-files-setupOpts"},{"id":"1175","title":"Option: vim.mini.fuzzy.enable","content":"Whether to enable mini.fuzzy.","path":"options.html#option-vim-mini-fuzzy-enable"},{"id":"1176","title":"Option: vim.mini.fuzzy.setupOpts","content":"Option table to pass into the setup function of mini.fuzzy\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-fuzzy-setupOpts"},{"id":"1177","title":"Option: vim.mini.git.enable","content":"Whether to enable mini.git.","path":"options.html#option-vim-mini-git-enable"},{"id":"1178","title":"Option: vim.mini.git.setupOpts","content":"Option table to pass into the setup function of mini.git\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-git-setupOpts"},{"id":"1179","title":"Option: vim.mini.hipatterns.enable","content":"Whether to enable mini.hipatterns.","path":"options.html#option-vim-mini-hipatterns-enable"},{"id":"1180","title":"Option: vim.mini.hipatterns.setupOpts","content":"Option table to pass into the setup function of mini.hipatterns\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-hipatterns-setupOpts"},{"id":"1181","title":"Option: vim.mini.hues.enable","content":"Whether to enable mini.hues.","path":"options.html#option-vim-mini-hues-enable"},{"id":"1182","title":"Option: vim.mini.hues.setupOpts","content":"Option table to pass into the setup function of mini.hues\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-hues-setupOpts"},{"id":"1183","title":"Option: vim.mini.hues.setupOpts.background","content":"The hex color for the background color of the color scheme, prefixed with #","path":"options.html#option-vim-mini-hues-setupOpts-background"},{"id":"1184","title":"Option: vim.mini.hues.setupOpts.foreground","content":"The hex color for the foreground color of the color scheme, prefixed with #","path":"options.html#option-vim-mini-hues-setupOpts-foreground"},{"id":"1185","title":"Option: vim.mini.icons.enable","content":"Whether to enable mini.icons.","path":"options.html#option-vim-mini-icons-enable"},{"id":"1186","title":"Option: vim.mini.icons.setupOpts","content":"Option table to pass into the setup function of mini.icons\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-icons-setupOpts"},{"id":"1187","title":"Option: vim.mini.indentscope.enable","content":"Whether to enable mini.indentscope.","path":"options.html#option-vim-mini-indentscope-enable"},{"id":"1188","title":"Option: vim.mini.indentscope.setupOpts","content":"Option table to pass into the setup function of mini.indentscope\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-indentscope-setupOpts"},{"id":"1189","title":"Option: vim.mini.indentscope.setupOpts.ignore_filetypes","content":"File types to ignore for illuminate","path":"options.html#option-vim-mini-indentscope-setupOpts-ignore_filetypes"},{"id":"1190","title":"Option: vim.mini.jump.enable","content":"Whether to enable mini.jump.","path":"options.html#option-vim-mini-jump-enable"},{"id":"1191","title":"Option: vim.mini.jump.setupOpts","content":"Option table to pass into the setup function of mini.jump\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-jump-setupOpts"},{"id":"1192","title":"Option: vim.mini.jump2d.enable","content":"Whether to enable mini.jump2d.","path":"options.html#option-vim-mini-jump2d-enable"},{"id":"1193","title":"Option: vim.mini.jump2d.setupOpts","content":"Option table to pass into the setup function of mini.jump2d\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-jump2d-setupOpts"},{"id":"1194","title":"Option: vim.mini.map.enable","content":"Whether to enable mini.map.","path":"options.html#option-vim-mini-map-enable"},{"id":"1195","title":"Option: vim.mini.map.setupOpts","content":"Option table to pass into the setup function of mini.map\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-map-setupOpts"},{"id":"1196","title":"Option: vim.mini.misc.enable","content":"Whether to enable mini.misc.","path":"options.html#option-vim-mini-misc-enable"},{"id":"1197","title":"Option: vim.mini.misc.setupOpts","content":"Option table to pass into the setup function of mini.misc\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-misc-setupOpts"},{"id":"1198","title":"Option: vim.mini.move.enable","content":"Whether to enable mini.move.","path":"options.html#option-vim-mini-move-enable"},{"id":"1199","title":"Option: vim.mini.move.setupOpts","content":"Option table to pass into the setup function of mini.move\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-move-setupOpts"},{"id":"1200","title":"Option: vim.mini.notify.enable","content":"Whether to enable mini.notify.","path":"options.html#option-vim-mini-notify-enable"},{"id":"1201","title":"Option: vim.mini.notify.notifyOpts","content":"Option table to pass into the setup function of mini.notify notifications\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-notify-notifyOpts"},{"id":"1202","title":"Option: vim.mini.notify.notifyOpts.DEBUG.duration","content":"The duration of the debug notification","path":"options.html#option-vim-mini-notify-notifyOpts-DEBUG-duration"},{"id":"1203","title":"Option: vim.mini.notify.notifyOpts.DEBUG.hl_group","content":"The highlight group of the debug notification","path":"options.html#option-vim-mini-notify-notifyOpts-DEBUG-hl_group"},{"id":"1204","title":"Option: vim.mini.notify.notifyOpts.ERROR.duration","content":"The duration of the error notification","path":"options.html#option-vim-mini-notify-notifyOpts-ERROR-duration"},{"id":"1205","title":"Option: vim.mini.notify.notifyOpts.ERROR.hl_group","content":"The highlight group of the error notification","path":"options.html#option-vim-mini-notify-notifyOpts-ERROR-hl_group"},{"id":"1206","title":"Option: vim.mini.notify.notifyOpts.INFO.duration","content":"The duration of the info notification","path":"options.html#option-vim-mini-notify-notifyOpts-INFO-duration"},{"id":"1207","title":"Option: vim.mini.notify.notifyOpts.INFO.hl_group","content":"The highlight group of the info notification","path":"options.html#option-vim-mini-notify-notifyOpts-INFO-hl_group"},{"id":"1208","title":"Option: vim.mini.notify.notifyOpts.OFF.duration","content":"The duration of the off notification","path":"options.html#option-vim-mini-notify-notifyOpts-OFF-duration"},{"id":"1209","title":"Option: vim.mini.notify.notifyOpts.OFF.hl_group","content":"The highlight group of the off notification","path":"options.html#option-vim-mini-notify-notifyOpts-OFF-hl_group"},{"id":"1210","title":"Option: vim.mini.notify.notifyOpts.TRACE.duration","content":"The duration of the trace notification","path":"options.html#option-vim-mini-notify-notifyOpts-TRACE-duration"},{"id":"1211","title":"Option: vim.mini.notify.notifyOpts.TRACE.hl_group","content":"The highlight group of the trace notification","path":"options.html#option-vim-mini-notify-notifyOpts-TRACE-hl_group"},{"id":"1212","title":"Option: vim.mini.notify.notifyOpts.WARN.duration","content":"The duration of the warn notification","path":"options.html#option-vim-mini-notify-notifyOpts-WARN-duration"},{"id":"1213","title":"Option: vim.mini.notify.notifyOpts.WARN.hl_group","content":"The highlight group of the warn notification","path":"options.html#option-vim-mini-notify-notifyOpts-WARN-hl_group"},{"id":"1214","title":"Option: vim.mini.notify.setupOpts","content":"Option table to pass into the setup function of mini.notify\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-notify-setupOpts"},{"id":"1215","title":"Option: vim.mini.notify.setupOpts.window.config.border","content":"The border type for the mini.notify-notifications","path":"options.html#option-vim-mini-notify-setupOpts-window-config-border"},{"id":"1216","title":"Option: vim.mini.operators.enable","content":"Whether to enable mini.operators.","path":"options.html#option-vim-mini-operators-enable"},{"id":"1217","title":"Option: vim.mini.operators.setupOpts","content":"Option table to pass into the setup function of mini.operators\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-operators-setupOpts"},{"id":"1218","title":"Option: vim.mini.pairs.enable","content":"Whether to enable mini.pairs.","path":"options.html#option-vim-mini-pairs-enable"},{"id":"1219","title":"Option: vim.mini.pairs.setupOpts","content":"Option table to pass into the setup function of mini.pairs\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-pairs-setupOpts"},{"id":"1220","title":"Option: vim.mini.pick.enable","content":"Whether to enable mini.pick.","path":"options.html#option-vim-mini-pick-enable"},{"id":"1221","title":"Option: vim.mini.pick.setupOpts","content":"Option table to pass into the setup function of mini.pick\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-pick-setupOpts"},{"id":"1222","title":"Option: vim.mini.sessions.enable","content":"Whether to enable mini.sessions.","path":"options.html#option-vim-mini-sessions-enable"},{"id":"1223","title":"Option: vim.mini.sessions.setupOpts","content":"Option table to pass into the setup function of mini.sessions\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-sessions-setupOpts"},{"id":"1224","title":"Option: vim.mini.snippets.enable","content":"Whether to enable mini.snippets.","path":"options.html#option-vim-mini-snippets-enable"},{"id":"1225","title":"Option: vim.mini.snippets.setupOpts","content":"Option table to pass into the setup function of mini.snippets\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-snippets-setupOpts"},{"id":"1226","title":"Option: vim.mini.splitjoin.enable","content":"Whether to enable mini.splitjoin.","path":"options.html#option-vim-mini-splitjoin-enable"},{"id":"1227","title":"Option: vim.mini.splitjoin.setupOpts","content":"Option table to pass into the setup function of mini.splitjoin\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-splitjoin-setupOpts"},{"id":"1228","title":"Option: vim.mini.starter.enable","content":"Whether to enable mini.starter.","path":"options.html#option-vim-mini-starter-enable"},{"id":"1229","title":"Option: vim.mini.starter.setupOpts","content":"Option table to pass into the setup function of mini.starter\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-starter-setupOpts"},{"id":"1230","title":"Option: vim.mini.statusline.enable","content":"Whether to enable mini.statusline.","path":"options.html#option-vim-mini-statusline-enable"},{"id":"1231","title":"Option: vim.mini.statusline.setupOpts","content":"Option table to pass into the setup function of mini.statusline\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-statusline-setupOpts"},{"id":"1232","title":"Option: vim.mini.surround.enable","content":"Whether to enable mini.surround.","path":"options.html#option-vim-mini-surround-enable"},{"id":"1233","title":"Option: vim.mini.surround.setupOpts","content":"Option table to pass into the setup function of mini.surround\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-surround-setupOpts"},{"id":"1234","title":"Option: vim.mini.tabline.enable","content":"Whether to enable mini.tabline.","path":"options.html#option-vim-mini-tabline-enable"},{"id":"1235","title":"Option: vim.mini.tabline.setupOpts","content":"Option table to pass into the setup function of mini.tabline\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-tabline-setupOpts"},{"id":"1236","title":"Option: vim.mini.test.enable","content":"Whether to enable mini.test.","path":"options.html#option-vim-mini-test-enable"},{"id":"1237","title":"Option: vim.mini.test.setupOpts","content":"Option table to pass into the setup function of mini.test\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-test-setupOpts"},{"id":"1238","title":"Option: vim.mini.trailspace.enable","content":"Whether to enable mini.trailspace.","path":"options.html#option-vim-mini-trailspace-enable"},{"id":"1239","title":"Option: vim.mini.trailspace.setupOpts","content":"Option table to pass into the setup function of mini.trailspace\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-trailspace-setupOpts"},{"id":"1240","title":"Option: vim.mini.visits.enable","content":"Whether to enable mini.visits.","path":"options.html#option-vim-mini-visits-enable"},{"id":"1241","title":"Option: vim.mini.visits.setupOpts","content":"Option table to pass into the setup function of mini.visits\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-mini-visits-setupOpts"},{"id":"1242","title":"Option: vim.minimap.codewindow.enable","content":"Whether to enable codewindow plugin for minimap view.","path":"options.html#option-vim-minimap-codewindow-enable"},{"id":"1243","title":"Option: vim.minimap.codewindow.mappings.close","content":"Close minimap [codewindow]","path":"options.html#option-vim-minimap-codewindow-mappings-close"},{"id":"1244","title":"Option: vim.minimap.codewindow.mappings.open","content":"Open minimap [codewindow]","path":"options.html#option-vim-minimap-codewindow-mappings-open"},{"id":"1245","title":"Option: vim.minimap.codewindow.mappings.toggle","content":"Toggle minimap [codewindow]","path":"options.html#option-vim-minimap-codewindow-mappings-toggle"},{"id":"1246","title":"Option: vim.minimap.codewindow.mappings.toggleFocus","content":"Toggle minimap focus [codewindow]","path":"options.html#option-vim-minimap-codewindow-mappings-toggleFocus"},{"id":"1247","title":"Option: vim.minimap.minimap-vim.enable","content":"Whether to enable minimap view [minimap-vim].","path":"options.html#option-vim-minimap-minimap-vim-enable"},{"id":"1248","title":"Option: vim.navigation.harpoon.enable","content":"Whether to enable Quick bookmarks on keybinds [Harpoon].","path":"options.html#option-vim-navigation-harpoon-enable"},{"id":"1249","title":"Option: vim.navigation.harpoon.mappings.file1","content":"Go to marked file 1 [Harpoon]","path":"options.html#option-vim-navigation-harpoon-mappings-file1"},{"id":"1250","title":"Option: vim.navigation.harpoon.mappings.file2","content":"Go to marked file 2 [Harpoon]","path":"options.html#option-vim-navigation-harpoon-mappings-file2"},{"id":"1251","title":"Option: vim.navigation.harpoon.mappings.file3","content":"Go to marked file 3 [Harpoon]","path":"options.html#option-vim-navigation-harpoon-mappings-file3"},{"id":"1252","title":"Option: vim.navigation.harpoon.mappings.file4","content":"Go to marked file 4 [Harpoon]","path":"options.html#option-vim-navigation-harpoon-mappings-file4"},{"id":"1253","title":"Option: vim.navigation.harpoon.mappings.listMarks","content":"List marked files [Harpoon]","path":"options.html#option-vim-navigation-harpoon-mappings-listMarks"},{"id":"1254","title":"Option: vim.navigation.harpoon.mappings.markFile","content":"Mark file [Harpoon]","path":"options.html#option-vim-navigation-harpoon-mappings-markFile"},{"id":"1255","title":"Option: vim.navigation.harpoon.setupOpts","content":"Option table to pass into the setup function of Harpoon\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-navigation-harpoon-setupOpts"},{"id":"1256","title":"Option: vim.navigation.harpoon.setupOpts.defaults.key","content":"How the out list key is looked up. This can be useful\nwhen using worktrees and using git remote instead of file path\n","path":"options.html#option-vim-navigation-harpoon-setupOpts-defaults-key"},{"id":"1257","title":"Option: vim.navigation.harpoon.setupOpts.defaults.save_on_toggle","content":"Any time the ui menu is closed then we will save the\nstate back to the backing list, not to the fs\n","path":"options.html#option-vim-navigation-harpoon-setupOpts-defaults-save_on_toggle"},{"id":"1258","title":"Option: vim.navigation.harpoon.setupOpts.defaults.sync_on_ui_close","content":"Any time the ui menu is closed then the state of the\nlist will be sync'd back to the fs\n","path":"options.html#option-vim-navigation-harpoon-setupOpts-defaults-sync_on_ui_close"},{"id":"1259","title":"Option: vim.notes.mind-nvim.enable","content":"Whether to enable note organizer tool for Neovim [mind-nvim].","path":"options.html#option-vim-notes-mind-nvim-enable"},{"id":"1260","title":"Option: vim.notes.neorg.enable","content":"Whether to enable Neorg: An intuitive note-taking and organization tool with a structured nested syntax.\n.","path":"options.html#option-vim-notes-neorg-enable"},{"id":"1261","title":"Option: vim.notes.neorg.setupOpts","content":"Option table to pass into the setup function of Neorg\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-notes-neorg-setupOpts"},{"id":"1262","title":"Option: vim.notes.neorg.setupOpts.load.\"core.defaults\"","content":"all of the most important modules that any user would want to have a \"just works\" experience\n","path":"options.html#option-vim-notes-neorg-setupOpts-load-\"core-defaults\""},{"id":"1263","title":"Option: vim.notes.neorg.setupOpts.load.\"core.defaults\".config.disable","content":"list of modules from to be disabled from core.defaults\n","path":"options.html#option-vim-notes-neorg-setupOpts-load-\"core-defaults\"-config-disable"},{"id":"1264","title":"Option: vim.notes.neorg.setupOpts.load.\"core.defaults\".enable","content":"Whether to enable all of the most important modules that any user would want to have a \"just works\" experience\n.","path":"options.html#option-vim-notes-neorg-setupOpts-load-\"core-defaults\"-enable"},{"id":"1265","title":"Option: vim.notes.neorg.treesitter.enable","content":"Whether to enable Neorg treesitter.","path":"options.html#option-vim-notes-neorg-treesitter-enable"},{"id":"1266","title":"Option: vim.notes.neorg.treesitter.norgPackage","content":"The norg treesitter package to use.","path":"options.html#option-vim-notes-neorg-treesitter-norgPackage"},{"id":"1267","title":"Option: vim.notes.obsidian.enable","content":"Whether to enable complementary neovim plugins for Obsidian editor.","path":"options.html#option-vim-notes-obsidian-enable"},{"id":"1268","title":"Option: vim.notes.obsidian.setupOpts","content":"Option table to pass into the setup function of Obsidian.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-notes-obsidian-setupOpts"},{"id":"1269","title":"Option: vim.notes.obsidian.setupOpts.completion.nvim_cmp","content":"If using nvim-cmp, otherwise set to false","path":"options.html#option-vim-notes-obsidian-setupOpts-completion-nvim_cmp"},{"id":"1270","title":"Option: vim.notes.obsidian.setupOpts.daily_notes.date_format","content":"Date format used for creating daily notes","path":"options.html#option-vim-notes-obsidian-setupOpts-daily_notes-date_format"},{"id":"1271","title":"Option: vim.notes.obsidian.setupOpts.daily_notes.folder","content":"Directory in which daily notes should be created","path":"options.html#option-vim-notes-obsidian-setupOpts-daily_notes-folder"},{"id":"1272","title":"Option: vim.notes.orgmode.enable","content":"Whether to enable nvim-orgmode: Neovim plugin for Emacs Orgmode. Get the best of both worlds.","path":"options.html#option-vim-notes-orgmode-enable"},{"id":"1273","title":"Option: vim.notes.orgmode.setupOpts","content":"Option table to pass into the setup function of Orgmode\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-notes-orgmode-setupOpts"},{"id":"1274","title":"Option: vim.notes.orgmode.setupOpts.org_agenda_files","content":"List of org files to be used as agenda files.","path":"options.html#option-vim-notes-orgmode-setupOpts-org_agenda_files"},{"id":"1275","title":"Option: vim.notes.orgmode.setupOpts.org_default_notes_file","content":"Default org file to be used for notes.","path":"options.html#option-vim-notes-orgmode-setupOpts-org_default_notes_file"},{"id":"1276","title":"Option: vim.notes.orgmode.treesitter.enable","content":"Whether to enable Orgmode treesitter.","path":"options.html#option-vim-notes-orgmode-treesitter-enable"},{"id":"1277","title":"Option: vim.notes.orgmode.treesitter.orgPackage","content":"The org treesitter package to use.","path":"options.html#option-vim-notes-orgmode-treesitter-orgPackage"},{"id":"1278","title":"Option: vim.notes.todo-comments.enable","content":"Whether to enable todo-comments: highlight and search for todo comments like TODO, HACK, BUG in your code base.","path":"options.html#option-vim-notes-todo-comments-enable"},{"id":"1279","title":"Option: vim.notes.todo-comments.mappings.quickFix","content":"Open Todo-s in a quickfix list","path":"options.html#option-vim-notes-todo-comments-mappings-quickFix"},{"id":"1280","title":"Option: vim.notes.todo-comments.mappings.telescope","content":"Open Todo-s in telescope","path":"options.html#option-vim-notes-todo-comments-mappings-telescope"},{"id":"1281","title":"Option: vim.notes.todo-comments.mappings.trouble","content":"Open Todo-s in Trouble","path":"options.html#option-vim-notes-todo-comments-mappings-trouble"},{"id":"1282","title":"Option: vim.notes.todo-comments.setupOpts","content":"Option table to pass into the setup function of todo-comments.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-notes-todo-comments-setupOpts"},{"id":"1283","title":"Option: vim.notes.todo-comments.setupOpts.highlight.pattern","content":"vim regex pattern used for highlighting comments","path":"options.html#option-vim-notes-todo-comments-setupOpts-highlight-pattern"},{"id":"1284","title":"Option: vim.notes.todo-comments.setupOpts.search.args","content":"arguments to pass to the search command","path":"options.html#option-vim-notes-todo-comments-setupOpts-search-args"},{"id":"1285","title":"Option: vim.notes.todo-comments.setupOpts.search.command","content":"search command","path":"options.html#option-vim-notes-todo-comments-setupOpts-search-command"},{"id":"1286","title":"Option: vim.notes.todo-comments.setupOpts.search.pattern","content":"ripgrep regex pattern used for searching comments","path":"options.html#option-vim-notes-todo-comments-setupOpts-search-pattern"},{"id":"1287","title":"Option: vim.notify.nvim-notify.enable","content":"Whether to enable nvim-notify notifications.","path":"options.html#option-vim-notify-nvim-notify-enable"},{"id":"1288","title":"Option: vim.notify.nvim-notify.setupOpts","content":"Option table to pass into the setup function of nvim-notify\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-notify-nvim-notify-setupOpts"},{"id":"1289","title":"Option: vim.notify.nvim-notify.setupOpts.background_colour","content":"The background colour of the notification","path":"options.html#option-vim-notify-nvim-notify-setupOpts-background_colour"},{"id":"1290","title":"Option: vim.notify.nvim-notify.setupOpts.icons","content":"The icons of the notification","path":"options.html#option-vim-notify-nvim-notify-setupOpts-icons"},{"id":"1291","title":"Option: vim.notify.nvim-notify.setupOpts.position","content":"The position of the notification","path":"options.html#option-vim-notify-nvim-notify-setupOpts-position"},{"id":"1292","title":"Option: vim.notify.nvim-notify.setupOpts.render","content":"Custom rendering method to be used for displaying notifications","path":"options.html#option-vim-notify-nvim-notify-setupOpts-render"},{"id":"1293","title":"Option: vim.notify.nvim-notify.setupOpts.stages","content":"The stages of the notification","path":"options.html#option-vim-notify-nvim-notify-setupOpts-stages"},{"id":"1294","title":"Option: vim.notify.nvim-notify.setupOpts.timeout","content":"The timeout of the notification","path":"options.html#option-vim-notify-nvim-notify-setupOpts-timeout"},{"id":"1295","title":"Option: vim.optPlugins","content":"List of plugins to optionally load on startup.\n\nThis option has the same type definition as {option}`vim.startPlugins`\nand plugins in this list are appended to {option}`vim.startPlugins` by\nthe wrapper during the build process.\n\nTo avoid overriding packages and dependencies provided by startPlugins, you\nare recommended to use this option or {option}`vim.extraPlugins` option.\n","path":"options.html#option-vim-optPlugins"},{"id":"1296","title":"Option: vim.options","content":"A freeform attribute set containing vim options to be set as early as possible.\nIf populated, this option will set vim options in the built {option}`luaConfigRC`\nafter `basic` and before `pluginConfigs` DAG entries.\n\n::: {.note}\n`{foo = \"bar\";}` will set `vim.o.foo` to \"bar\", where the type of `bar` in the\nresulting Lua value will be inferred from the type of the value in the\n`{name = value;}` pair passed to the option.\n:::\n","path":"options.html#option-vim-options"},{"id":"1297","title":"Option: vim.options.autoindent","content":"Enable auto indent","path":"options.html#option-vim-options-autoindent"},{"id":"1298","title":"Option: vim.options.cmdheight","content":"Height of the command pane","path":"options.html#option-vim-options-cmdheight"},{"id":"1299","title":"Option: vim.options.cursorlineopt","content":"Highlight the text line of the cursor with CursorLine hl-CursorLine","path":"options.html#option-vim-options-cursorlineopt"},{"id":"1300","title":"Option: vim.options.mouse","content":"Set modes for mouse support.\n\n* n - normal\n* v - visual\n* i - insert\n* c - command-line\n* h - all modes when editing a help file\n* a - all modes\n* r - for hit-enter and more-prompt prompt\n\n[neovim documentation]: https://neovim.io/doc/user/options.html#'mouse'\"\n\nThis option takes a string to ensure proper conversion to the corresponding Lua type.\nAs such, we do not check the value passed to this option. Please ensure that any value\nthat is set here is a valid value as per [neovim documentation].\n","path":"options.html#option-vim-options-mouse"},{"id":"1301","title":"Option: vim.options.shiftwidth","content":"Number of spaces to use for each step of (auto)indent. Used for\n{option}`cindent`, `>>`, `<<`, etc.\n\nWhen zero the {option}`tabstop` value will be used.\n","path":"options.html#option-vim-options-shiftwidth"},{"id":"1302","title":"Option: vim.options.signcolumn","content":"Whether to show the sign column","path":"options.html#option-vim-options-signcolumn"},{"id":"1303","title":"Option: vim.options.splitbelow","content":"New splits will open below instead of on top","path":"options.html#option-vim-options-splitbelow"},{"id":"1304","title":"Option: vim.options.splitright","content":"New splits will open to the right","path":"options.html#option-vim-options-splitright"},{"id":"1305","title":"Option: vim.options.tabstop","content":"Number of spaces that a `<Tab>` in the file counts for. Also see\nthe {command}`:retab` command, and the {option}`softtabstop` option.\n","path":"options.html#option-vim-options-tabstop"},{"id":"1306","title":"Option: vim.options.termguicolors","content":"Set terminal up for 256 colours","path":"options.html#option-vim-options-termguicolors"},{"id":"1307","title":"Option: vim.options.tm","content":"Timeout in ms that Neovim will wait for mapped action to complete","path":"options.html#option-vim-options-tm"},{"id":"1308","title":"Option: vim.options.updatetime","content":"The number of milliseconds till Cursor Hold event is fired","path":"options.html#option-vim-options-updatetime"},{"id":"1309","title":"Option: vim.options.wrap","content":"Enable word wrapping.","path":"options.html#option-vim-options-wrap"},{"id":"1310","title":"Option: vim.package","content":"The neovim package to use for the wrapper. This\ncorresponds to the package that will be wrapped\nwith your plugins and settings.\n\n::: {.warning}\nYou will need to use an unwrapped package for this\noption to work as intended. Using an already wrapped\npackage here may yield undesirable results.\n:::\n","path":"options.html#option-vim-package"},{"id":"1311","title":"Option: vim.pluginOverrides","content":"Attribute set of plugins to override default values","path":"options.html#option-vim-pluginOverrides"},{"id":"1312","title":"Option: vim.pluginRC","content":"The DAG used to configure plugins. If a string is passed, entryAnywhere is automatically applied.","path":"options.html#option-vim-pluginRC"},{"id":"1313","title":"Option: vim.presence.neocord.enable","content":"Whether to enable neocord plugin for discord rich presence.","path":"options.html#option-vim-presence-neocord-enable"},{"id":"1314","title":"Option: vim.presence.neocord.setupOpts","content":"Option table to pass into the setup function of neocord\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-presence-neocord-setupOpts"},{"id":"1315","title":"Option: vim.presence.neocord.setupOpts.auto_update","content":"Automatically update the presence","path":"options.html#option-vim-presence-neocord-setupOpts-auto_update"},{"id":"1316","title":"Option: vim.presence.neocord.setupOpts.blacklist","content":"List of filetypes to ignore","path":"options.html#option-vim-presence-neocord-setupOpts-blacklist"},{"id":"1317","title":"Option: vim.presence.neocord.setupOpts.client_id","content":"Client ID of the application","path":"options.html#option-vim-presence-neocord-setupOpts-client_id"},{"id":"1318","title":"Option: vim.presence.neocord.setupOpts.debounce_timeout","content":"Number of seconds to debounce events","path":"options.html#option-vim-presence-neocord-setupOpts-debounce_timeout"},{"id":"1319","title":"Option: vim.presence.neocord.setupOpts.editing_text","content":"Text displayed when editing a file","path":"options.html#option-vim-presence-neocord-setupOpts-editing_text"},{"id":"1320","title":"Option: vim.presence.neocord.setupOpts.enable_line_number","content":"Show line number on the RPC item","path":"options.html#option-vim-presence-neocord-setupOpts-enable_line_number"},{"id":"1321","title":"Option: vim.presence.neocord.setupOpts.file_explorer_text","content":"Text displayed when browsing files","path":"options.html#option-vim-presence-neocord-setupOpts-file_explorer_text"},{"id":"1322","title":"Option: vim.presence.neocord.setupOpts.git_commit_text","content":"Text displayed when committing changes","path":"options.html#option-vim-presence-neocord-setupOpts-git_commit_text"},{"id":"1323","title":"Option: vim.presence.neocord.setupOpts.line_number_text","content":"Text displayed when showing line number","path":"options.html#option-vim-presence-neocord-setupOpts-line_number_text"},{"id":"1324","title":"Option: vim.presence.neocord.setupOpts.log_level","content":"Log level to be used by the plugin","path":"options.html#option-vim-presence-neocord-setupOpts-log_level"},{"id":"1325","title":"Option: vim.presence.neocord.setupOpts.logo","content":"Logo to be displayed on the RPC item\n\nThis must be either \"auto\" or an URL to your image of choice\n","path":"options.html#option-vim-presence-neocord-setupOpts-logo"},{"id":"1326","title":"Option: vim.presence.neocord.setupOpts.logo_tooltip","content":"Text displayed when hovering over the Neovim image","path":"options.html#option-vim-presence-neocord-setupOpts-logo_tooltip"},{"id":"1327","title":"Option: vim.presence.neocord.setupOpts.main_image","content":"Main image to be displayed","path":"options.html#option-vim-presence-neocord-setupOpts-main_image"},{"id":"1328","title":"Option: vim.presence.neocord.setupOpts.plugin_manager_text","content":"Text displayed when managing plugins","path":"options.html#option-vim-presence-neocord-setupOpts-plugin_manager_text"},{"id":"1329","title":"Option: vim.presence.neocord.setupOpts.reading_text","content":"Text displayed when reading a file","path":"options.html#option-vim-presence-neocord-setupOpts-reading_text"},{"id":"1330","title":"Option: vim.presence.neocord.setupOpts.show_time","content":"Show time on the RPC item","path":"options.html#option-vim-presence-neocord-setupOpts-show_time"},{"id":"1331","title":"Option: vim.presence.neocord.setupOpts.terminal_text","content":"Text displayed when working on the terminal","path":"options.html#option-vim-presence-neocord-setupOpts-terminal_text"},{"id":"1332","title":"Option: vim.presence.neocord.setupOpts.workspace_text","content":"Text displayed when working on a project","path":"options.html#option-vim-presence-neocord-setupOpts-workspace_text"},{"id":"1333","title":"Option: vim.preventJunkFiles","content":"Prevent swapfile and backupfile from being created.\n\n`false` is the default Neovim behaviour. If you wish to create\nbackup and swapfiles, set this option to `false`.\n","path":"options.html#option-vim-preventJunkFiles"},{"id":"1334","title":"Option: vim.projects.project-nvim.enable","content":"Whether to enable project-nvim for project management.","path":"options.html#option-vim-projects-project-nvim-enable"},{"id":"1335","title":"Option: vim.projects.project-nvim.setupOpts","content":"Option table to pass into the setup function of Project.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-projects-project-nvim-setupOpts"},{"id":"1336","title":"Option: vim.projects.project-nvim.setupOpts.detection_methods","content":"Detection methods to use","path":"options.html#option-vim-projects-project-nvim-setupOpts-detection_methods"},{"id":"1337","title":"Option: vim.projects.project-nvim.setupOpts.exclude_dirs","content":"Directories to exclude from project root search","path":"options.html#option-vim-projects-project-nvim-setupOpts-exclude_dirs"},{"id":"1338","title":"Option: vim.projects.project-nvim.setupOpts.lsp_ignored","content":"LSP servers no ignore by name","path":"options.html#option-vim-projects-project-nvim-setupOpts-lsp_ignored"},{"id":"1339","title":"Option: vim.projects.project-nvim.setupOpts.manual_mode","content":"don't automatically change the root directory so the user has the option to manually do so using `:ProjectRoot` command","path":"options.html#option-vim-projects-project-nvim-setupOpts-manual_mode"},{"id":"1340","title":"Option: vim.projects.project-nvim.setupOpts.patterns","content":"Patterns to use for pattern detection method","path":"options.html#option-vim-projects-project-nvim-setupOpts-patterns"},{"id":"1341","title":"Option: vim.projects.project-nvim.setupOpts.scope_chdir","content":"What scope to change the directory","path":"options.html#option-vim-projects-project-nvim-setupOpts-scope_chdir"},{"id":"1342","title":"Option: vim.projects.project-nvim.setupOpts.show_hidden","content":"Show hidden files in telescope picker","path":"options.html#option-vim-projects-project-nvim-setupOpts-show_hidden"},{"id":"1343","title":"Option: vim.projects.project-nvim.setupOpts.silent_chdir","content":"Silently change directory when changing project","path":"options.html#option-vim-projects-project-nvim-setupOpts-silent_chdir"},{"id":"1344","title":"Option: vim.python3Packages","content":"List of python packages to install","path":"options.html#option-vim-python3Packages"},{"id":"1345","title":"Option: vim.repl.conjure.enable","content":"Whether to enable Conjure.","path":"options.html#option-vim-repl-conjure-enable"},{"id":"1346","title":"Option: vim.runner.run-nvim.enable","content":"Whether to enable run.nvim.","path":"options.html#option-vim-runner-run-nvim-enable"},{"id":"1347","title":"Option: vim.runner.run-nvim.mappings.run","content":"Run cached","path":"options.html#option-vim-runner-run-nvim-mappings-run"},{"id":"1348","title":"Option: vim.runner.run-nvim.mappings.runCommand","content":"Run prompt","path":"options.html#option-vim-runner-run-nvim-mappings-runCommand"},{"id":"1349","title":"Option: vim.runner.run-nvim.mappings.runOverride","content":"Run and override","path":"options.html#option-vim-runner-run-nvim-mappings-runOverride"},{"id":"1350","title":"Option: vim.runner.run-nvim.setupOpts","content":"Option table to pass into the setup function of run.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-runner-run-nvim-setupOpts"},{"id":"1351","title":"Option: vim.searchCase","content":"Set the case sensitivity of search","path":"options.html#option-vim-searchCase"},{"id":"1352","title":"Option: vim.session.nvim-session-manager.enable","content":"Whether to enable nvim-session-manager: manage sessions like folders in VSCode.","path":"options.html#option-vim-session-nvim-session-manager-enable"},{"id":"1353","title":"Option: vim.session.nvim-session-manager.mappings.deleteSession","content":"Delete session","path":"options.html#option-vim-session-nvim-session-manager-mappings-deleteSession"},{"id":"1354","title":"Option: vim.session.nvim-session-manager.mappings.loadLastSession","content":"Load last session","path":"options.html#option-vim-session-nvim-session-manager-mappings-loadLastSession"},{"id":"1355","title":"Option: vim.session.nvim-session-manager.mappings.loadSession","content":"Load session","path":"options.html#option-vim-session-nvim-session-manager-mappings-loadSession"},{"id":"1356","title":"Option: vim.session.nvim-session-manager.mappings.saveCurrentSession","content":"Save current session","path":"options.html#option-vim-session-nvim-session-manager-mappings-saveCurrentSession"},{"id":"1357","title":"Option: vim.session.nvim-session-manager.setupOpts","content":"Option table to pass into the setup function of which-key\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts"},{"id":"1358","title":"Option: vim.session.nvim-session-manager.setupOpts.autoload_mode","content":"Define what to do when Neovim is started without arguments.\n\nTakes either one of `\"Disabled\"`, `\"CurrentDir\"`, `\"LastSession` in which case the value\nwill be inserted into `sm.AutoloadMode.<value>`, or an inline Lua value.\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-autoload_mode"},{"id":"1359","title":"Option: vim.session.nvim-session-manager.setupOpts.autosave_ignore_buftypes","content":"All buffers of these buffer types will be closed before the session is saved\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-autosave_ignore_buftypes"},{"id":"1360","title":"Option: vim.session.nvim-session-manager.setupOpts.autosave_ignore_dirs","content":"A list of directories where the session will not be autosaved","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-autosave_ignore_dirs"},{"id":"1361","title":"Option: vim.session.nvim-session-manager.setupOpts.autosave_ignore_filetypes","content":"All buffers of these file types will be closed before the session is saved\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-autosave_ignore_filetypes"},{"id":"1362","title":"Option: vim.session.nvim-session-manager.setupOpts.autosave_ignore_not_normal","content":"Plugin will not save a session when no buffers are opened, or all of them are\nnot writable or listed\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-autosave_ignore_not_normal"},{"id":"1363","title":"Option: vim.session.nvim-session-manager.setupOpts.autosave_last_session","content":"Automatically save last session on exit and on session switch\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-autosave_last_session"},{"id":"1364","title":"Option: vim.session.nvim-session-manager.setupOpts.autosave_only_in_session","content":"Always autosaves session. If `true`, only autosaves after a session is active\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-autosave_only_in_session"},{"id":"1365","title":"Option: vim.session.nvim-session-manager.setupOpts.colon_replacer","content":"The character to which the colon symbol will be replaced for session files\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-colon_replacer"},{"id":"1366","title":"Option: vim.session.nvim-session-manager.setupOpts.max_path_length","content":"Shorten the display path if length exceeds this threshold.\n\nUse `0` if don't want to shorten the path at all\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-max_path_length"},{"id":"1367","title":"Option: vim.session.nvim-session-manager.setupOpts.path_replacer","content":"The character to which the path separator will be replaced for session files\n","path":"options.html#option-vim-session-nvim-session-manager-setupOpts-path_replacer"},{"id":"1368","title":"Option: vim.session.nvim-session-manager.usePicker","content":"Whether we should use `dressing.nvim` to build a session picker UI\n","path":"options.html#option-vim-session-nvim-session-manager-usePicker"},{"id":"1369","title":"Option: vim.snippets.luasnip.enable","content":"Whether to enable luasnip.","path":"options.html#option-vim-snippets-luasnip-enable"},{"id":"1370","title":"Option: vim.snippets.luasnip.loaders","content":"Lua code used to load snippet providers.","path":"options.html#option-vim-snippets-luasnip-loaders"},{"id":"1371","title":"Option: vim.snippets.luasnip.providers","content":"The snippet provider packages.\n\n::: {.note}\nThese are simply appended to {option} `vim.startPlugins`.\n:::\n","path":"options.html#option-vim-snippets-luasnip-providers"},{"id":"1372","title":"Option: vim.snippets.luasnip.setupOpts","content":"Option table to pass into the setup function of LuaSnip\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-snippets-luasnip-setupOpts"},{"id":"1373","title":"Option: vim.snippets.luasnip.setupOpts.enable_autosnippets","content":"Whether to enable autosnippets.","path":"options.html#option-vim-snippets-luasnip-setupOpts-enable_autosnippets"},{"id":"1374","title":"Option: vim.spellcheck.enable","content":"Whether to enable Neovim's built-in spellchecking.","path":"options.html#option-vim-spellcheck-enable"},{"id":"1375","title":"Option: vim.spellcheck.extraSpellWords","content":"Additional words to be used for spellchecking. The names of each key will be\nused as the language code for the spell file. For example\n\n```nix\n\"en.utf-8\" = [ ... ];\n```\n\nwill result in `en.utf-8.add.spl` being added to Neovim's runtime in the\n{file}`spell` directory.\n\n::: {.warning}\nThe attribute keys must be in `\"<name>.<encoding>\"` format for Neovim to\ncompile your spellfiles without mangling the resulting file names. Please\nmake sure that you enter the correct value, as nvf does not do any kind of\ninternal checking. Please see {command}`:help mkspell` for more details.\n\nExample:\n\n```nix\n# \"en\" is the name, and \"utf-8\" is the encoding. For most use cases, utf-8\n# will be enough, however, you may change it to any encoding format Neovim\n# accepts, e.g., utf-16.\n\"en.utf-8\" = [\"nvf\" \"word_you_want_to_add\"];\n=> $out/spell/en-utf-8.add.spl\n```\n:::\n\nNote that while adding a new language, you will still need to add the name of\nthe language (e.g. \"en\") to the {option}`vim.spellcheck.languages` list by name\nin order to enable spellchecking for the language. By default only `\"en\"` is in\nthe list.\n","path":"options.html#option-vim-spellcheck-extraSpellWords"},{"id":"1376","title":"Option: vim.spellcheck.ignoredFiletypes","content":"A list of filetypes for which spellchecking will be disabled.\n\n::: {.tip}\nYou may use {command}`:echo &filetype` in Neovim to find out the\nfiletype for a specific buffer.\n:::\n","path":"options.html#option-vim-spellcheck-ignoredFiletypes"},{"id":"1377","title":"Option: vim.spellcheck.languages","content":"A list of languages that should be used for spellchecking.\n\nTo add your own language files, you may place your `spell` directory in either\n{file}`$XDG_CONFIG_HOME/nvf` or in a path that is included in the\n[additionalRuntimePaths](#opt-vim.additionalRuntimePaths) list provided by nvf.\n","path":"options.html#option-vim-spellcheck-languages"},{"id":"1378","title":"Option: vim.spellcheck.programmingWordlist.enable","content":"Whether to enable vim-dirtytalk, a wordlist for programmers containing\ncommon programming terms.\n\n::: {.note}\nEnabling this option will unconditionally set\n{option}`vim.spellcheck.enable` to true as vim-dirtytalk\ndepends on spellchecking having been set up.\n:::\n.","path":"options.html#option-vim-spellcheck-programmingWordlist-enable"},{"id":"1379","title":"Option: vim.startPlugins","content":"List of plugins to load on startup. This is used\ninternally to add plugins to Neovim's runtime.\n\nTo add additional plugins to your configuration, consider\nusing the [{option}`vim.extraPlugins`](#opt-vim.extraPlugins)\noption.\n","path":"options.html#option-vim-startPlugins"},{"id":"1380","title":"Option: vim.statusline.lualine.activeSection.a","content":"active config for: | (A) | B | C       X | Y | Z |","path":"options.html#option-vim-statusline-lualine-activeSection-a"},{"id":"1381","title":"Option: vim.statusline.lualine.activeSection.b","content":"active config for: | A | (B) | C       X | Y | Z |","path":"options.html#option-vim-statusline-lualine-activeSection-b"},{"id":"1382","title":"Option: vim.statusline.lualine.activeSection.c","content":"active config for: | A | B | (C)       X | Y | Z |","path":"options.html#option-vim-statusline-lualine-activeSection-c"},{"id":"1383","title":"Option: vim.statusline.lualine.activeSection.x","content":"active config for: | A | B | C       (X) | Y | Z |","path":"options.html#option-vim-statusline-lualine-activeSection-x"},{"id":"1384","title":"Option: vim.statusline.lualine.activeSection.y","content":"active config for: | A | B | C       X | (Y) | Z |","path":"options.html#option-vim-statusline-lualine-activeSection-y"},{"id":"1385","title":"Option: vim.statusline.lualine.activeSection.z","content":"active config for: | A | B | C       X | Y | (Z) |","path":"options.html#option-vim-statusline-lualine-activeSection-z"},{"id":"1386","title":"Option: vim.statusline.lualine.alwaysDivideMiddle","content":"Always divide middle section","path":"options.html#option-vim-statusline-lualine-alwaysDivideMiddle"},{"id":"1387","title":"Option: vim.statusline.lualine.componentSeparator.left","content":"Component separator for left side","path":"options.html#option-vim-statusline-lualine-componentSeparator-left"},{"id":"1388","title":"Option: vim.statusline.lualine.componentSeparator.right","content":"Component separator for right side","path":"options.html#option-vim-statusline-lualine-componentSeparator-right"},{"id":"1389","title":"Option: vim.statusline.lualine.disabledFiletypes","content":"Filetypes to disable lualine on","path":"options.html#option-vim-statusline-lualine-disabledFiletypes"},{"id":"1390","title":"Option: vim.statusline.lualine.enable","content":"Whether to enable lualine statusline plugin.","path":"options.html#option-vim-statusline-lualine-enable"},{"id":"1391","title":"Option: vim.statusline.lualine.extraActiveSection.a","content":"Extra entries for activeSection.a","path":"options.html#option-vim-statusline-lualine-extraActiveSection-a"},{"id":"1392","title":"Option: vim.statusline.lualine.extraActiveSection.b","content":"Extra entries for activeSection.b","path":"options.html#option-vim-statusline-lualine-extraActiveSection-b"},{"id":"1393","title":"Option: vim.statusline.lualine.extraActiveSection.c","content":"Extra entries for activeSection.c","path":"options.html#option-vim-statusline-lualine-extraActiveSection-c"},{"id":"1394","title":"Option: vim.statusline.lualine.extraActiveSection.x","content":"Extra entries for activeSection.x","path":"options.html#option-vim-statusline-lualine-extraActiveSection-x"},{"id":"1395","title":"Option: vim.statusline.lualine.extraActiveSection.y","content":"Extra entries for activeSection.y","path":"options.html#option-vim-statusline-lualine-extraActiveSection-y"},{"id":"1396","title":"Option: vim.statusline.lualine.extraActiveSection.z","content":"Extra entries for activeSection.z","path":"options.html#option-vim-statusline-lualine-extraActiveSection-z"},{"id":"1397","title":"Option: vim.statusline.lualine.extraInactiveSection.a","content":"Extra entries for inactiveSection.a","path":"options.html#option-vim-statusline-lualine-extraInactiveSection-a"},{"id":"1398","title":"Option: vim.statusline.lualine.extraInactiveSection.b","content":"Extra entries for inactiveSection.b","path":"options.html#option-vim-statusline-lualine-extraInactiveSection-b"},{"id":"1399","title":"Option: vim.statusline.lualine.extraInactiveSection.c","content":"Extra entries for inactiveSection.c","path":"options.html#option-vim-statusline-lualine-extraInactiveSection-c"},{"id":"1400","title":"Option: vim.statusline.lualine.extraInactiveSection.x","content":"Extra entries for inactiveSection.x","path":"options.html#option-vim-statusline-lualine-extraInactiveSection-x"},{"id":"1401","title":"Option: vim.statusline.lualine.extraInactiveSection.y","content":"Extra entries for inactiveSection.y","path":"options.html#option-vim-statusline-lualine-extraInactiveSection-y"},{"id":"1402","title":"Option: vim.statusline.lualine.extraInactiveSection.z","content":"Extra entries for inactiveSection.z","path":"options.html#option-vim-statusline-lualine-extraInactiveSection-z"},{"id":"1403","title":"Option: vim.statusline.lualine.globalStatus","content":"Enable global status for lualine","path":"options.html#option-vim-statusline-lualine-globalStatus"},{"id":"1404","title":"Option: vim.statusline.lualine.icons.enable","content":"Whether to enable icons for lualine.","path":"options.html#option-vim-statusline-lualine-icons-enable"},{"id":"1405","title":"Option: vim.statusline.lualine.ignoreFocus","content":"If current filetype is in this list it'll always be drawn as inactive statusline\nand the last window will be drawn as active statusline.\n","path":"options.html#option-vim-statusline-lualine-ignoreFocus"},{"id":"1406","title":"Option: vim.statusline.lualine.inactiveSection.a","content":"inactive config for: | (A) | B | C       X | Y | Z |","path":"options.html#option-vim-statusline-lualine-inactiveSection-a"},{"id":"1407","title":"Option: vim.statusline.lualine.inactiveSection.b","content":"inactive config for: | A | (B) | C       X | Y | Z |","path":"options.html#option-vim-statusline-lualine-inactiveSection-b"},{"id":"1408","title":"Option: vim.statusline.lualine.inactiveSection.c","content":"inactive config for: | A | B | (C)       X | Y | Z |","path":"options.html#option-vim-statusline-lualine-inactiveSection-c"},{"id":"1409","title":"Option: vim.statusline.lualine.inactiveSection.x","content":"inactive config for: | A | B | C       (X) | Y | Z |","path":"options.html#option-vim-statusline-lualine-inactiveSection-x"},{"id":"1410","title":"Option: vim.statusline.lualine.inactiveSection.y","content":"inactive config for: | A | B | C       X | (Y) | Z |","path":"options.html#option-vim-statusline-lualine-inactiveSection-y"},{"id":"1411","title":"Option: vim.statusline.lualine.inactiveSection.z","content":"inactive config for: | A | B | C       X | Y | (Z) |","path":"options.html#option-vim-statusline-lualine-inactiveSection-z"},{"id":"1412","title":"Option: vim.statusline.lualine.refresh.statusline","content":"Refresh rate for lualine","path":"options.html#option-vim-statusline-lualine-refresh-statusline"},{"id":"1413","title":"Option: vim.statusline.lualine.refresh.tabline","content":"Refresh rate for tabline","path":"options.html#option-vim-statusline-lualine-refresh-tabline"},{"id":"1414","title":"Option: vim.statusline.lualine.refresh.winbar","content":"Refresh rate for winbar","path":"options.html#option-vim-statusline-lualine-refresh-winbar"},{"id":"1415","title":"Option: vim.statusline.lualine.sectionSeparator.left","content":"Section separator for left side","path":"options.html#option-vim-statusline-lualine-sectionSeparator-left"},{"id":"1416","title":"Option: vim.statusline.lualine.sectionSeparator.right","content":"Section separator for right side","path":"options.html#option-vim-statusline-lualine-sectionSeparator-right"},{"id":"1417","title":"Option: vim.statusline.lualine.setupOpts","content":"Option table to pass into the setup function of Lualine\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-statusline-lualine-setupOpts"},{"id":"1418","title":"Option: vim.statusline.lualine.theme","content":"Theme for lualine","path":"options.html#option-vim-statusline-lualine-theme"},{"id":"1419","title":"Option: vim.syntaxHighlighting","content":"Enable syntax highlighting","path":"options.html#option-vim-syntaxHighlighting"},{"id":"1420","title":"Option: vim.tabline.nvimBufferline.enable","content":"Whether to enable neovim bufferline.","path":"options.html#option-vim-tabline-nvimBufferline-enable"},{"id":"1421","title":"Option: vim.tabline.nvimBufferline.mappings.closeCurrent","content":"Close buffer","path":"options.html#option-vim-tabline-nvimBufferline-mappings-closeCurrent"},{"id":"1422","title":"Option: vim.tabline.nvimBufferline.mappings.cycleNext","content":"Next buffer","path":"options.html#option-vim-tabline-nvimBufferline-mappings-cycleNext"},{"id":"1423","title":"Option: vim.tabline.nvimBufferline.mappings.cyclePrevious","content":"Previous buffer","path":"options.html#option-vim-tabline-nvimBufferline-mappings-cyclePrevious"},{"id":"1424","title":"Option: vim.tabline.nvimBufferline.mappings.moveNext","content":"Move next buffer","path":"options.html#option-vim-tabline-nvimBufferline-mappings-moveNext"},{"id":"1425","title":"Option: vim.tabline.nvimBufferline.mappings.movePrevious","content":"Move previous buffer","path":"options.html#option-vim-tabline-nvimBufferline-mappings-movePrevious"},{"id":"1426","title":"Option: vim.tabline.nvimBufferline.mappings.pick","content":"Pick buffer","path":"options.html#option-vim-tabline-nvimBufferline-mappings-pick"},{"id":"1427","title":"Option: vim.tabline.nvimBufferline.mappings.sortByDirectory","content":"Sort buffers by directory","path":"options.html#option-vim-tabline-nvimBufferline-mappings-sortByDirectory"},{"id":"1428","title":"Option: vim.tabline.nvimBufferline.mappings.sortByExtension","content":"Sort buffers by extension","path":"options.html#option-vim-tabline-nvimBufferline-mappings-sortByExtension"},{"id":"1429","title":"Option: vim.tabline.nvimBufferline.mappings.sortById","content":"Sort buffers by ID","path":"options.html#option-vim-tabline-nvimBufferline-mappings-sortById"},{"id":"1430","title":"Option: vim.tabline.nvimBufferline.setupOpts","content":"Option table to pass into the setup function of Bufferline-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts"},{"id":"1431","title":"Option: vim.tabline.nvimBufferline.setupOpts.highlights","content":"Overrides the highlight groups of bufferline.\n\nSee `:help bufferline-highlights`.\n","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-highlights"},{"id":"1432","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.always_show_bufferline","content":"Whether to always show bufferline","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-always_show_bufferline"},{"id":"1433","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.auto_toggle_bufferline","content":"Whether to auto toggle bufferline","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-auto_toggle_bufferline"},{"id":"1434","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.buffer_close_icon","content":"Icon for close button","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-buffer_close_icon"},{"id":"1435","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.close_command","content":"Command to run when closing a buffer","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-close_command"},{"id":"1436","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.close_icon","content":"Icon for close button","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-close_icon"},{"id":"1437","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.color_icons","content":"Whether or not to add filetype icon highlights","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-color_icons"},{"id":"1438","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.custom_filter","content":"Custom filter function for filtering out buffers.\n\n::: {.note}\nThis will be called a lot, so you are encouraged to keep it as\nshort and lightweight as possible unless you are fully aware\nof the performance implications.\n:::\n","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-custom_filter"},{"id":"1439","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.diagnostics","content":"Diagnostics provider to be used in buffer LSP indicators","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-diagnostics"},{"id":"1440","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.diagnostics_indicator","content":"Function to get the diagnostics indicator.\nThe function should return a string to be used as the indicator.\n\nCan be set to nil to keep the buffer name highlight, but delete the\nhighlighting.\n","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-diagnostics_indicator"},{"id":"1441","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.diagnostics_update_in_insert","content":"Whether to update diagnostics while in insert mode.\n\nSetting this to true has performance implications, but they may be\nnegligible depending on your setup. Set it to true if you know what\nyou are doing.\n","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-diagnostics_update_in_insert"},{"id":"1442","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.duplicates_across_groups","content":"Whether to consider duplicate paths in different groups as duplicates","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-duplicates_across_groups"},{"id":"1443","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.enforce_regular_tabs","content":"Whether to enforce regular tabs","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-enforce_regular_tabs"},{"id":"1444","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.get_element_icon","content":"The function bufferline uses to get the icon. Recommended to leave as default.","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-get_element_icon"},{"id":"1445","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.hover.delay","content":"Delay for hover, in ms","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-hover-delay"},{"id":"1446","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.hover.enabled","content":"Whether to enable hover.","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-hover-enabled"},{"id":"1447","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.hover.reveal","content":"Reveal hover window","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-hover-reveal"},{"id":"1448","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.indicator.icon","content":"The indicator icon to use for the current buffer.\n\n::: {.warning}\nThis **must** be omitted while style is not `icon`\n:::\n","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-indicator-icon"},{"id":"1449","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.indicator.style","content":"Style for indicator","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-indicator-style"},{"id":"1450","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.left_mouse_command","content":"Command to run when left clicking a buffer","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-left_mouse_command"},{"id":"1451","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.left_trunc_marker","content":"Icon for left truncation","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-left_trunc_marker"},{"id":"1452","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.max_name_length","content":"Max name length","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-max_name_length"},{"id":"1453","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.max_prefix_length","content":"Length of the prefix used when a buffer is de-duplicated","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-max_prefix_length"},{"id":"1454","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.middle_mouse_command","content":"Command to run when middle clicking a buffer","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-middle_mouse_command"},{"id":"1455","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.mode","content":"Mode to use for bufferline","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-mode"},{"id":"1456","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.modified_icon","content":"Icon for modified buffer","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-modified_icon"},{"id":"1457","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.move_wraps_at_ends","content":"Whether or not the move command \"wraps\" at the first or last position","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-move_wraps_at_ends"},{"id":"1458","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.name_formatter","content":"`name_formatter` can be used to change the buffer's label in the\nbufferline.\n\n::: {.note}\nSome names can/will break the bufferline so use this at your\ndiscretion knowing that it has some limitations that will\n**NOT** be fixed.\n:::\n","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-name_formatter"},{"id":"1459","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.numbers","content":"Whether or not to show buffer numbers","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-numbers"},{"id":"1460","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.offsets","content":"The windows to offset bufferline above, see `:help bufferline-offset`","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-offsets"},{"id":"1461","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.persist_buffer_sort","content":"Whether or not custom sorted buffers should persist","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-persist_buffer_sort"},{"id":"1462","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.right_mouse_command","content":"Command to run when right clicking a buffer","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-right_mouse_command"},{"id":"1463","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.right_trunc_marker","content":"Icon for right truncation","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-right_trunc_marker"},{"id":"1464","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.separator_style","content":"The type of separator used to separate buffers and tabs.\n\nEither one of the listed types, or a list of 2 characters for either side.\n","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-separator_style"},{"id":"1465","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.show_buffer_close_icons","content":"Whether or not to show buffer close icons","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-show_buffer_close_icons"},{"id":"1466","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.show_buffer_icons","content":"Whether or not to show buffer icons","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-show_buffer_icons"},{"id":"1467","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.show_close_icon","content":"Whether or not to show the close icon","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-show_close_icon"},{"id":"1468","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.show_duplicate_prefix","content":"Whether or not to show duplicate buffer prefixes","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-show_duplicate_prefix"},{"id":"1469","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.show_tab_indicators","content":"Whether or not to show tab indicators","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-show_tab_indicators"},{"id":"1470","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.sort_by","content":"Method to sort buffers by. Must be one of the supported values, or an inline Lua value.","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-sort_by"},{"id":"1471","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.style_preset","content":"The base style of bufferline","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-style_preset"},{"id":"1472","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.tab_size","content":"The size of the tabs in bufferline","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-tab_size"},{"id":"1473","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.themable","content":"Whether or not to allow highlight groups to be overridden.\n\nWhile false, bufferline.nvim sets highlights as default.\n","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-themable"},{"id":"1474","title":"Option: vim.tabline.nvimBufferline.setupOpts.options.truncate_names","content":"Truncate names","path":"options.html#option-vim-tabline-nvimBufferline-setupOpts-options-truncate_names"},{"id":"1475","title":"Option: vim.telescope.enable","content":"Whether to enable telescope.nvim: multi-purpose search and picker utility.","path":"options.html#option-vim-telescope-enable"},{"id":"1476","title":"Option: vim.telescope.extensions","content":"Individual extension configurations containing **name**, **packages** and **setup**\nfields to resolve dependencies, handle `load_extension` calls and add the `setup`\ntable into the `extensions` portion of Telescope's setup table.\n","path":"options.html#option-vim-telescope-extensions"},{"id":"1477","title":"Option: vim.telescope.extensions.*.name","content":"Name of the extension, will be used to load it with a `require`","path":"options.html#option-vim-telescope-extensions-*-name"},{"id":"1478","title":"Option: vim.telescope.extensions.*.packages","content":"Package or packages providing the Telescope extension to be loaded.","path":"options.html#option-vim-telescope-extensions-*-packages"},{"id":"1479","title":"Option: vim.telescope.extensions.*.setup","content":"Named attribute set to be inserted into Telescope's extensions table.","path":"options.html#option-vim-telescope-extensions-*-setup"},{"id":"1480","title":"Option: vim.telescope.mappings.buffers","content":"Buffers [Telescope]","path":"options.html#option-vim-telescope-mappings-buffers"},{"id":"1481","title":"Option: vim.telescope.mappings.diagnostics","content":"Diagnostics [Telescope]","path":"options.html#option-vim-telescope-mappings-diagnostics"},{"id":"1482","title":"Option: vim.telescope.mappings.findFiles","content":"Find files [Telescope]","path":"options.html#option-vim-telescope-mappings-findFiles"},{"id":"1483","title":"Option: vim.telescope.mappings.findProjects","content":"Find projects [Telescope]","path":"options.html#option-vim-telescope-mappings-findProjects"},{"id":"1484","title":"Option: vim.telescope.mappings.gitBranches","content":"Git branches [Telescope]","path":"options.html#option-vim-telescope-mappings-gitBranches"},{"id":"1485","title":"Option: vim.telescope.mappings.gitBufferCommits","content":"Git buffer commits [Telescope]","path":"options.html#option-vim-telescope-mappings-gitBufferCommits"},{"id":"1486","title":"Option: vim.telescope.mappings.gitCommits","content":"Git commits [Telescope]","path":"options.html#option-vim-telescope-mappings-gitCommits"},{"id":"1487","title":"Option: vim.telescope.mappings.gitStash","content":"Git stash [Telescope]","path":"options.html#option-vim-telescope-mappings-gitStash"},{"id":"1488","title":"Option: vim.telescope.mappings.gitStatus","content":"Git status [Telescope]","path":"options.html#option-vim-telescope-mappings-gitStatus"},{"id":"1489","title":"Option: vim.telescope.mappings.helpTags","content":"Help tags [Telescope]","path":"options.html#option-vim-telescope-mappings-helpTags"},{"id":"1490","title":"Option: vim.telescope.mappings.liveGrep","content":"Live grep [Telescope]","path":"options.html#option-vim-telescope-mappings-liveGrep"},{"id":"1491","title":"Option: vim.telescope.mappings.lspDefinitions","content":"LSP Definitions [Telescope]","path":"options.html#option-vim-telescope-mappings-lspDefinitions"},{"id":"1492","title":"Option: vim.telescope.mappings.lspDocumentSymbols","content":"LSP Document Symbols [Telescope]","path":"options.html#option-vim-telescope-mappings-lspDocumentSymbols"},{"id":"1493","title":"Option: vim.telescope.mappings.lspImplementations","content":"LSP Implementations [Telescope]","path":"options.html#option-vim-telescope-mappings-lspImplementations"},{"id":"1494","title":"Option: vim.telescope.mappings.lspReferences","content":"LSP References [Telescope]","path":"options.html#option-vim-telescope-mappings-lspReferences"},{"id":"1495","title":"Option: vim.telescope.mappings.lspTypeDefinitions","content":"LSP Type Definitions [Telescope]","path":"options.html#option-vim-telescope-mappings-lspTypeDefinitions"},{"id":"1496","title":"Option: vim.telescope.mappings.lspWorkspaceSymbols","content":"LSP Workspace Symbols [Telescope]","path":"options.html#option-vim-telescope-mappings-lspWorkspaceSymbols"},{"id":"1497","title":"Option: vim.telescope.mappings.open","content":"Open [Telescope]","path":"options.html#option-vim-telescope-mappings-open"},{"id":"1498","title":"Option: vim.telescope.mappings.resume","content":"Resume (previous search) [Telescope]","path":"options.html#option-vim-telescope-mappings-resume"},{"id":"1499","title":"Option: vim.telescope.mappings.treesitter","content":"Treesitter [Telescope]","path":"options.html#option-vim-telescope-mappings-treesitter"},{"id":"1500","title":"Option: vim.telescope.setupOpts","content":"Option table to pass into the setup function of Telescope\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-telescope-setupOpts"},{"id":"1501","title":"Option: vim.telescope.setupOpts.defaults.color_devicons","content":"Whether to enable colored devicons.","path":"options.html#option-vim-telescope-setupOpts-defaults-color_devicons"},{"id":"1502","title":"Option: vim.telescope.setupOpts.defaults.entry_prefix","content":"Prefix in front of each result entry. Current selection not included.","path":"options.html#option-vim-telescope-setupOpts-defaults-entry_prefix"},{"id":"1503","title":"Option: vim.telescope.setupOpts.defaults.extensions","content":"Attribute set containing per-extension settings for Telescope","path":"options.html#option-vim-telescope-setupOpts-defaults-extensions"},{"id":"1504","title":"Option: vim.telescope.setupOpts.defaults.file_ignore_patterns","content":"File patterns to omit from Telescope results","path":"options.html#option-vim-telescope-setupOpts-defaults-file_ignore_patterns"},{"id":"1505","title":"Option: vim.telescope.setupOpts.defaults.initial_mode","content":"Determines in which mode telescope starts.","path":"options.html#option-vim-telescope-setupOpts-defaults-initial_mode"},{"id":"1506","title":"Option: vim.telescope.setupOpts.defaults.layout_config","content":"Determines the default configuration values for layout strategies.\nSee `telescope.layout` for details of the configurations options for\neach strategy.\n","path":"options.html#option-vim-telescope-setupOpts-defaults-layout_config"},{"id":"1507","title":"Option: vim.telescope.setupOpts.defaults.layout_config.height","content":"How tall to make Telescope's entire layout","path":"options.html#option-vim-telescope-setupOpts-defaults-layout_config-height"},{"id":"1508","title":"Option: vim.telescope.setupOpts.defaults.layout_config.horizontal.preview_width","content":"Change the width of Telescope's preview window","path":"options.html#option-vim-telescope-setupOpts-defaults-layout_config-horizontal-preview_width"},{"id":"1509","title":"Option: vim.telescope.setupOpts.defaults.layout_config.horizontal.prompt_position","content":"Where to place prompt window","path":"options.html#option-vim-telescope-setupOpts-defaults-layout_config-horizontal-prompt_position"},{"id":"1510","title":"Option: vim.telescope.setupOpts.defaults.layout_config.preview_cutoff","content":"When lines are less than this value, the preview will be disabled","path":"options.html#option-vim-telescope-setupOpts-defaults-layout_config-preview_cutoff"},{"id":"1511","title":"Option: vim.telescope.setupOpts.defaults.layout_config.vertical.mirror","content":"Flip the location of the results/prompt and preview windows","path":"options.html#option-vim-telescope-setupOpts-defaults-layout_config-vertical-mirror"},{"id":"1512","title":"Option: vim.telescope.setupOpts.defaults.layout_config.width","content":"How wide to make Telescope's entire layout","path":"options.html#option-vim-telescope-setupOpts-defaults-layout_config-width"},{"id":"1513","title":"Option: vim.telescope.setupOpts.defaults.layout_strategy","content":"Determines the default layout of Telescope pickers. See `:help telescope.layout`.","path":"options.html#option-vim-telescope-setupOpts-defaults-layout_strategy"},{"id":"1514","title":"Option: vim.telescope.setupOpts.defaults.path_display","content":"Determines how file paths are displayed.","path":"options.html#option-vim-telescope-setupOpts-defaults-path_display"},{"id":"1515","title":"Option: vim.telescope.setupOpts.defaults.pickers.find_command","content":"Command to use for finding files. If using an executable from {env}`PATH` then you must\nmake sure that the package is available in [](#opt-vim.extraPackages).\n","path":"options.html#option-vim-telescope-setupOpts-defaults-pickers-find_command"},{"id":"1516","title":"Option: vim.telescope.setupOpts.defaults.prompt_prefix","content":"Shown in front of Telescope's prompt","path":"options.html#option-vim-telescope-setupOpts-defaults-prompt_prefix"},{"id":"1517","title":"Option: vim.telescope.setupOpts.defaults.selection_caret","content":"Character(s) to show in front of the current selection","path":"options.html#option-vim-telescope-setupOpts-defaults-selection_caret"},{"id":"1518","title":"Option: vim.telescope.setupOpts.defaults.selection_strategy","content":"Determines how the cursor acts after each sort iteration.","path":"options.html#option-vim-telescope-setupOpts-defaults-selection_strategy"},{"id":"1519","title":"Option: vim.telescope.setupOpts.defaults.set_env","content":"Set an environment for term_previewer","path":"options.html#option-vim-telescope-setupOpts-defaults-set_env"},{"id":"1520","title":"Option: vim.telescope.setupOpts.defaults.sorting_strategy","content":"Determines the direction \"better\" results are sorted towards.","path":"options.html#option-vim-telescope-setupOpts-defaults-sorting_strategy"},{"id":"1521","title":"Option: vim.telescope.setupOpts.defaults.vimgrep_arguments","content":"Defines the command that will be used for `live_grep` and `grep_string` pickers.\nMake sure that color is set to `never` because telescope does not yet interpret color codes.\n","path":"options.html#option-vim-telescope-setupOpts-defaults-vimgrep_arguments"},{"id":"1522","title":"Option: vim.telescope.setupOpts.defaults.winblend","content":"Pseudo-transparency of keymap hints floating window","path":"options.html#option-vim-telescope-setupOpts-defaults-winblend"},{"id":"1523","title":"Option: vim.telescope.setupOpts.pickers.find_files.find_command","content":"cmd to use for finding files","path":"options.html#option-vim-telescope-setupOpts-pickers-find_files-find_command"},{"id":"1524","title":"Option: vim.terminal.toggleterm.enable","content":"Whether to enable toggleterm as a replacement to built-in terminal command.","path":"options.html#option-vim-terminal-toggleterm-enable"},{"id":"1525","title":"Option: vim.terminal.toggleterm.lazygit.direction","content":"Direction of the lazygit window","path":"options.html#option-vim-terminal-toggleterm-lazygit-direction"},{"id":"1526","title":"Option: vim.terminal.toggleterm.lazygit.enable","content":"Whether to enable LazyGit integration.","path":"options.html#option-vim-terminal-toggleterm-lazygit-enable"},{"id":"1527","title":"Option: vim.terminal.toggleterm.lazygit.mappings.open","content":"Open lazygit [toggleterm]","path":"options.html#option-vim-terminal-toggleterm-lazygit-mappings-open"},{"id":"1528","title":"Option: vim.terminal.toggleterm.lazygit.package","content":"The package that should be used for lazygit. Setting it to null will attempt to use lazygit from your PATH","path":"options.html#option-vim-terminal-toggleterm-lazygit-package"},{"id":"1529","title":"Option: vim.terminal.toggleterm.mappings.open","content":"The keymapping to open toggleterm","path":"options.html#option-vim-terminal-toggleterm-mappings-open"},{"id":"1530","title":"Option: vim.terminal.toggleterm.setupOpts","content":"Option table to pass into the setup function of ToggleTerm\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-terminal-toggleterm-setupOpts"},{"id":"1531","title":"Option: vim.terminal.toggleterm.setupOpts.direction","content":"Direction of the terminal","path":"options.html#option-vim-terminal-toggleterm-setupOpts-direction"},{"id":"1532","title":"Option: vim.terminal.toggleterm.setupOpts.enable_winbar","content":"Enable winbar","path":"options.html#option-vim-terminal-toggleterm-setupOpts-enable_winbar"},{"id":"1533","title":"Option: vim.terminal.toggleterm.setupOpts.size","content":"Number or lua function which is passed to the current terminal","path":"options.html#option-vim-terminal-toggleterm-setupOpts-size"},{"id":"1534","title":"Option: vim.terminal.toggleterm.setupOpts.winbar.enabled","content":"Whether to enable winbar in terminal.","path":"options.html#option-vim-terminal-toggleterm-setupOpts-winbar-enabled"},{"id":"1535","title":"Option: vim.terminal.toggleterm.setupOpts.winbar.name_formatter","content":"Winbar formatter function.","path":"options.html#option-vim-terminal-toggleterm-setupOpts-winbar-name_formatter"},{"id":"1536","title":"Option: vim.theme.base16-colors.base00","content":"The base00 color to use","path":"options.html#option-vim-theme-base16-colors-base00"},{"id":"1537","title":"Option: vim.theme.base16-colors.base01","content":"The base01 color to use","path":"options.html#option-vim-theme-base16-colors-base01"},{"id":"1538","title":"Option: vim.theme.base16-colors.base02","content":"The base02 color to use","path":"options.html#option-vim-theme-base16-colors-base02"},{"id":"1539","title":"Option: vim.theme.base16-colors.base03","content":"The base03 color to use","path":"options.html#option-vim-theme-base16-colors-base03"},{"id":"1540","title":"Option: vim.theme.base16-colors.base04","content":"The base04 color to use","path":"options.html#option-vim-theme-base16-colors-base04"},{"id":"1541","title":"Option: vim.theme.base16-colors.base05","content":"The base05 color to use","path":"options.html#option-vim-theme-base16-colors-base05"},{"id":"1542","title":"Option: vim.theme.base16-colors.base06","content":"The base06 color to use","path":"options.html#option-vim-theme-base16-colors-base06"},{"id":"1543","title":"Option: vim.theme.base16-colors.base07","content":"The base07 color to use","path":"options.html#option-vim-theme-base16-colors-base07"},{"id":"1544","title":"Option: vim.theme.base16-colors.base08","content":"The base08 color to use","path":"options.html#option-vim-theme-base16-colors-base08"},{"id":"1545","title":"Option: vim.theme.base16-colors.base09","content":"The base09 color to use","path":"options.html#option-vim-theme-base16-colors-base09"},{"id":"1546","title":"Option: vim.theme.base16-colors.base0A","content":"The base0A color to use","path":"options.html#option-vim-theme-base16-colors-base0A"},{"id":"1547","title":"Option: vim.theme.base16-colors.base0B","content":"The base0B color to use","path":"options.html#option-vim-theme-base16-colors-base0B"},{"id":"1548","title":"Option: vim.theme.base16-colors.base0C","content":"The base0C color to use","path":"options.html#option-vim-theme-base16-colors-base0C"},{"id":"1549","title":"Option: vim.theme.base16-colors.base0D","content":"The base0D color to use","path":"options.html#option-vim-theme-base16-colors-base0D"},{"id":"1550","title":"Option: vim.theme.base16-colors.base0E","content":"The base0E color to use","path":"options.html#option-vim-theme-base16-colors-base0E"},{"id":"1551","title":"Option: vim.theme.base16-colors.base0F","content":"The base0F color to use","path":"options.html#option-vim-theme-base16-colors-base0F"},{"id":"1552","title":"Option: vim.theme.enable","content":"Enable theming","path":"options.html#option-vim-theme-enable"},{"id":"1553","title":"Option: vim.theme.extraConfig","content":"Additional lua configuration to add before setup","path":"options.html#option-vim-theme-extraConfig"},{"id":"1554","title":"Option: vim.theme.name","content":"Supported themes can be found in {file}`supportedThemes.nix`.\nSetting the theme to \"base16\" enables base16 theming and\nrequires all of the colors in {option}`vim.theme.base16-colors` to be set.\n","path":"options.html#option-vim-theme-name"},{"id":"1555","title":"Option: vim.theme.style","content":"Specific style for theme if it supports it","path":"options.html#option-vim-theme-style"},{"id":"1556","title":"Option: vim.theme.transparent","content":"Whether or not transparency should be enabled. Has no effect for themes that do not support transparency","path":"options.html#option-vim-theme-transparent"},{"id":"1557","title":"Option: vim.treesitter.addDefaultGrammars","content":"Whether to add the default grammars to the list of grammars\nto install.\n\nThis option is only relevant if treesitter has been enabled.\n","path":"options.html#option-vim-treesitter-addDefaultGrammars"},{"id":"1558","title":"Option: vim.treesitter.autotagHtml","content":"Whether to enable autoclose and rename html tag.","path":"options.html#option-vim-treesitter-autotagHtml"},{"id":"1559","title":"Option: vim.treesitter.context.enable","content":"Whether to enable context of current buffer contents [nvim-treesitter-context] .","path":"options.html#option-vim-treesitter-context-enable"},{"id":"1560","title":"Option: vim.treesitter.context.setupOpts","content":"Option table to pass into the setup function of treesitter-context\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-treesitter-context-setupOpts"},{"id":"1561","title":"Option: vim.treesitter.context.setupOpts.line_numbers","content":"Whether to display line numbers in current context","path":"options.html#option-vim-treesitter-context-setupOpts-line_numbers"},{"id":"1562","title":"Option: vim.treesitter.context.setupOpts.max_lines","content":"How many lines the window should span.\n\nValues >= 0 mean there will be no limit.\n","path":"options.html#option-vim-treesitter-context-setupOpts-max_lines"},{"id":"1563","title":"Option: vim.treesitter.context.setupOpts.min_window_height","content":"Minimum editor window height to enable context.\n\nValues >= 0 mean there will be no limit.\n","path":"options.html#option-vim-treesitter-context-setupOpts-min_window_height"},{"id":"1564","title":"Option: vim.treesitter.context.setupOpts.mode","content":"Line used to calculate context.","path":"options.html#option-vim-treesitter-context-setupOpts-mode"},{"id":"1565","title":"Option: vim.treesitter.context.setupOpts.multiline_threshold","content":"Maximum number of lines to collapse for a single context line.","path":"options.html#option-vim-treesitter-context-setupOpts-multiline_threshold"},{"id":"1566","title":"Option: vim.treesitter.context.setupOpts.separator","content":"Separator between context and content. This option should\nbe a single character string, like '-'.\n\nWhen separator is set, the context will only show up when\nthere are at least 2 lines above cursorline.\n","path":"options.html#option-vim-treesitter-context-setupOpts-separator"},{"id":"1567","title":"Option: vim.treesitter.context.setupOpts.trim_scope","content":"Which context lines to discard if\n[](#opt-vim.treesitter.context.setupOpts.max_lines) is exceeded.\n","path":"options.html#option-vim-treesitter-context-setupOpts-trim_scope"},{"id":"1568","title":"Option: vim.treesitter.context.setupOpts.zindex","content":"The Z-index of the context window.","path":"options.html#option-vim-treesitter-context-setupOpts-zindex"},{"id":"1569","title":"Option: vim.treesitter.enable","content":"Whether to enable treesitter, also enabled automatically through language options.","path":"options.html#option-vim-treesitter-enable"},{"id":"1570","title":"Option: vim.treesitter.fold","content":"Whether to enable fold with treesitter.","path":"options.html#option-vim-treesitter-fold"},{"id":"1571","title":"Option: vim.treesitter.grammars","content":"List of treesitter grammars to install. For grammars to be installed properly,\nyou must use grammars from `pkgs.vimPlugins.nvim-treesitter.builtGrammars`.\n\nFor languages already supported by nvf, you may use\n{option}`vim.language.<lang>.treesitter` options, which will automatically add\nthe required grammars to this.\n","path":"options.html#option-vim-treesitter-grammars"},{"id":"1572","title":"Option: vim.treesitter.highlight.additionalVimRegexHighlighting","content":"Takes either a boolean or a list of languages.\n\nSetting this to true will run `:h syntax` and tree-sitter at the same time.\nYou may this to `true` if you depend on 'syntax' being enabled (like for\nindentation).\n\n::: {.note}\nUsing this option may slow down your editor, and you may see some duplicate\nhighlights.\n:::\n","path":"options.html#option-vim-treesitter-highlight-additionalVimRegexHighlighting"},{"id":"1573","title":"Option: vim.treesitter.highlight.disable","content":"List of treesitter grammars to disable highlighting for.\n\nThis option can be either a list, in which case it will be\nconverted to a Lua table containing grammars to disable\nhighlighting for, or a string containing a **lua function**\nthat will be read as is.\n\n::: {.warning}\nA comma will be added at the end of your function, so you\ndo not need to add it yourself. Doing so will cause in\nsyntax errors within your Neovim configuration.\n:::\n","path":"options.html#option-vim-treesitter-highlight-disable"},{"id":"1574","title":"Option: vim.treesitter.highlight.enable","content":"Whether to enable highlighting with treesitter.","path":"options.html#option-vim-treesitter-highlight-enable"},{"id":"1575","title":"Option: vim.treesitter.incrementalSelection.disable","content":"List of treesitter grammars to disable incremental selection\nfor.\n\nThis option can be either a list, in which case it will be\nconverted to a Lua table containing grammars to disable\nindentation for, or a string containing a **lua function**\nthat will be read as is.\n\n::: {.warning}\nA comma will be added at the end of your function, so you\ndo not need to add it yourself. Doing so will cause in\nsyntax errors within your Neovim configuration.\n:::\n","path":"options.html#option-vim-treesitter-incrementalSelection-disable"},{"id":"1576","title":"Option: vim.treesitter.incrementalSelection.enable","content":"Whether to enable incremental selection with treesitter.","path":"options.html#option-vim-treesitter-incrementalSelection-enable"},{"id":"1577","title":"Option: vim.treesitter.indent.disable","content":"List of treesitter grammars to disable indentation for.\n\nThis option can be either a list, in which case it will be\nconverted to a Lua table containing grammars to disable\nindentation for, or a string containing a **lua function**\nthat will be read as is.\n\n::: {.warning}\nA comma will be added at the end of your function, so you\ndo not need to add it yourself. Doing so will cause in\nsyntax errors within your Neovim configuration.\n:::\n","path":"options.html#option-vim-treesitter-indent-disable"},{"id":"1578","title":"Option: vim.treesitter.indent.enable","content":"Whether to enable indentation with treesitter.","path":"options.html#option-vim-treesitter-indent-enable"},{"id":"1579","title":"Option: vim.treesitter.mappings.incrementalSelection.decrementByNode","content":"Decrement selection by node [treesitter]","path":"options.html#option-vim-treesitter-mappings-incrementalSelection-decrementByNode"},{"id":"1580","title":"Option: vim.treesitter.mappings.incrementalSelection.incrementByNode","content":"Increment selection by node [treesitter]","path":"options.html#option-vim-treesitter-mappings-incrementalSelection-incrementByNode"},{"id":"1581","title":"Option: vim.treesitter.mappings.incrementalSelection.incrementByScope","content":"Increment selection by scope [treesitter]","path":"options.html#option-vim-treesitter-mappings-incrementalSelection-incrementByScope"},{"id":"1582","title":"Option: vim.treesitter.mappings.incrementalSelection.init","content":"Init selection [treesitter]","path":"options.html#option-vim-treesitter-mappings-incrementalSelection-init"},{"id":"1583","title":"Option: vim.treesitter.textobjects.enable","content":"Whether to enable Treesitter textobjects.","path":"options.html#option-vim-treesitter-textobjects-enable"},{"id":"1584","title":"Option: vim.treesitter.textobjects.setupOpts","content":"Option table to pass into the setup function of treesitter-textobjects\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-treesitter-textobjects-setupOpts"},{"id":"1585","title":"Option: vim.ui.borders.enable","content":"Whether to enable visible borders for most windows.","path":"options.html#option-vim-ui-borders-enable"},{"id":"1586","title":"Option: vim.ui.borders.globalStyle","content":"The global border style to use.\n\nIf a list is given, it should have a length of eight or any divisor of\neight. The array will specify the eight chars building up the border in\na clockwise fashion starting with the top-left corner. You can specify\na different highlight group for each character by passing a\n[char, \"YourHighlightGroup\"] instead\n","path":"options.html#option-vim-ui-borders-globalStyle"},{"id":"1587","title":"Option: vim.ui.borders.plugins.fastaction.enable","content":"Whether to enable borders for the fastaction plugin.","path":"options.html#option-vim-ui-borders-plugins-fastaction-enable"},{"id":"1588","title":"Option: vim.ui.borders.plugins.fastaction.style","content":"The border style to use for the fastaction plugin","path":"options.html#option-vim-ui-borders-plugins-fastaction-style"},{"id":"1589","title":"Option: vim.ui.borders.plugins.lsp-signature.enable","content":"Whether to enable borders for the lsp-signature plugin.","path":"options.html#option-vim-ui-borders-plugins-lsp-signature-enable"},{"id":"1590","title":"Option: vim.ui.borders.plugins.lsp-signature.style","content":"The border style to use for the lsp-signature plugin","path":"options.html#option-vim-ui-borders-plugins-lsp-signature-style"},{"id":"1591","title":"Option: vim.ui.borders.plugins.lspsaga.enable","content":"Whether to enable borders for the lspsaga plugin.","path":"options.html#option-vim-ui-borders-plugins-lspsaga-enable"},{"id":"1592","title":"Option: vim.ui.borders.plugins.lspsaga.style","content":"The border style to use for the lspsaga plugin","path":"options.html#option-vim-ui-borders-plugins-lspsaga-style"},{"id":"1593","title":"Option: vim.ui.borders.plugins.nvim-cmp.enable","content":"Whether to enable borders for the nvim-cmp plugin.","path":"options.html#option-vim-ui-borders-plugins-nvim-cmp-enable"},{"id":"1594","title":"Option: vim.ui.borders.plugins.nvim-cmp.style","content":"The border style to use for the nvim-cmp plugin","path":"options.html#option-vim-ui-borders-plugins-nvim-cmp-style"},{"id":"1595","title":"Option: vim.ui.borders.plugins.which-key.enable","content":"Whether to enable borders for the which-key plugin.","path":"options.html#option-vim-ui-borders-plugins-which-key-enable"},{"id":"1596","title":"Option: vim.ui.borders.plugins.which-key.style","content":"The border style to use for the which-key plugin","path":"options.html#option-vim-ui-borders-plugins-which-key-style"},{"id":"1597","title":"Option: vim.ui.breadcrumbs.enable","content":"Whether to enable breadcrumbs.","path":"options.html#option-vim-ui-breadcrumbs-enable"},{"id":"1598","title":"Option: vim.ui.breadcrumbs.lualine.winbar.alwaysRender","content":"Whether to always display the breadcrumbs component\non winbar.\n\n::: {.note}\nThis will pass `draw_empty` to the `nvim_navic` winbar\ncomponent, which causes the component to be drawn even\nif it's empty.\n:::\n","path":"options.html#option-vim-ui-breadcrumbs-lualine-winbar-alwaysRender"},{"id":"1599","title":"Option: vim.ui.breadcrumbs.lualine.winbar.enable","content":"Whether to automatically configure a winbar component for\nLualine on the Winbar section.\n\n::: {.note}\nThis is **set to `true` by default**, which means nvim-navic\nwill occupy `winbar.lualine_c` for the breadcrumbs feature\nunless this option is set to `false`.\n:::\n","path":"options.html#option-vim-ui-breadcrumbs-lualine-winbar-enable"},{"id":"1600","title":"Option: vim.ui.breadcrumbs.navbuddy.enable","content":"Whether to enable navbuddy LSP helper UI. Enabling this option automatically loads and enables nvim-navic.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-enable"},{"id":"1601","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.appendName","content":"Insert at the end of name.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-appendName"},{"id":"1602","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.appendScope","content":"Insert at the end of scope.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-appendScope"},{"id":"1603","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.children","content":"Navigate to the child node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-children"},{"id":"1604","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.close","content":"Close and return the cursor to its original location.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-close"},{"id":"1605","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.comment","content":"Comment the node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-comment"},{"id":"1606","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.delete","content":"Delete the node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-delete"},{"id":"1607","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.foldCreate","content":"Create a new fold of the node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-foldCreate"},{"id":"1608","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.foldDelete","content":"Delete the current fold of the node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-foldDelete"},{"id":"1609","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.help","content":"Open the mappings help window.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-help"},{"id":"1610","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.hsplit","content":"Open the node in a horizontal split.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-hsplit"},{"id":"1611","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.insertName","content":"Insert at the start of name.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-insertName"},{"id":"1612","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.insertScope","content":"Insert at the start of scope.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-insertScope"},{"id":"1613","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.moveDown","content":"Move the node down.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-moveDown"},{"id":"1614","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.moveUp","content":"Move the node up.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-moveUp"},{"id":"1615","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.nextSibling","content":"Navigate to the next sibling node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-nextSibling"},{"id":"1616","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.parent","content":"Navigate to the parent node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-parent"},{"id":"1617","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.previousSibling","content":"Navigate to the previous sibling node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-previousSibling"},{"id":"1618","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.rename","content":"Rename the node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-rename"},{"id":"1619","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.root","content":"Navigate to the root node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-root"},{"id":"1620","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.select","content":"Goto the node.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-select"},{"id":"1621","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.telescope","content":"Start fuzzy finder at the current level.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-telescope"},{"id":"1622","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.togglePreview","content":"Toggle the preview.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-togglePreview"},{"id":"1623","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.visualName","content":"Select the name visually.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-visualName"},{"id":"1624","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.visualScope","content":"Select the scope visually.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-visualScope"},{"id":"1625","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.vsplit","content":"Open the node in a vertical split.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-vsplit"},{"id":"1626","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.yankName","content":"Yank the name to system clipboard.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-yankName"},{"id":"1627","title":"Option: vim.ui.breadcrumbs.navbuddy.mappings.yankScope","content":"Yank the scope to system clipboard.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-mappings-yankScope"},{"id":"1628","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts","content":"Option table to pass into the setup function of navbuddy\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts"},{"id":"1629","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Array","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Array"},{"id":"1630","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Boolean","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Boolean"},{"id":"1631","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Class","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Class"},{"id":"1632","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Constant","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Constant"},{"id":"1633","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Constructor","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Constructor"},{"id":"1634","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Enum","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Enum"},{"id":"1635","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.EnumMember","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-EnumMember"},{"id":"1636","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Event","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Event"},{"id":"1637","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Field","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Field"},{"id":"1638","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.File","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-File"},{"id":"1639","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Function","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Function"},{"id":"1640","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Interface","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Interface"},{"id":"1641","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Key","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Key"},{"id":"1642","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Method","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Method"},{"id":"1643","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Module","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Module"},{"id":"1644","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Namespace","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Namespace"},{"id":"1645","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Null","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Null"},{"id":"1646","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Number","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Number"},{"id":"1647","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Object","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Object"},{"id":"1648","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Operator","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Operator"},{"id":"1649","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Package","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Package"},{"id":"1650","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Property","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Property"},{"id":"1651","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.String","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-String"},{"id":"1652","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Struct","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Struct"},{"id":"1653","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.TypeParameter","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-TypeParameter"},{"id":"1654","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.icons.Variable","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-icons-Variable"},{"id":"1655","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.lsp.auto_attach","content":"Whether to attach to LSP server manually.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-lsp-auto_attach"},{"id":"1656","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.lsp.preference","content":"The preference list ranking LSP servers.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-lsp-preference"},{"id":"1657","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.node_markers.enable","content":"Whether to enable node markers.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-node_markers-enable"},{"id":"1658","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.node_markers.icons.branch","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-node_markers-icons-branch"},{"id":"1659","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.node_markers.icons.leaf","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-node_markers-icons-leaf"},{"id":"1660","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.node_markers.icons.leaf_selected","content":"","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-node_markers-icons-leaf_selected"},{"id":"1661","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.source_buffer.followNode","content":"Whether to keep the current node in focus in the source buffer.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-source_buffer-followNode"},{"id":"1662","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.source_buffer.highlight","content":"Whether to highlight the currently focused node in the source buffer.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-source_buffer-highlight"},{"id":"1663","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.source_buffer.reorient","content":"The mode for reorienting the source buffer after moving nodes.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-source_buffer-reorient"},{"id":"1664","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.source_buffer.scrolloff","content":"The scrolloff value in the source buffer when Navbuddy is open.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-source_buffer-scrolloff"},{"id":"1665","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.useDefaultMappings","content":"Add the default Navbuddy keybindings in addition to the keybinding added by this module.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-useDefaultMappings"},{"id":"1666","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.window.border","content":"The border style to use.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-window-border"},{"id":"1667","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.window.scrolloff","content":"The scrolloff value within a navbuddy window.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-window-scrolloff"},{"id":"1668","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.window.sections.left.border","content":"The border style to use for the left section of the Navbuddy UI.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-window-sections-left-border"},{"id":"1669","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.window.sections.mid.border","content":"The border style to use for the middle section of the Navbuddy UI.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-window-sections-mid-border"},{"id":"1670","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.window.sections.right.border","content":"The border style to use for the right section of the Navbuddy UI.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-window-sections-right-border"},{"id":"1671","title":"Option: vim.ui.breadcrumbs.navbuddy.setupOpts.window.sections.right.preview","content":"The display mode of the preview on the right section.","path":"options.html#option-vim-ui-breadcrumbs-navbuddy-setupOpts-window-sections-right-preview"},{"id":"1672","title":"Option: vim.ui.breadcrumbs.source","content":"The source to be used for breadcrumbs component. Null means no breadcrumbs.\n","path":"options.html#option-vim-ui-breadcrumbs-source"},{"id":"1673","title":"Option: vim.ui.colorizer.enable","content":"Whether to enable color highlighting [nvim-colorizer.lua].","path":"options.html#option-vim-ui-colorizer-enable"},{"id":"1674","title":"Option: vim.ui.colorizer.setupOpts","content":"Option table to pass into the setup function of colorizer\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-ui-colorizer-setupOpts"},{"id":"1675","title":"Option: vim.ui.colorizer.setupOpts.filetypes","content":"Filetypes to enable on and their option overrides.\n\n`\"*\"` means enable on all filetypes. Filetypes prefixed with `\"!\"` are disabled.\n","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes"},{"id":"1676","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.AARRGGBB","content":"Colorize 0xAARRGGBB hex codes","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-AARRGGBB"},{"id":"1677","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.RGB","content":"Colorize #RGB hex codes","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-RGB"},{"id":"1678","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.RRGGBB","content":"Colorize #RRGGBB hex codes","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-RRGGBB"},{"id":"1679","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.RRGGBBAA","content":"Colorize #RRGGBBAA hex codes","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-RRGGBBAA"},{"id":"1680","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.always_update","content":"Update color values even if buffer is not focused. Example use: cmp_menu, cmp_docs","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-always_update"},{"id":"1681","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.css","content":"Enable all CSS features: rgb_fn, hsl_fn, names, RGB, RRGGBB","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-css"},{"id":"1682","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.css_fn","content":"Enable all CSS *functions*: rgb_fn, hsl_fn","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-css_fn"},{"id":"1683","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.hsl_fn","content":"Colorize CSS hsl() and hsla() functions","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-hsl_fn"},{"id":"1684","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.mode","content":"Set the display mode","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-mode"},{"id":"1685","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.names","content":"Colorize \"Name\" codes like Blue","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-names"},{"id":"1686","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.rgb_fn","content":"Colorize CSS rgb() and rgba() functions","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-rgb_fn"},{"id":"1687","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.sass","content":"Enable sass colors","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-sass"},{"id":"1688","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.tailwind","content":"Enable tailwind colors","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-tailwind"},{"id":"1689","title":"Option: vim.ui.colorizer.setupOpts.filetypes.<name>.virtualtext","content":"String to display as virtualtext","path":"options.html#option-vim-ui-colorizer-setupOpts-filetypes-<name>-virtualtext"},{"id":"1690","title":"Option: vim.ui.colorizer.setupOpts.user_default_options","content":"`user_default_options` is the second parameter to nvim-colorizer's setup function.\n\nAnything set here is the inverse of the previous setup configuration.\n","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options"},{"id":"1691","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.AARRGGBB","content":"Colorize 0xAARRGGBB hex codes","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-AARRGGBB"},{"id":"1692","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.RGB","content":"Colorize #RGB hex codes","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-RGB"},{"id":"1693","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.RRGGBB","content":"Colorize #RRGGBB hex codes","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-RRGGBB"},{"id":"1694","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.RRGGBBAA","content":"Colorize #RRGGBBAA hex codes","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-RRGGBBAA"},{"id":"1695","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.always_update","content":"Update color values even if buffer is not focused. Example use: cmp_menu, cmp_docs","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-always_update"},{"id":"1696","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.css","content":"Enable all CSS features: rgb_fn, hsl_fn, names, RGB, RRGGBB","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-css"},{"id":"1697","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.css_fn","content":"Enable all CSS *functions*: rgb_fn, hsl_fn","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-css_fn"},{"id":"1698","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.hsl_fn","content":"Colorize CSS hsl() and hsla() functions","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-hsl_fn"},{"id":"1699","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.mode","content":"Set the display mode","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-mode"},{"id":"1700","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.names","content":"Colorize \"Name\" codes like Blue","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-names"},{"id":"1701","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.rgb_fn","content":"Colorize CSS rgb() and rgba() functions","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-rgb_fn"},{"id":"1702","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.sass","content":"Enable sass colors","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-sass"},{"id":"1703","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.tailwind","content":"Enable tailwind colors","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-tailwind"},{"id":"1704","title":"Option: vim.ui.colorizer.setupOpts.user_default_options.virtualtext","content":"String to display as virtualtext","path":"options.html#option-vim-ui-colorizer-setupOpts-user_default_options-virtualtext"},{"id":"1705","title":"Option: vim.ui.fastaction.enable","content":"Whether to enable overriding vim.ui.select with fastaction.nvim.","path":"options.html#option-vim-ui-fastaction-enable"},{"id":"1706","title":"Option: vim.ui.fastaction.setupOpts","content":"Option table to pass into the setup function of fastaction\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-ui-fastaction-setupOpts"},{"id":"1707","title":"Option: vim.ui.illuminate.enable","content":"Whether to enable automatically highlight other uses of the word under the cursor [vim-illuminate]\n.","path":"options.html#option-vim-ui-illuminate-enable"},{"id":"1708","title":"Option: vim.ui.illuminate.setupOpts","content":"Option table to pass into the setup function of vim-illuminate\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-ui-illuminate-setupOpts"},{"id":"1709","title":"Option: vim.ui.illuminate.setupOpts.filetypes_denylist","content":"Filetypes to not illuminate, this overrides `filetypes_allowlist`","path":"options.html#option-vim-ui-illuminate-setupOpts-filetypes_denylist"},{"id":"1710","title":"Option: vim.ui.modes-nvim.enable","content":"Whether to enable modes.nvim's prismatic line decorations.","path":"options.html#option-vim-ui-modes-nvim-enable"},{"id":"1711","title":"Option: vim.ui.modes-nvim.setupOpts.colors","content":"Option table to pass into the setup function of modes.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-ui-modes-nvim-setupOpts-colors"},{"id":"1712","title":"Option: vim.ui.modes-nvim.setupOpts.colors.copy","content":"The #RRGGBB color code for the visual mode highlights","path":"options.html#option-vim-ui-modes-nvim-setupOpts-colors-copy"},{"id":"1713","title":"Option: vim.ui.modes-nvim.setupOpts.colors.delete","content":"The #RRGGBB color code for the visual mode highlights","path":"options.html#option-vim-ui-modes-nvim-setupOpts-colors-delete"},{"id":"1714","title":"Option: vim.ui.modes-nvim.setupOpts.colors.insert","content":"The #RRGGBB color code for the visual mode highlights","path":"options.html#option-vim-ui-modes-nvim-setupOpts-colors-insert"},{"id":"1715","title":"Option: vim.ui.modes-nvim.setupOpts.colors.visual","content":"The #RRGGBB color code for the visual mode highlights","path":"options.html#option-vim-ui-modes-nvim-setupOpts-colors-visual"},{"id":"1716","title":"Option: vim.ui.modes-nvim.setupOpts.line_opacity.visual","content":"Set opacity for cursorline and number background","path":"options.html#option-vim-ui-modes-nvim-setupOpts-line_opacity-visual"},{"id":"1717","title":"Option: vim.ui.modes-nvim.setupOpts.setCursorline","content":"Set a colored cursorline on current line","path":"options.html#option-vim-ui-modes-nvim-setupOpts-setCursorline"},{"id":"1718","title":"Option: vim.ui.noice.enable","content":"Whether to enable noice.nvim UI modification library.","path":"options.html#option-vim-ui-noice-enable"},{"id":"1719","title":"Option: vim.ui.noice.setupOpts","content":"Option table to pass into the setup function of noice.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-ui-noice-setupOpts"},{"id":"1720","title":"Option: vim.ui.noice.setupOpts.format.cmdline","content":"formatting options for the cmdline","path":"options.html#option-vim-ui-noice-setupOpts-format-cmdline"},{"id":"1721","title":"Option: vim.ui.noice.setupOpts.format.filter","content":"formatting options for filter","path":"options.html#option-vim-ui-noice-setupOpts-format-filter"},{"id":"1722","title":"Option: vim.ui.noice.setupOpts.format.help","content":"formatting options for help","path":"options.html#option-vim-ui-noice-setupOpts-format-help"},{"id":"1723","title":"Option: vim.ui.noice.setupOpts.format.lua","content":"formatting options for lua","path":"options.html#option-vim-ui-noice-setupOpts-format-lua"},{"id":"1724","title":"Option: vim.ui.noice.setupOpts.format.search_down","content":"formatting options for search_down","path":"options.html#option-vim-ui-noice-setupOpts-format-search_down"},{"id":"1725","title":"Option: vim.ui.noice.setupOpts.format.search_up","content":"formatting options for search_up","path":"options.html#option-vim-ui-noice-setupOpts-format-search_up"},{"id":"1726","title":"Option: vim.ui.noice.setupOpts.lsp.override.\"cmp.entry.get_documentation\"","content":"override cmp documentation with Noice","path":"options.html#option-vim-ui-noice-setupOpts-lsp-override-\"cmp-entry-get_documentation\""},{"id":"1727","title":"Option: vim.ui.noice.setupOpts.lsp.override.\"vim.lsp.util.convert_input_to_markdown_lines\"","content":"override the default lsp markdown formatter with Noice","path":"options.html#option-vim-ui-noice-setupOpts-lsp-override-\"vim-lsp-util-convert_input_to_markdown_lines\""},{"id":"1728","title":"Option: vim.ui.noice.setupOpts.lsp.override.\"vim.lsp.util.stylize_markdown\"","content":"override the lsp markdown formatter with Noice","path":"options.html#option-vim-ui-noice-setupOpts-lsp-override-\"vim-lsp-util-stylize_markdown\""},{"id":"1729","title":"Option: vim.ui.noice.setupOpts.lsp.signature.enabled","content":"Whether to enable signature help.","path":"options.html#option-vim-ui-noice-setupOpts-lsp-signature-enabled"},{"id":"1730","title":"Option: vim.ui.noice.setupOpts.presets.bottom_search","content":"use a classic bottom cmdline for search","path":"options.html#option-vim-ui-noice-setupOpts-presets-bottom_search"},{"id":"1731","title":"Option: vim.ui.noice.setupOpts.presets.command_palette","content":"position the cmdline and popupmenu together","path":"options.html#option-vim-ui-noice-setupOpts-presets-command_palette"},{"id":"1732","title":"Option: vim.ui.noice.setupOpts.presets.inc_rename","content":"enables an input dialog for inc-rename.nvim","path":"options.html#option-vim-ui-noice-setupOpts-presets-inc_rename"},{"id":"1733","title":"Option: vim.ui.noice.setupOpts.presets.long_message_to_split","content":"long messages will be sent to a split","path":"options.html#option-vim-ui-noice-setupOpts-presets-long_message_to_split"},{"id":"1734","title":"Option: vim.ui.noice.setupOpts.presets.lsp_doc_border","content":"add a border to hover docs and signature help","path":"options.html#option-vim-ui-noice-setupOpts-presets-lsp_doc_border"},{"id":"1735","title":"Option: vim.ui.noice.setupOpts.routes","content":"How to route messages","path":"options.html#option-vim-ui-noice-setupOpts-routes"},{"id":"1736","title":"Option: vim.ui.noice.setupOpts.routes.*.filter","content":"a filter for messages matching this route","path":"options.html#option-vim-ui-noice-setupOpts-routes-*-filter"},{"id":"1737","title":"Option: vim.ui.noice.setupOpts.routes.*.opts","content":"options for the view and the route","path":"options.html#option-vim-ui-noice-setupOpts-routes-*-opts"},{"id":"1738","title":"Option: vim.ui.noice.setupOpts.routes.*.view","content":"how this route is viewed","path":"options.html#option-vim-ui-noice-setupOpts-routes-*-view"},{"id":"1739","title":"Option: vim.ui.nvim-ufo.enable","content":"Whether to enable nvim-ufo.","path":"options.html#option-vim-ui-nvim-ufo-enable"},{"id":"1740","title":"Option: vim.ui.nvim-ufo.setupOpts","content":"Option table to pass into the setup function of nvim-ufo\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-ui-nvim-ufo-setupOpts"},{"id":"1741","title":"Option: vim.ui.smartcolumn.enable","content":"Whether to enable line length indicator.","path":"options.html#option-vim-ui-smartcolumn-enable"},{"id":"1742","title":"Option: vim.ui.smartcolumn.setupOpts","content":"Option table to pass into the setup function of smartcolumn.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-ui-smartcolumn-setupOpts"},{"id":"1743","title":"Option: vim.ui.smartcolumn.setupOpts.colorcolumn","content":"The position at which the column will be displayed. Set to null to disable","path":"options.html#option-vim-ui-smartcolumn-setupOpts-colorcolumn"},{"id":"1744","title":"Option: vim.ui.smartcolumn.setupOpts.custom_colorcolumn","content":"The position at which smart column should be displayed for each individual buffer type","path":"options.html#option-vim-ui-smartcolumn-setupOpts-custom_colorcolumn"},{"id":"1745","title":"Option: vim.ui.smartcolumn.setupOpts.disabled_filetypes","content":"The filetypes smartcolumn will be disabled for.","path":"options.html#option-vim-ui-smartcolumn-setupOpts-disabled_filetypes"},{"id":"1746","title":"Option: vim.undoFile.enable","content":"Whether to enable undofile for persistent undo behaviour.","path":"options.html#option-vim-undoFile-enable"},{"id":"1747","title":"Option: vim.undoFile.path","content":"Path to the directory in which undo history will be stored","path":"options.html#option-vim-undoFile-path"},{"id":"1748","title":"Option: vim.utility.ccc.enable","content":"Whether to enable ccc color picker for neovim.","path":"options.html#option-vim-utility-ccc-enable"},{"id":"1749","title":"Option: vim.utility.ccc.mappings.decrease10","content":"Decrease the value times delta of the slider","path":"options.html#option-vim-utility-ccc-mappings-decrease10"},{"id":"1750","title":"Option: vim.utility.ccc.mappings.increase10","content":"Increase the value times delta of the slider","path":"options.html#option-vim-utility-ccc-mappings-increase10"},{"id":"1751","title":"Option: vim.utility.ccc.mappings.quit","content":"Cancel and close the UI without replace or insert","path":"options.html#option-vim-utility-ccc-mappings-quit"},{"id":"1752","title":"Option: vim.utility.diffview-nvim.enable","content":"Whether to enable diffview-nvim: cycle through diffs for all modified files for any git rev.","path":"options.html#option-vim-utility-diffview-nvim-enable"},{"id":"1753","title":"Option: vim.utility.diffview-nvim.setupOpts","content":"Option table to pass into the setup function of Fidget\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-diffview-nvim-setupOpts"},{"id":"1754","title":"Option: vim.utility.direnv.enable","content":"Whether to enable syncing nvim shell environment with direnv's using `direnv.vim`.","path":"options.html#option-vim-utility-direnv-enable"},{"id":"1755","title":"Option: vim.utility.icon-picker.enable","content":"Whether to enable nerdfonts icon picker for nvim.","path":"options.html#option-vim-utility-icon-picker-enable"},{"id":"1756","title":"Option: vim.utility.images.image-nvim.enable","content":"Whether to enable image support in Neovim [image.nvim].","path":"options.html#option-vim-utility-images-image-nvim-enable"},{"id":"1757","title":"Option: vim.utility.images.image-nvim.setupOpts","content":"Option table to pass into the setup function of image.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts"},{"id":"1758","title":"Option: vim.utility.images.image-nvim.setupOpts.backend","content":"The backend to use for rendering images.\n\n- kitty - best in class, works great and is very snappy\n- ueberzug - backed by ueberzugpp, supports any terminal,\n  but has lower performance\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-backend"},{"id":"1759","title":"Option: vim.utility.images.image-nvim.setupOpts.editorOnlyRenderWhenFocused","content":"Whether to enable only rendering images when the editor is focused.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-editorOnlyRenderWhenFocused"},{"id":"1760","title":"Option: vim.utility.images.image-nvim.setupOpts.hijackFilePatterns","content":"File patterns to hijack for image.nvim. This is useful for\nfiletypes that don't have a dedicated integration.\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-hijackFilePatterns"},{"id":"1761","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.markdown.clearInInsertMode","content":"Whether to enable clearing of images when entering insert mode.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-markdown-clearInInsertMode"},{"id":"1762","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.markdown.downloadRemoteImages","content":"Whether to enable downloading remote images.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-markdown-downloadRemoteImages"},{"id":"1763","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.markdown.enable","content":"Whether to enable  image.nvim in markdown files.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-markdown-enable"},{"id":"1764","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.markdown.filetypes","content":"Filetypes to enable image.nvim in. Markdown extensions\n(i.e. quarto) can go here\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-markdown-filetypes"},{"id":"1765","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.markdown.onlyRenderAtCursor","content":"Whether to enable only rendering images at cursor.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-markdown-onlyRenderAtCursor"},{"id":"1766","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.maxWidth","content":"The maximum width of images to render. Images larger than\nthis will be scaled down to fit within this width.\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-maxWidth"},{"id":"1767","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.neorg.clearInInsertMode","content":"Whether to enable clearing of images when entering insert mode.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-neorg-clearInInsertMode"},{"id":"1768","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.neorg.downloadRemoteImages","content":"Whether to enable downloading remote images.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-neorg-downloadRemoteImages"},{"id":"1769","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.neorg.enable","content":"Whether to enable image.nvim in Neorg files.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-neorg-enable"},{"id":"1770","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.neorg.filetypes","content":"Filetypes to enable image.nvim in.\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-neorg-filetypes"},{"id":"1771","title":"Option: vim.utility.images.image-nvim.setupOpts.integrations.neorg.onlyRenderAtCursor","content":"Whether to enable only rendering images at cursor.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-integrations-neorg-onlyRenderAtCursor"},{"id":"1772","title":"Option: vim.utility.images.image-nvim.setupOpts.maxHeight","content":"The maximum height of images to render. Images larger than\nthis will be scaled down to fit within this height.\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-maxHeight"},{"id":"1773","title":"Option: vim.utility.images.image-nvim.setupOpts.maxHeightWindowPercentage","content":"The maximum height of images to render as a percentage of the\nwindow height. Images larger than this will be scaled down to\nfit within this height.\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-maxHeightWindowPercentage"},{"id":"1774","title":"Option: vim.utility.images.image-nvim.setupOpts.maxWidthWindowPercentage","content":"The maximum width of images to render as a percentage of the\nwindow width. Images larger than this will be scaled down to\nfit within this width.\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-maxWidthWindowPercentage"},{"id":"1775","title":"Option: vim.utility.images.image-nvim.setupOpts.windowOverlapClear.enable","content":"Whether to enable clearing of images when they overlap with the window.","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-windowOverlapClear-enable"},{"id":"1776","title":"Option: vim.utility.images.image-nvim.setupOpts.windowOverlapClear.ftIgnore","content":"Filetypes to ignore window overlap clearing in.\n","path":"options.html#option-vim-utility-images-image-nvim-setupOpts-windowOverlapClear-ftIgnore"},{"id":"1777","title":"Option: vim.utility.images.img-clip.enable","content":"Whether to enable img-clip to paste images into any markup language.","path":"options.html#option-vim-utility-images-img-clip-enable"},{"id":"1778","title":"Option: vim.utility.images.img-clip.setupOpts","content":"Option table to pass into the setup function of img-clip\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-images-img-clip-setupOpts"},{"id":"1779","title":"Option: vim.utility.leetcode-nvim.enable","content":"Whether to enable complementary neovim plugin for leetcode.nvim.","path":"options.html#option-vim-utility-leetcode-nvim-enable"},{"id":"1780","title":"Option: vim.utility.leetcode-nvim.setupOpts","content":"Option table to pass into the setup function of leetcode-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts"},{"id":"1781","title":"Option: vim.utility.leetcode-nvim.setupOpts.arg","content":"Argument for Neovim","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-arg"},{"id":"1782","title":"Option: vim.utility.leetcode-nvim.setupOpts.cn.enabled","content":"Whether to enable leetcode.cn instead of leetcode.com.","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-cn-enabled"},{"id":"1783","title":"Option: vim.utility.leetcode-nvim.setupOpts.cn.translate_problems","content":"Whether to enable translation for problem questions.","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-cn-translate_problems"},{"id":"1784","title":"Option: vim.utility.leetcode-nvim.setupOpts.cn.translator","content":"Whether to enable translator.","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-cn-translator"},{"id":"1785","title":"Option: vim.utility.leetcode-nvim.setupOpts.image_support","content":"Whether to enable question description images using image.nvim (image-nvim must be enabled)..","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-image_support"},{"id":"1786","title":"Option: vim.utility.leetcode-nvim.setupOpts.lang","content":"Language to start your session with","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-lang"},{"id":"1787","title":"Option: vim.utility.leetcode-nvim.setupOpts.logging","content":"Whether to enable logging for leetcode.nvim status notifications..","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-logging"},{"id":"1788","title":"Option: vim.utility.leetcode-nvim.setupOpts.plugins.non_standalone","content":"Whether to enable leetcode.nvim in a non-standalone mode.","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-plugins-non_standalone"},{"id":"1789","title":"Option: vim.utility.leetcode-nvim.setupOpts.storage.cache","content":"Cache storage directory","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-storage-cache"},{"id":"1790","title":"Option: vim.utility.leetcode-nvim.setupOpts.storage.home","content":"Home storage directory","path":"options.html#option-vim-utility-leetcode-nvim-setupOpts-storage-home"},{"id":"1791","title":"Option: vim.utility.mkdir.enable","content":"Whether to enable parent directory creation when editing a nested path that does not exist using `mkdir.nvim`\n.","path":"options.html#option-vim-utility-mkdir-enable"},{"id":"1792","title":"Option: vim.utility.motion.flash-nvim.enable","content":"Whether to enable enhanced code navigation with flash.nvim.","path":"options.html#option-vim-utility-motion-flash-nvim-enable"},{"id":"1793","title":"Option: vim.utility.motion.flash-nvim.mappings.jump","content":"Jump","path":"options.html#option-vim-utility-motion-flash-nvim-mappings-jump"},{"id":"1794","title":"Option: vim.utility.motion.flash-nvim.mappings.remote","content":"Remote Flash","path":"options.html#option-vim-utility-motion-flash-nvim-mappings-remote"},{"id":"1795","title":"Option: vim.utility.motion.flash-nvim.mappings.toggle","content":"Toggle Flash Search","path":"options.html#option-vim-utility-motion-flash-nvim-mappings-toggle"},{"id":"1796","title":"Option: vim.utility.motion.flash-nvim.mappings.treesitter","content":"Treesitter","path":"options.html#option-vim-utility-motion-flash-nvim-mappings-treesitter"},{"id":"1797","title":"Option: vim.utility.motion.flash-nvim.mappings.treesitter_search","content":"Treesitter Search","path":"options.html#option-vim-utility-motion-flash-nvim-mappings-treesitter_search"},{"id":"1798","title":"Option: vim.utility.motion.flash-nvim.setupOpts","content":"Option table to pass into the setup function of flash-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-motion-flash-nvim-setupOpts"},{"id":"1799","title":"Option: vim.utility.motion.hop.enable","content":"Whether to enable Hop.nvim plugin (easy motion).","path":"options.html#option-vim-utility-motion-hop-enable"},{"id":"1800","title":"Option: vim.utility.motion.hop.mappings.hop","content":"Jump to occurrences [hop.nvim]","path":"options.html#option-vim-utility-motion-hop-mappings-hop"},{"id":"1801","title":"Option: vim.utility.motion.leap.enable","content":"Whether to enable leap.nvim plugin (easy motion).","path":"options.html#option-vim-utility-motion-leap-enable"},{"id":"1802","title":"Option: vim.utility.motion.leap.mappings.leapBackwardTill","content":"Leap backward till","path":"options.html#option-vim-utility-motion-leap-mappings-leapBackwardTill"},{"id":"1803","title":"Option: vim.utility.motion.leap.mappings.leapBackwardTo","content":"Leap backward to","path":"options.html#option-vim-utility-motion-leap-mappings-leapBackwardTo"},{"id":"1804","title":"Option: vim.utility.motion.leap.mappings.leapForwardTill","content":"Leap forward till","path":"options.html#option-vim-utility-motion-leap-mappings-leapForwardTill"},{"id":"1805","title":"Option: vim.utility.motion.leap.mappings.leapForwardTo","content":"Leap forward to","path":"options.html#option-vim-utility-motion-leap-mappings-leapForwardTo"},{"id":"1806","title":"Option: vim.utility.motion.leap.mappings.leapFromWindow","content":"Leap from window","path":"options.html#option-vim-utility-motion-leap-mappings-leapFromWindow"},{"id":"1807","title":"Option: vim.utility.motion.precognition.enable","content":"Whether to enable assisted motion discovery[precognition.nvim].","path":"options.html#option-vim-utility-motion-precognition-enable"},{"id":"1808","title":"Option: vim.utility.motion.precognition.setupOpts","content":"Option table to pass into the setup function of precognition.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-motion-precognition-setupOpts"},{"id":"1809","title":"Option: vim.utility.motion.precognition.setupOpts.disabled_fts","content":"Filetypes that automatically disable 'precognition'","path":"options.html#option-vim-utility-motion-precognition-setupOpts-disabled_fts"},{"id":"1810","title":"Option: vim.utility.motion.precognition.setupOpts.gutterHints","content":"What motions display and at what priority. Only appears in gutters\n","path":"options.html#option-vim-utility-motion-precognition-setupOpts-gutterHints"},{"id":"1811","title":"Option: vim.utility.motion.precognition.setupOpts.gutterHints.<name>.prio","content":"The priority of the hint","path":"options.html#option-vim-utility-motion-precognition-setupOpts-gutterHints-<name>-prio"},{"id":"1812","title":"Option: vim.utility.motion.precognition.setupOpts.gutterHints.<name>.text","content":"The easier-to-read depiction of the motion","path":"options.html#option-vim-utility-motion-precognition-setupOpts-gutterHints-<name>-text"},{"id":"1813","title":"Option: vim.utility.motion.precognition.setupOpts.highlightColor","content":"The highlight for the virtual text","path":"options.html#option-vim-utility-motion-precognition-setupOpts-highlightColor"},{"id":"1814","title":"Option: vim.utility.motion.precognition.setupOpts.hints","content":"What motions display, and at what priority","path":"options.html#option-vim-utility-motion-precognition-setupOpts-hints"},{"id":"1815","title":"Option: vim.utility.motion.precognition.setupOpts.hints.<name>.prio","content":"The priority of the hint","path":"options.html#option-vim-utility-motion-precognition-setupOpts-hints-<name>-prio"},{"id":"1816","title":"Option: vim.utility.motion.precognition.setupOpts.hints.<name>.text","content":"The easier-to-read depiction of the motion","path":"options.html#option-vim-utility-motion-precognition-setupOpts-hints-<name>-text"},{"id":"1817","title":"Option: vim.utility.motion.precognition.setupOpts.showBlankVirtLine","content":"Whether to show a blank virtual line when no movements are shown","path":"options.html#option-vim-utility-motion-precognition-setupOpts-showBlankVirtLine"},{"id":"1818","title":"Option: vim.utility.motion.precognition.setupOpts.startVisible","content":"Whether to start 'precognition' automatically","path":"options.html#option-vim-utility-motion-precognition-setupOpts-startVisible"},{"id":"1819","title":"Option: vim.utility.multicursors.enable","content":"Whether to enable vscode like multiple cursors [multicursor.nvim].","path":"options.html#option-vim-utility-multicursors-enable"},{"id":"1820","title":"Option: vim.utility.multicursors.setupOpts","content":"Option table to pass into the setup function of multicursors\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-multicursors-setupOpts"},{"id":"1821","title":"Option: vim.utility.multicursors.setupOpts.DEBUG_MODE","content":"Enable debug mode.","path":"options.html#option-vim-utility-multicursors-setupOpts-DEBUG_MODE"},{"id":"1822","title":"Option: vim.utility.multicursors.setupOpts.create_commands","content":"Create Multicursor user commands","path":"options.html#option-vim-utility-multicursors-setupOpts-create_commands"},{"id":"1823","title":"Option: vim.utility.multicursors.setupOpts.generate_hints","content":"The configuration for generating hints","path":"options.html#option-vim-utility-multicursors-setupOpts-generate_hints"},{"id":"1824","title":"Option: vim.utility.multicursors.setupOpts.generate_hints.config","content":"The configuration for generating hints for multicursors.nvim","path":"options.html#option-vim-utility-multicursors-setupOpts-generate_hints-config"},{"id":"1825","title":"Option: vim.utility.multicursors.setupOpts.generate_hints.config.column_count","content":"The number of columns to use for the hint window","path":"options.html#option-vim-utility-multicursors-setupOpts-generate_hints-config-column_count"},{"id":"1826","title":"Option: vim.utility.multicursors.setupOpts.generate_hints.config.max_hint_length","content":"The maximum length of the hint","path":"options.html#option-vim-utility-multicursors-setupOpts-generate_hints-config-max_hint_length"},{"id":"1827","title":"Option: vim.utility.multicursors.setupOpts.generate_hints.extend","content":"Generate hints for the extend mode","path":"options.html#option-vim-utility-multicursors-setupOpts-generate_hints-extend"},{"id":"1828","title":"Option: vim.utility.multicursors.setupOpts.generate_hints.insert","content":"Generate hints for the insert mode","path":"options.html#option-vim-utility-multicursors-setupOpts-generate_hints-insert"},{"id":"1829","title":"Option: vim.utility.multicursors.setupOpts.generate_hints.normal","content":"Generate hints for the normal mode","path":"options.html#option-vim-utility-multicursors-setupOpts-generate_hints-normal"},{"id":"1830","title":"Option: vim.utility.multicursors.setupOpts.hint_config","content":"The configuration for the hint window","path":"options.html#option-vim-utility-multicursors-setupOpts-hint_config"},{"id":"1831","title":"Option: vim.utility.multicursors.setupOpts.hint_config.float_opts","content":"The options for the floating hint window","path":"options.html#option-vim-utility-multicursors-setupOpts-hint_config-float_opts"},{"id":"1832","title":"Option: vim.utility.multicursors.setupOpts.hint_config.float_opts.border","content":"The border style for the hint window","path":"options.html#option-vim-utility-multicursors-setupOpts-hint_config-float_opts-border"},{"id":"1833","title":"Option: vim.utility.multicursors.setupOpts.hint_config.position","content":"The position of the hint window","path":"options.html#option-vim-utility-multicursors-setupOpts-hint_config-position"},{"id":"1834","title":"Option: vim.utility.multicursors.setupOpts.mode_keys","content":"The keys to use for each mode","path":"options.html#option-vim-utility-multicursors-setupOpts-mode_keys"},{"id":"1835","title":"Option: vim.utility.multicursors.setupOpts.nowait","content":"Don't wait for the cursor to move before updating the cursor","path":"options.html#option-vim-utility-multicursors-setupOpts-nowait"},{"id":"1836","title":"Option: vim.utility.multicursors.setupOpts.updatetime","content":"The time in milliseconds to wait before updating the cursor in insert mode","path":"options.html#option-vim-utility-multicursors-setupOpts-updatetime"},{"id":"1837","title":"Option: vim.utility.new-file-template.enable","content":"new-file-template.nvim: Automatically insert a template on new files in neovim.\n::: {.note}\nFor custom templates add a directory containing `lua/templates/*.lua`\nto `vim.additionalRuntimePaths`.\n:::\n[custom-template-docs]: https://github.com/otavioschwanck/new-file-template.nvim?tab=readme-ov-file#creating-new-templates\nMore documentation on the templates available at [custom-template-docs]\n","path":"options.html#option-vim-utility-new-file-template-enable"},{"id":"1838","title":"Option: vim.utility.new-file-template.setupOpts","content":"Option table to pass into the setup function of nvim-file-template.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-new-file-template-setupOpts"},{"id":"1839","title":"Option: vim.utility.new-file-template.setupOpts.disableAutocmd","content":"Disable the autocmd that creates the template","path":"options.html#option-vim-utility-new-file-template-setupOpts-disableAutocmd"},{"id":"1840","title":"Option: vim.utility.new-file-template.setupOpts.disableFiletype","content":"Disable default templates for specific filetypes","path":"options.html#option-vim-utility-new-file-template-setupOpts-disableFiletype"},{"id":"1841","title":"Option: vim.utility.new-file-template.setupOpts.disableInsert","content":"Enter insert mode after inserting the template","path":"options.html#option-vim-utility-new-file-template-setupOpts-disableInsert"},{"id":"1842","title":"Option: vim.utility.new-file-template.setupOpts.disableSpecific","content":"Disable specific regexp for the default templates.","path":"options.html#option-vim-utility-new-file-template-setupOpts-disableSpecific"},{"id":"1843","title":"Option: vim.utility.new-file-template.setupOpts.suffixAsFiletype","content":"Use suffix of filename rather than `vim.bo.filetype` as filetype","path":"options.html#option-vim-utility-new-file-template-setupOpts-suffixAsFiletype"},{"id":"1844","title":"Option: vim.utility.nix-develop.enable","content":"Whether to enable in-neovim `nix develop`, `nix shell`, and more using `nix-develop.nvim`.","path":"options.html#option-vim-utility-nix-develop-enable"},{"id":"1845","title":"Option: vim.utility.oil-nvim.enable","content":"Whether to enable Neovim file explorer: edit your filesystem like a buffer [oil-nvim]\n.","path":"options.html#option-vim-utility-oil-nvim-enable"},{"id":"1846","title":"Option: vim.utility.oil-nvim.setupOpts","content":"Option table to pass into the setup function of oil-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-oil-nvim-setupOpts"},{"id":"1847","title":"Option: vim.utility.outline.aerial-nvim.enable","content":"Whether to enable Aerial.nvim.","path":"options.html#option-vim-utility-outline-aerial-nvim-enable"},{"id":"1848","title":"Option: vim.utility.outline.aerial-nvim.mappings.toggle","content":"Toggle aerial window","path":"options.html#option-vim-utility-outline-aerial-nvim-mappings-toggle"},{"id":"1849","title":"Option: vim.utility.outline.aerial-nvim.setupOpts","content":"Option table to pass into the setup function of aerial.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-outline-aerial-nvim-setupOpts"},{"id":"1850","title":"Option: vim.utility.preview.glow.enable","content":"Whether to enable markdown preview in neovim with glow.","path":"options.html#option-vim-utility-preview-glow-enable"},{"id":"1851","title":"Option: vim.utility.preview.glow.mappings.openPreview","content":"Open preview","path":"options.html#option-vim-utility-preview-glow-mappings-openPreview"},{"id":"1852","title":"Option: vim.utility.preview.markdownPreview.alwaysAllowPreview","content":"Allow preview on all filetypes","path":"options.html#option-vim-utility-preview-markdownPreview-alwaysAllowPreview"},{"id":"1853","title":"Option: vim.utility.preview.markdownPreview.autoClose","content":"Automatically close the preview window after leaving a Markdown buffer","path":"options.html#option-vim-utility-preview-markdownPreview-autoClose"},{"id":"1854","title":"Option: vim.utility.preview.markdownPreview.autoStart","content":"Automatically open the preview window after entering a Markdown buffer","path":"options.html#option-vim-utility-preview-markdownPreview-autoStart"},{"id":"1855","title":"Option: vim.utility.preview.markdownPreview.broadcastServer","content":"Allow for outside and network wide connections","path":"options.html#option-vim-utility-preview-markdownPreview-broadcastServer"},{"id":"1856","title":"Option: vim.utility.preview.markdownPreview.customIP","content":"IP-address to use","path":"options.html#option-vim-utility-preview-markdownPreview-customIP"},{"id":"1857","title":"Option: vim.utility.preview.markdownPreview.customPort","content":"Port to use","path":"options.html#option-vim-utility-preview-markdownPreview-customPort"},{"id":"1858","title":"Option: vim.utility.preview.markdownPreview.enable","content":"Whether to enable Markdown preview in neovim with markdown-preview.nvim.","path":"options.html#option-vim-utility-preview-markdownPreview-enable"},{"id":"1859","title":"Option: vim.utility.preview.markdownPreview.filetypes","content":"Allowed filetypes","path":"options.html#option-vim-utility-preview-markdownPreview-filetypes"},{"id":"1860","title":"Option: vim.utility.preview.markdownPreview.lazyRefresh","content":"Only update preview when saving or leaving insert mode","path":"options.html#option-vim-utility-preview-markdownPreview-lazyRefresh"},{"id":"1861","title":"Option: vim.utility.sleuth.enable","content":"Whether to enable automatically adjusting options such as `shiftwidth` or `expandtab`, using `vim-sleuth`\n.","path":"options.html#option-vim-utility-sleuth-enable"},{"id":"1862","title":"Option: vim.utility.snacks-nvim.enable","content":"Whether to enable collection of QoL plugins for Neovim [snacks-nvim]\n.","path":"options.html#option-vim-utility-snacks-nvim-enable"},{"id":"1863","title":"Option: vim.utility.snacks-nvim.setupOpts","content":"Option table to pass into the setup function of snacks-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-snacks-nvim-setupOpts"},{"id":"1864","title":"Option: vim.utility.surround.enable","content":"Whether to enable nvim-surround, Neovim plugin to add/change/delete\nsurrounding delimiter pairs with ease.\n\n::: {.note}\nThe default mappings deviate from upstream to avoid conflicts with nvim-leap.\nYou may change those in your configuration if you do not use nvim-leap\n:::\n","path":"options.html#option-vim-utility-surround-enable"},{"id":"1865","title":"Option: vim.utility.surround.setupOpts","content":"Option table to pass into the setup function of nvim-surround\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-surround-setupOpts"},{"id":"1866","title":"Option: vim.utility.surround.setupOpts.keymaps.change","content":"keymap for change","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-change"},{"id":"1867","title":"Option: vim.utility.surround.setupOpts.keymaps.change_line","content":"keymap for change_line","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-change_line"},{"id":"1868","title":"Option: vim.utility.surround.setupOpts.keymaps.delete","content":"keymap for delete","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-delete"},{"id":"1869","title":"Option: vim.utility.surround.setupOpts.keymaps.insert","content":"keymap for insert","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-insert"},{"id":"1870","title":"Option: vim.utility.surround.setupOpts.keymaps.insert_line","content":"keymap for insert_line","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-insert_line"},{"id":"1871","title":"Option: vim.utility.surround.setupOpts.keymaps.normal","content":"keymap for normal","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-normal"},{"id":"1872","title":"Option: vim.utility.surround.setupOpts.keymaps.normal_cur","content":"keymap for normal_cur","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-normal_cur"},{"id":"1873","title":"Option: vim.utility.surround.setupOpts.keymaps.normal_cur_line","content":"keymap for normal_cur_line","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-normal_cur_line"},{"id":"1874","title":"Option: vim.utility.surround.setupOpts.keymaps.normal_line","content":"keymap for normal_line","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-normal_line"},{"id":"1875","title":"Option: vim.utility.surround.setupOpts.keymaps.visual","content":"keymap for visual","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-visual"},{"id":"1876","title":"Option: vim.utility.surround.setupOpts.keymaps.visual_line","content":"keymap for visual_line","path":"options.html#option-vim-utility-surround-setupOpts-keymaps-visual_line"},{"id":"1877","title":"Option: vim.utility.surround.useVendoredKeybindings","content":"Use alternative set of keybindings that avoids conflicts with other popular plugins, e.g. nvim-leap\n","path":"options.html#option-vim-utility-surround-useVendoredKeybindings"},{"id":"1878","title":"Option: vim.utility.vim-wakatime.cli-package","content":"The package that should be used for wakatime-cli.\nSet as null to use the default path in {env}`$XDG_DATA_HOME`\n","path":"options.html#option-vim-utility-vim-wakatime-cli-package"},{"id":"1879","title":"Option: vim.utility.vim-wakatime.enable","content":"Whether to enable automatic time tracking and metrics generated from your programming activity [vim-wakatime]\n.","path":"options.html#option-vim-utility-vim-wakatime-enable"},{"id":"1880","title":"Option: vim.utility.yanky-nvim.enable","content":"Whether to enable improved Yank and Put functionalities for Neovim  [yanky-nvim]\n.","path":"options.html#option-vim-utility-yanky-nvim-enable"},{"id":"1881","title":"Option: vim.utility.yanky-nvim.setupOpts","content":"Option table to pass into the setup function of yanky-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-yanky-nvim-setupOpts"},{"id":"1882","title":"Option: vim.utility.yanky-nvim.setupOpts.ring.storage","content":"storage mode for ring values.\n\n- **shada**: this will save pesistantly using Neovim ShaDa feature.\n  This means that history will be persisted between each session of Neovim.\n- **memory**: each Neovim instance will have his own history and it will be\n  lost between sessions.\n- **sqlite**: more reliable than `shada`, requires `sqlite.lua` as a dependency.\n  nvf will add this dependency to `PATH` automatically.\n","path":"options.html#option-vim-utility-yanky-nvim-setupOpts-ring-storage"},{"id":"1883","title":"Option: vim.utility.yazi-nvim.enable","content":"Whether to enable companion plugin for the yazi terminal file manager [yazi-nvim]\n.","path":"options.html#option-vim-utility-yazi-nvim-enable"},{"id":"1884","title":"Option: vim.utility.yazi-nvim.mappings.openYazi","content":"Open yazi at the current file [yazi.nvim]","path":"options.html#option-vim-utility-yazi-nvim-mappings-openYazi"},{"id":"1885","title":"Option: vim.utility.yazi-nvim.mappings.openYaziDir","content":"Open the file manager in nvim's working directory [yazi.nvim]","path":"options.html#option-vim-utility-yazi-nvim-mappings-openYaziDir"},{"id":"1886","title":"Option: vim.utility.yazi-nvim.mappings.yaziToggle","content":"Resume the last yazi session [yazi.nvim]","path":"options.html#option-vim-utility-yazi-nvim-mappings-yaziToggle"},{"id":"1887","title":"Option: vim.utility.yazi-nvim.setupOpts","content":"Option table to pass into the setup function of yazi-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-utility-yazi-nvim-setupOpts"},{"id":"1888","title":"Option: vim.utility.yazi-nvim.setupOpts.open_for_directories","content":"Whether to open Yazi instead of netrw","path":"options.html#option-vim-utility-yazi-nvim-setupOpts-open_for_directories"},{"id":"1889","title":"Option: vim.viAlias","content":"Enable the `vi` alias for `nvim`","path":"options.html#option-vim-viAlias"},{"id":"1890","title":"Option: vim.vimAlias","content":"Enable the `vim` alias for `nvim`","path":"options.html#option-vim-vimAlias"},{"id":"1891","title":"Option: vim.visuals.cellular-automaton.animation.register","content":"Whether to enable registering configured animation(s) automatically.","path":"options.html#option-vim-visuals-cellular-automaton-animation-register"},{"id":"1892","title":"Option: vim.visuals.cellular-automaton.animation.setup","content":"Configuration used to generate an animation to be registered.\n\nThe final value for `ca_config` will be used to register a new\nanimation using `require(\"cellular-automaton\").register_animation(ca_config)`\n\n::: {.warning}\n  `ca_config` **must** eval to a valid Lua table. nvf does not and cannot\n  perform any kind of validation on your Lua code, so bogus values will\n  result in errors when the animation is registered.\n:::\n","path":"options.html#option-vim-visuals-cellular-automaton-animation-setup"},{"id":"1893","title":"Option: vim.visuals.cellular-automaton.enable","content":"Whether to enable cellular-automaton to help you cope with stubborn code [cellular-automaton].","path":"options.html#option-vim-visuals-cellular-automaton-enable"},{"id":"1894","title":"Option: vim.visuals.cellular-automaton.mappings.makeItRain","content":"Make it rain [cellular-automaton]","path":"options.html#option-vim-visuals-cellular-automaton-mappings-makeItRain"},{"id":"1895","title":"Option: vim.visuals.cinnamon-nvim.enable","content":"Whether to enable smooth scrolling for ANY command [cinnamon-nvim].","path":"options.html#option-vim-visuals-cinnamon-nvim-enable"},{"id":"1896","title":"Option: vim.visuals.cinnamon-nvim.setupOpts","content":"Option table to pass into the setup function of cinnamon.nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-visuals-cinnamon-nvim-setupOpts"},{"id":"1897","title":"Option: vim.visuals.cinnamon-nvim.setupOpts.keymaps.basic","content":"Whether to enable basic animation keymaps.","path":"options.html#option-vim-visuals-cinnamon-nvim-setupOpts-keymaps-basic"},{"id":"1898","title":"Option: vim.visuals.cinnamon-nvim.setupOpts.keymaps.extra","content":"Whether to enable extra animation keymaps.","path":"options.html#option-vim-visuals-cinnamon-nvim-setupOpts-keymaps-extra"},{"id":"1899","title":"Option: vim.visuals.cinnamon-nvim.setupOpts.options","content":"Scroll options","path":"options.html#option-vim-visuals-cinnamon-nvim-setupOpts-options"},{"id":"1900","title":"Option: vim.visuals.fidget-nvim.enable","content":"Whether to enable nvim LSP UI element [fidget-nvim].","path":"options.html#option-vim-visuals-fidget-nvim-enable"},{"id":"1901","title":"Option: vim.visuals.fidget-nvim.setupOpts","content":"Option table to pass into the setup function of Fidget\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts"},{"id":"1902","title":"Option: vim.visuals.fidget-nvim.setupOpts.integration.nvim-tree.enable","content":"Integrate with nvim-tree/nvim-tree.lua (if enabled)","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-integration-nvim-tree-enable"},{"id":"1903","title":"Option: vim.visuals.fidget-nvim.setupOpts.integration.xcodebuild-nvim.enable","content":"Integrate with wojciech-kulik/xcodebuild.nvim (if enabled)","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-integration-xcodebuild-nvim-enable"},{"id":"1904","title":"Option: vim.visuals.fidget-nvim.setupOpts.logger.float_precision","content":"Limit the number of decimals displayed for floats","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-logger-float_precision"},{"id":"1905","title":"Option: vim.visuals.fidget-nvim.setupOpts.logger.level","content":"Minimum logging level","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-logger-level"},{"id":"1906","title":"Option: vim.visuals.fidget-nvim.setupOpts.logger.max_size","content":"Maximum log file size, in KB","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-logger-max_size"},{"id":"1907","title":"Option: vim.visuals.fidget-nvim.setupOpts.logger.path","content":"Where Fidget writes its logs to","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-logger-path"},{"id":"1908","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.configs","content":"How to configure notification groups when instantiated","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-configs"},{"id":"1909","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.filter","content":"Minimum notifications level","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-filter"},{"id":"1910","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.history_size","content":"Number of removed messages to retain in history","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-history_size"},{"id":"1911","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.override_vim_notify","content":"Automatically override vim.notify() with Fidget","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-override_vim_notify"},{"id":"1912","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.poll_rate","content":"How frequently to update and render notifications","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-poll_rate"},{"id":"1913","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.redirect","content":"Conditionally redirect notifications to another backend","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-redirect"},{"id":"1914","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.view.group_separator","content":"Separator between notification groups","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-view-group_separator"},{"id":"1915","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.view.group_separator_hl","content":"Highlight group used for group separator","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-view-group_separator_hl"},{"id":"1916","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.view.icon_separator","content":"Separator between group name and icon","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-view-icon_separator"},{"id":"1917","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.view.render_message","content":"How to render notification messages","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-view-render_message"},{"id":"1918","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.view.stack_upwards","content":"Display notification items from bottom to top","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-view-stack_upwards"},{"id":"1919","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.align","content":"How to align the notification window","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-align"},{"id":"1920","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.border","content":"Border style of the notification window","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-border"},{"id":"1921","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.max_height","content":"Maximum height of the notification window","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-max_height"},{"id":"1922","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.max_width","content":"Maximum width of the notification window","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-max_width"},{"id":"1923","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.normal_hl","content":"Base highlight group in the notification window","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-normal_hl"},{"id":"1924","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.relative","content":"What the notification window position is relative to","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-relative"},{"id":"1925","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.winblend","content":"Background color opacity in the notification window","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-winblend"},{"id":"1926","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.x_padding","content":"Padding from right edge of window boundary","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-x_padding"},{"id":"1927","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.y_padding","content":"Padding from bottom edge of window boundary","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-y_padding"},{"id":"1928","title":"Option: vim.visuals.fidget-nvim.setupOpts.notification.window.zindex","content":"Stacking priority of the notification window","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-notification-window-zindex"},{"id":"1929","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.done_icon","content":"Icon shown when LSP progress tasks are completed","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-done_icon"},{"id":"1930","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.done_style","content":"Highlight group for completed LSP tasks","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-done_style"},{"id":"1931","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.done_ttl","content":"How long a message should persist when complete","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-done_ttl"},{"id":"1932","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.format_annote","content":"How to format a progress annotation","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-format_annote"},{"id":"1933","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.format_group_name","content":"How to format a progress notification group's name","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-format_group_name"},{"id":"1934","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.format_message","content":"How to format a progress message","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-format_message"},{"id":"1935","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.group_style","content":"Highlight group for group name (LSP server name)","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-group_style"},{"id":"1936","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.icon_style","content":"Highlight group for group icons","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-icon_style"},{"id":"1937","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides","content":"Overrides the default configuration for a notification group defined\nin [](#opt-vim.visuals.fidget-nvim.setupOpts.notification.configs).\n\nIf any of the fields are null, the value from the default\nconfiguration is used.\n\nIf default configuration is not defined, the following defaults are used:\n```lua\n   {\n       name = \"Notifications\",\n       icon = \"❰❰\",\n       ttl = 5,\n       group_style = \"Title\",\n       icon_style = \"Special\",\n       annote_style = \"Question\",\n       debug_style = \"Comment\",\n       info_style = \"Question\",\n       warn_style = \"WarningMsg\",\n       error_style = \"ErrorMsg\",\n       debug_annote = \"DEBUG\",\n       info_annote = \"INFO\",\n       warn_annote = \"WARN\",\n       error_annote = \"ERROR\",\n       update_hook = function(item)\n         notification.set_content_key(item)\n       end,\n   }\n```\n","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides"},{"id":"1938","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.annote_separator","content":"Separator between message from annote","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-annote_separator"},{"id":"1939","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.annote_style","content":"Default style used to highlight item annotes","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-annote_style"},{"id":"1940","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.debug_annote","content":"Default annotation for debug items","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-debug_annote"},{"id":"1941","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.debug_style","content":"Style used to highlight debug item annotes","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-debug_style"},{"id":"1942","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.error_annote","content":"Default annotation for error items","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-error_annote"},{"id":"1943","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.error_style","content":"Style used to highlight error item annotes","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-error_style"},{"id":"1944","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.group_style","content":"Style used to highlight group name","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-group_style"},{"id":"1945","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.icon","content":"Icon of the group, displayed in the notification window.\nCan be a string or a function that returns a string.\n\nIf a function, it is invoked every render cycle with the items\nlist, useful for rendering animations and other dynamic content.\n\n::: {.note}\nIf you're looking for detailed information into the function\nsignature, you can refer to the fidget API documentation available\n[here](https://github.com/j-hui/fidget.nvim/blob/1ba38e4cbb24683973e00c2e36f53ae64da38ef5/doc/fidget-api.txt#L70-L77)\n:::\n","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-icon"},{"id":"1946","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.icon_on_left","content":"If true, icon is rendered on the left instead of right","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-icon_on_left"},{"id":"1947","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.icon_style","content":"Style used to highlight icon, if null, use group_style","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-icon_style"},{"id":"1948","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.info_annote","content":"Default annotation for info items","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-info_annote"},{"id":"1949","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.info_style","content":"Style used to highlight info item annotes","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-info_style"},{"id":"1950","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.name","content":"Name of the group, displayed in the notification window.\nCan be a string or a function that returns a string.\n\nIf a function, it is invoked every render cycle with the items\nlist, useful for rendering animations and other dynamic content.\n\n::: {.note}\nIf you're looking for detailed information into the function\nsignature, you can refer to the fidget API documentation available\n[here](https://github.com/j-hui/fidget.nvim/blob/1ba38e4cbb24683973e00c2e36f53ae64da38ef5/doc/fidget-api.txt#L70-L77)\n:::\n","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-name"},{"id":"1951","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.priority","content":"Order in which group should be displayed","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-priority"},{"id":"1952","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.render_limit","content":"How many notification items to show at once","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-render_limit"},{"id":"1953","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.skip_history","content":"Whether messages should be preserved in history","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-skip_history"},{"id":"1954","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.ttl","content":"How long a notification item should exist","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-ttl"},{"id":"1955","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.update_hook","content":"Called when an item is updated.\n\nIf false, no action is taken.\nIf a function, it is invoked with the item being updated.\n\n::: {.note}\nIf you're looking for detailed information into the function\nsignature, you can refer to the fidget API documentation available\n[here](https://github.com/j-hui/fidget.nvim/blob/1ba38e4cbb24683973e00c2e36f53ae64da38ef5/doc/fidget-api.txt#L114)\n:::\n","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-update_hook"},{"id":"1956","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.warn_annote","content":"Default annotation for warn items","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-warn_annote"},{"id":"1957","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.warn_style","content":"Style used to highlight warn item annotes","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-overrides-<name>-warn_style"},{"id":"1958","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.priority","content":"Priority of the progress notification","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-priority"},{"id":"1959","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.progress_icon.pattern","content":"Pattern shown when LSP progress tasks are in progress","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-progress_icon-pattern"},{"id":"1960","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.progress_icon.period","content":"Period of the pattern","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-progress_icon-period"},{"id":"1961","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.progress_style","content":"Highlight group for in-progress LSP tasks","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-progress_style"},{"id":"1962","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.progress_ttl","content":"How long a message should persist when in progress","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-progress_ttl"},{"id":"1963","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.render_limit","content":"Maximum number of messages to render","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-render_limit"},{"id":"1964","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.display.skip_history","content":"Skip adding messages to history","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-display-skip_history"},{"id":"1965","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.ignore","content":"Ignore LSP servers by name","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-ignore"},{"id":"1966","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.ignore_done_already","content":"Ignore new tasks that are already done","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-ignore_done_already"},{"id":"1967","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.ignore_empty_message","content":"Ignore new tasks with empty messages","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-ignore_empty_message"},{"id":"1968","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.lsp.log_handler","content":"Log `$/progress` handler invocations","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-lsp-log_handler"},{"id":"1969","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.lsp.progress_ringbuf_size","content":"Nvim's LSP client ring buffer size","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-lsp-progress_ringbuf_size"},{"id":"1970","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.notification_group","content":"How to get a progress message's notification group key","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-notification_group"},{"id":"1971","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.poll_rate","content":"How frequently to poll for LSP progress messages","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-poll_rate"},{"id":"1972","title":"Option: vim.visuals.fidget-nvim.setupOpts.progress.suppress_on_insert","content":"Suppress new messages when in insert mode","path":"options.html#option-vim-visuals-fidget-nvim-setupOpts-progress-suppress_on_insert"},{"id":"1973","title":"Option: vim.visuals.highlight-undo.enable","content":"Whether to enable highlight undo [highlight-undo].","path":"options.html#option-vim-visuals-highlight-undo-enable"},{"id":"1974","title":"Option: vim.visuals.highlight-undo.setupOpts","content":"Option table to pass into the setup function of highlight-undo\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-visuals-highlight-undo-setupOpts"},{"id":"1975","title":"Option: vim.visuals.highlight-undo.setupOpts.duration","content":"Duration of the highlight","path":"options.html#option-vim-visuals-highlight-undo-setupOpts-duration"},{"id":"1976","title":"Option: vim.visuals.indent-blankline.enable","content":"Whether to enable indentation guides [indent-blankline].","path":"options.html#option-vim-visuals-indent-blankline-enable"},{"id":"1977","title":"Option: vim.visuals.indent-blankline.setupOpts","content":"Option table to pass into the setup function of indent-blankline\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-visuals-indent-blankline-setupOpts"},{"id":"1978","title":"Option: vim.visuals.indent-blankline.setupOpts.debounce","content":"Debounce time in milliseconds","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-debounce"},{"id":"1979","title":"Option: vim.visuals.indent-blankline.setupOpts.indent.char","content":"Character(s) for indentation guide","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-indent-char"},{"id":"1980","title":"Option: vim.visuals.indent-blankline.setupOpts.indent.highlight","content":"The highlight group(s) applied to the indentation guide.\n\nSee `:help ibl.config.indent.highlight`.\n","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-indent-highlight"},{"id":"1981","title":"Option: vim.visuals.indent-blankline.setupOpts.indent.priority","content":"Virtual text priority for the indentation guide","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-indent-priority"},{"id":"1982","title":"Option: vim.visuals.indent-blankline.setupOpts.indent.repeat_linebreak","content":"Repeat indentation guides on wrapped lines","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-indent-repeat_linebreak"},{"id":"1983","title":"Option: vim.visuals.indent-blankline.setupOpts.indent.smart_indent_cap","content":"Caps the number of indentation levels based on surrounding code","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-indent-smart_indent_cap"},{"id":"1984","title":"Option: vim.visuals.indent-blankline.setupOpts.indent.tab_char","content":"Character(s) for tab indentation guide.\n\nSee `:help ibl.config.indent.tab_char`.\n","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-indent-tab_char"},{"id":"1985","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.char","content":"The character(s) for the scope indentation guide","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-char"},{"id":"1986","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.enabled","content":"Highlight current scope from treesitter","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-enabled"},{"id":"1987","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.exclude.language","content":"The list of treesitter languages to disable scope for.\n\n`*` can be used as a wildcard for every language/node type.\n","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-exclude-language"},{"id":"1988","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.exclude.node_type","content":"Nodes to ignore in scope checking, per language.\n\n`*` can be used as a wildcard for every language.\n","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-exclude-node_type"},{"id":"1989","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.highlight","content":"The highlight group(s) applied to the scope.\n\nSee `:help `ibl.config.scope.highlight`.\n","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-highlight"},{"id":"1990","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.include.node_type","content":"Additional nodes to be used for scope checking, per language","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-include-node_type"},{"id":"1991","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.injected_languages","content":"Check for injected languages (treesitter)","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-injected_languages"},{"id":"1992","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.priority","content":"Virtual text priority for the scope","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-priority"},{"id":"1993","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.show_end","content":"Show an underline on the last line of the scope","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-show_end"},{"id":"1994","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.show_exact_scope","content":"Show the scope underline at the exact start of the scope, even if that's to the right of the indentation guide","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-show_exact_scope"},{"id":"1995","title":"Option: vim.visuals.indent-blankline.setupOpts.scope.show_start","content":"Show an underline on the first line of the scope","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-scope-show_start"},{"id":"1996","title":"Option: vim.visuals.indent-blankline.setupOpts.viewport_buffer.max","content":"Number of lines above and below of what is currently\n            visible in the window","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-viewport_buffer-max"},{"id":"1997","title":"Option: vim.visuals.indent-blankline.setupOpts.viewport_buffer.min","content":"Number of lines above and below of what is currently\n            visible in the window","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-viewport_buffer-min"},{"id":"1998","title":"Option: vim.visuals.indent-blankline.setupOpts.whitespace.highlight","content":"The highlight group(s) applied to whitespace.\n\nSee `:help ibl.config.whitespace.highlight`.\n","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-whitespace-highlight"},{"id":"1999","title":"Option: vim.visuals.indent-blankline.setupOpts.whitespace.remove_blankline_trail","content":"Remove trailing whitespace on blanklines","path":"options.html#option-vim-visuals-indent-blankline-setupOpts-whitespace-remove_blankline_trail"},{"id":"2000","title":"Option: vim.visuals.nvim-cursorline.enable","content":"Whether to enable cursor word and line highlighting [nvim-cursorline].","path":"options.html#option-vim-visuals-nvim-cursorline-enable"},{"id":"2001","title":"Option: vim.visuals.nvim-cursorline.setupOpts","content":"Option table to pass into the setup function of nvim-cursorline\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-visuals-nvim-cursorline-setupOpts"},{"id":"2002","title":"Option: vim.visuals.nvim-cursorline.setupOpts.cursorline.enable","content":"Whether to enable cursor line highlighting.","path":"options.html#option-vim-visuals-nvim-cursorline-setupOpts-cursorline-enable"},{"id":"2003","title":"Option: vim.visuals.nvim-cursorline.setupOpts.cursorline.number","content":"If true, `vim.wo.cursorlineopt` will be set to \"number\"\nwhen the trigger conditions are met.\n","path":"options.html#option-vim-visuals-nvim-cursorline-setupOpts-cursorline-number"},{"id":"2004","title":"Option: vim.visuals.nvim-cursorline.setupOpts.cursorline.timeout","content":"Cursorline timeout","path":"options.html#option-vim-visuals-nvim-cursorline-setupOpts-cursorline-timeout"},{"id":"2005","title":"Option: vim.visuals.nvim-cursorline.setupOpts.cursorword.enable","content":"Whether to enable cursor word highlighting.","path":"options.html#option-vim-visuals-nvim-cursorline-setupOpts-cursorword-enable"},{"id":"2006","title":"Option: vim.visuals.nvim-cursorline.setupOpts.cursorword.hl.underline","content":"Whether to underline matching cursorword","path":"options.html#option-vim-visuals-nvim-cursorline-setupOpts-cursorword-hl-underline"},{"id":"2007","title":"Option: vim.visuals.nvim-cursorline.setupOpts.cursorword.min_length","content":"The min_length option defines the minimum number of characters\na word must have to be highlighted as a \"cursor word.\" Any word\nshorter than this value will be ignored and not highlighted.\n","path":"options.html#option-vim-visuals-nvim-cursorline-setupOpts-cursorword-min_length"},{"id":"2008","title":"Option: vim.visuals.nvim-cursorline.setupOpts.cursorword.timeout","content":"Cursorword timeout","path":"options.html#option-vim-visuals-nvim-cursorline-setupOpts-cursorword-timeout"},{"id":"2009","title":"Option: vim.visuals.nvim-scrollbar.enable","content":"Whether to enable extensible Neovim Scrollbar  [nvim-scrollbar].","path":"options.html#option-vim-visuals-nvim-scrollbar-enable"},{"id":"2010","title":"Option: vim.visuals.nvim-scrollbar.setupOpts","content":"Option table to pass into the setup function of scrollbar-nvim\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-visuals-nvim-scrollbar-setupOpts"},{"id":"2011","title":"Option: vim.visuals.nvim-scrollbar.setupOpts.excluded_filetypes","content":"Filetypes to hide the scrollbar on","path":"options.html#option-vim-visuals-nvim-scrollbar-setupOpts-excluded_filetypes"},{"id":"2012","title":"Option: vim.visuals.nvim-web-devicons.enable","content":"Whether to enable Neovim dev icons [nvim-web-devicons].","path":"options.html#option-vim-visuals-nvim-web-devicons-enable"},{"id":"2013","title":"Option: vim.visuals.nvim-web-devicons.setupOpts","content":"Option table to pass into the setup function of nvim-web-devicons\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-visuals-nvim-web-devicons-setupOpts"},{"id":"2014","title":"Option: vim.visuals.nvim-web-devicons.setupOpts.color_icons","content":"Whether to enable different highlight colors per icon.","path":"options.html#option-vim-visuals-nvim-web-devicons-setupOpts-color_icons"},{"id":"2015","title":"Option: vim.visuals.nvim-web-devicons.setupOpts.override","content":"Your personal icon overrides.\n\nYou can specify color or cterm_color instead of specifying\nboth of them. DevIcon will be appended to `name`\n","path":"options.html#option-vim-visuals-nvim-web-devicons-setupOpts-override"},{"id":"2016","title":"Option: vim.visuals.nvim-web-devicons.setupOpts.variant","content":"Set the light or dark variant manually, instead of relying on `background`","path":"options.html#option-vim-visuals-nvim-web-devicons-setupOpts-variant"},{"id":"2017","title":"Option: vim.visuals.rainbow-delimiters.enable","content":"Whether to enable rainbow-delimiters.","path":"options.html#option-vim-visuals-rainbow-delimiters-enable"},{"id":"2018","title":"Option: vim.visuals.rainbow-delimiters.setupOpts","content":"Option table to pass into the setup function of rainbow-delimiters\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-visuals-rainbow-delimiters-setupOpts"},{"id":"2019","title":"Option: vim.visuals.tiny-devicons-auto-colors.enable","content":"Whether to enable alternative nvim-web-devicons icon colors [tiny-devicons-auto-colors].","path":"options.html#option-vim-visuals-tiny-devicons-auto-colors-enable"},{"id":"2020","title":"Option: vim.visuals.tiny-devicons-auto-colors.setupOpts","content":"Option table to pass into the setup function of tiny-devicons-auto-colors\n\nYou can pass in any additional options even if they're\nnot listed in the docs\n","path":"options.html#option-vim-visuals-tiny-devicons-auto-colors-setupOpts"},{"id":"2021","title":"Option: vim.visuals.tiny-devicons-auto-colors.setupOpts.factors.cache.enabled","content":"Whether to enable caching of icon colors. This will greatly improve performance.","path":"options.html#option-vim-visuals-tiny-devicons-auto-colors-setupOpts-factors-cache-enabled"},{"id":"2022","title":"Option: vim.visuals.tiny-devicons-auto-colors.setupOpts.factors.cache.path","content":"Path to the cache file","path":"options.html#option-vim-visuals-tiny-devicons-auto-colors-setupOpts-factors-cache-path"},{"id":"2023","title":"Option: vim.visuals.tiny-devicons-auto-colors.setupOpts.factors.chroma","content":"Chroma factor of icons","path":"options.html#option-vim-visuals-tiny-devicons-auto-colors-setupOpts-factors-chroma"},{"id":"2024","title":"Option: vim.visuals.tiny-devicons-auto-colors.setupOpts.factors.hue","content":"Hue factor of icons","path":"options.html#option-vim-visuals-tiny-devicons-auto-colors-setupOpts-factors-hue"},{"id":"2025","title":"Option: vim.visuals.tiny-devicons-auto-colors.setupOpts.factors.lightness","content":"Lightness factor of icons","path":"options.html#option-vim-visuals-tiny-devicons-auto-colors-setupOpts-factors-lightness"},{"id":"2026","title":"Option: vim.withNodeJs","content":"Whether to enable NodeJs support in the Neovim wrapper\n.","path":"options.html#option-vim-withNodeJs"},{"id":"2027","title":"Option: vim.withPython3","content":"Whether to enable Python3 support in the Neovim wrapper\n.","path":"options.html#option-vim-withPython3"},{"id":"2028","title":"Option: vim.withRuby","content":"Whether to enable Ruby support in the Neovim wrapper.\n.","path":"options.html#option-vim-withRuby"}]